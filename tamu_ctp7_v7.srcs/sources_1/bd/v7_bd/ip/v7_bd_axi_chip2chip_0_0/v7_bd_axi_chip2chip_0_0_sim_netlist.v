// Copyright 1986-2015 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2015.4 (lin64) Build 1412921 Wed Nov 18 09:44:32 MST 2015
// Date        : Wed Apr 13 12:36:13 2016
// Host        : evka-pc running 64-bit Ubuntu 14.04.4 LTS
// Command     : write_verilog -force -mode funcsim
//               /home/evka/code/tamu_ctp7_v7/tamu_ctp7_v7.srcs/sources_1/bd/v7_bd/ip/v7_bd_axi_chip2chip_0_0/v7_bd_axi_chip2chip_0_0_sim_netlist.v
// Design      : v7_bd_axi_chip2chip_0_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7vx690tffg1927-2
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "v7_bd_axi_chip2chip_0_0,axi_chip2chip_v4_2_7,{}" *) (* CORE_GENERATION_INFO = "v7_bd_axi_chip2chip_0_0,axi_chip2chip_v4_2_7,{x_ipProduct=Vivado 2015.4,x_ipVendor=xilinx.com,x_ipLibrary=ip,x_ipName=axi_chip2chip,x_ipVersion=4.2,x_ipCoreRevision=7,x_ipLanguage=VHDL,x_ipSimLanguage=MIXED,C_FAMILY=virtex7,C_INSTANCE=axi_c2c,C_SIMULATION=0,C_MASTER_FPGA=0,C_AXI_BUS_TYPE=0,C_COMMON_CLK=0,C_INTERFACE_TYPE=1,C_INTERFACE_MODE=1,C_NUM_OF_IO=32,C_SELECTIO_PHY_CLK=200,C_INCLUDE_AXILITE=2,C_AXI_DATA_WIDTH=32,C_AXI_ID_WIDTH=1,C_AXI_WUSER_WIDTH=1,C_DISABLE_DESKEW=0,C_DISABLE_CLK_SHIFT=0,C_USE_DIFF_CLK=0,C_USE_DIFF_IO=0,C_AURORA_WIDTH=4096,C_ECC_ENABLE=1,C_AXI_STB_WIDTH=4,C_AXI_ADDR_WIDTH=32,C_AXI_LEN_WIDTH=8,C_AXI_SIZE_WIDTH=3,C_AXI_BRST_WIDTH=2,C_AXI_RESP_WIDTH=2,C_INTERRUPT_WIDTH=4,C_AXI_LITE_ADDR_WIDTH=32,C_AXI_LITE_PROT_WIDTH=2,C_AXI_LITE_DATA_WIDTH=32,C_AXI_LITE_STB_WIDTH=4,C_AXI_LITE_RESP_WIDTH=2}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* X_CORE_INFO = "axi_chip2chip_v4_2_7,Vivado 2015.4" *) 
(* NotValidForBitStream *)
module v7_bd_axi_chip2chip_0_0
   (m_aclk,
    m_aresetn,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wuser,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_rvalid,
    m_axi_rready,
    axi_c2c_s2m_intr_in,
    axi_c2c_m2s_intr_out,
    idelay_ref_clk,
    axi_c2c_selio_tx_clk_out,
    axi_c2c_selio_tx_data_out,
    axi_c2c_selio_rx_clk_in,
    axi_c2c_selio_rx_data_in,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    m_axi_lite_aclk,
    m_axi_lite_awaddr,
    m_axi_lite_awprot,
    m_axi_lite_awvalid,
    m_axi_lite_awready,
    m_axi_lite_wdata,
    m_axi_lite_wstrb,
    m_axi_lite_wvalid,
    m_axi_lite_wready,
    m_axi_lite_bresp,
    m_axi_lite_bvalid,
    m_axi_lite_bready,
    m_axi_lite_araddr,
    m_axi_lite_arprot,
    m_axi_lite_arvalid,
    m_axi_lite_arready,
    m_axi_lite_rdata,
    m_axi_lite_rresp,
    m_axi_lite_rvalid,
    m_axi_lite_rready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_aclk CLK" *) input m_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 m_aresetn RST" *) input m_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWID" *) output [0:0]m_axi_awid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWADDR" *) output [31:0]m_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWLEN" *) output [7:0]m_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWSIZE" *) output [2:0]m_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWBURST" *) output [1:0]m_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWVALID" *) output m_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWREADY" *) input m_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WUSER" *) output [0:0]m_axi_wuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WDATA" *) output [31:0]m_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WSTRB" *) output [3:0]m_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WLAST" *) output m_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WVALID" *) output m_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WREADY" *) input m_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BID" *) input [0:0]m_axi_bid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BRESP" *) input [1:0]m_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BVALID" *) input m_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BREADY" *) output m_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARID" *) output [0:0]m_axi_arid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARADDR" *) output [31:0]m_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARLEN" *) output [7:0]m_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARSIZE" *) output [2:0]m_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARBURST" *) output [1:0]m_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARVALID" *) output m_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARREADY" *) input m_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RID" *) input [0:0]m_axi_rid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RDATA" *) input [31:0]m_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RRESP" *) input [1:0]m_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RLAST" *) input m_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RVALID" *) input m_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RREADY" *) output m_axi_rready;
  input [3:0]axi_c2c_s2m_intr_in;
  output [3:0]axi_c2c_m2s_intr_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 idelay_ref_clk CLK" *) input idelay_ref_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_selio_tx_clk_out CLK" *) output axi_c2c_selio_tx_clk_out;
  output [14:0]axi_c2c_selio_tx_data_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_selio_rx_clk_in CLK" *) input axi_c2c_selio_rx_clk_in;
  input [14:0]axi_c2c_selio_rx_data_in;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_axi_lite_aclk CLK" *) input m_axi_lite_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWADDR" *) output [31:0]m_axi_lite_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWPROT" *) output [1:0]m_axi_lite_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWVALID" *) output m_axi_lite_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWREADY" *) input m_axi_lite_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WDATA" *) output [31:0]m_axi_lite_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WSTRB" *) output [3:0]m_axi_lite_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WVALID" *) output m_axi_lite_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WREADY" *) input m_axi_lite_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite BRESP" *) input [1:0]m_axi_lite_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite BVALID" *) input m_axi_lite_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite BREADY" *) output m_axi_lite_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARADDR" *) output [31:0]m_axi_lite_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARPROT" *) output [1:0]m_axi_lite_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARVALID" *) output m_axi_lite_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARREADY" *) input m_axi_lite_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RDATA" *) input [31:0]m_axi_lite_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RRESP" *) input [1:0]m_axi_lite_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RVALID" *) input m_axi_lite_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RREADY" *) output m_axi_lite_rready;

  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_out;
  wire axi_c2c_multi_bit_error_out;
  wire [3:0]axi_c2c_s2m_intr_in;
  (* IBUF_LOW_PWR *) wire axi_c2c_selio_rx_clk_in;
  (* IBUF_LOW_PWR *) wire [14:0]axi_c2c_selio_rx_data_in;
  (* DRIVE = "12" *) (* SLEW = "SLOW" *) wire axi_c2c_selio_tx_clk_out;
  (* DRIVE = "12" *) (* SLEW = "SLOW" *) wire [14:0]axi_c2c_selio_tx_data_out;
  wire idelay_ref_clk;
  wire m_aclk;
  wire m_aresetn;
  wire [31:0]m_axi_araddr;
  wire [1:0]m_axi_arburst;
  wire [0:0]m_axi_arid;
  wire [7:0]m_axi_arlen;
  wire m_axi_arready;
  wire [2:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [1:0]m_axi_awburst;
  wire [0:0]m_axi_awid;
  wire [7:0]m_axi_awlen;
  wire m_axi_awready;
  wire [2:0]m_axi_awsize;
  wire m_axi_awvalid;
  wire [0:0]m_axi_bid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire m_axi_lite_aclk;
  wire [31:0]m_axi_lite_araddr;
  wire [1:0]m_axi_lite_arprot;
  wire m_axi_lite_arready;
  wire m_axi_lite_arvalid;
  wire [31:0]m_axi_lite_awaddr;
  wire [1:0]m_axi_lite_awprot;
  wire m_axi_lite_awready;
  wire m_axi_lite_awvalid;
  wire m_axi_lite_bready;
  wire [1:0]m_axi_lite_bresp;
  wire m_axi_lite_bvalid;
  wire [31:0]m_axi_lite_rdata;
  wire m_axi_lite_rready;
  wire [1:0]m_axi_lite_rresp;
  wire m_axi_lite_rvalid;
  wire [31:0]m_axi_lite_wdata;
  wire m_axi_lite_wready;
  wire [3:0]m_axi_lite_wstrb;
  wire m_axi_lite_wvalid;
  wire [31:0]m_axi_rdata;
  wire [0:0]m_axi_rid;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [31:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [3:0]m_axi_wstrb;
  wire [0:0]m_axi_wuser;
  wire m_axi_wvalid;
  wire NLW_inst_aurora_do_cc_UNCONNECTED;
  wire NLW_inst_aurora_pma_init_out_UNCONNECTED;
  wire NLW_inst_aurora_reset_pb_UNCONNECTED;
  wire NLW_inst_axi_c2c_aurora_tx_tvalid_UNCONNECTED;
  wire NLW_inst_axi_c2c_config_error_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_link_error_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED;
  wire NLW_inst_m_aclk_out_UNCONNECTED;
  wire NLW_inst_s_axi_arready_UNCONNECTED;
  wire NLW_inst_s_axi_awready_UNCONNECTED;
  wire NLW_inst_s_axi_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_arready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_awready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_wready_UNCONNECTED;
  wire NLW_inst_s_axi_rlast_UNCONNECTED;
  wire NLW_inst_s_axi_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_wready_UNCONNECTED;
  wire [4095:0]NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_axi_c2c_s2m_intr_out_UNCONNECTED;
  wire [14:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED;
  wire [14:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_bresp_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_lite_rdata_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_rresp_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;

  (* ADDR_MUX_RATIO = "2" *) 
  (* AFIFO_DATA_SIZE = "45" *) 
  (* AFIFO_DATA_SIZE_M2 = "1" *) 
  (* AFIFO_DATA_SIZE_M3 = "0" *) 
  (* AFIFO_DATA_SIZE_M4 = "1" *) 
  (* AFIFO_TIE_WIDTH = "2" *) 
  (* AFIFO_WIDTH = "46" *) 
  (* AWB_FC_WIDTH = "2" *) 
  (* AXILITE_WIDTH = "20" *) 
  (* BFIFO_DATA_SIZE = "3" *) 
  (* BFIFO_WIDTH = "3" *) 
  (* C_AURORA_WIDTH = "4096" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_BRST_WIDTH = "2" *) 
  (* C_AXI_BUS_TYPE = "0" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LITE_ADDR_WIDTH = "32" *) 
  (* C_AXI_LITE_DATA_WIDTH = "32" *) 
  (* C_AXI_LITE_PROT_WIDTH = "2" *) 
  (* C_AXI_LITE_RESP_WIDTH = "2" *) 
  (* C_AXI_LITE_STB_WIDTH = "4" *) 
  (* C_AXI_RESP_WIDTH = "2" *) 
  (* C_AXI_SIZE_WIDTH = "3" *) 
  (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
  (* C_AXI_STB_WIDTH = "4" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_DISABLE_CLK_SHIFT = "0" *) 
  (* C_DISABLE_DESKEW = "0" *) 
  (* C_ECC_ENABLE = "1" *) 
  (* C_FAMILY = "virtex7" *) 
  (* C_INCLUDE_AXILITE = "2" *) 
  (* C_INSTANCE = "axi_c2c" *) 
  (* C_INTERFACE_MODE = "1" *) 
  (* C_INTERFACE_TYPE = "1" *) 
  (* C_INTERRUPT_WIDTH = "4" *) 
  (* C_MASTER_FPGA = "0" *) 
  (* C_NUM_OF_IO = "32" *) 
  (* C_PHY_SELECT = "0" *) 
  (* C_SELECTIO_DDR = "1" *) 
  (* C_SELECTIO_PHY_CLK = "200" *) 
  (* C_SELECTIO_WIDTH = "15" *) 
  (* C_SIMULATION = "0" *) 
  (* C_SYNC_STAGE = "5" *) 
  (* C_USE_DIFF_CLK = "0" *) 
  (* C_USE_DIFF_IO = "0" *) 
  (* C_WIDTH_CONVERSION = "2" *) 
  (* DATA_MUX_RATIO = "2" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* PHY_CTRL_WIDTH = "3" *) 
  (* PHY_DATA_WIDTH = "30" *) 
  (* RB_FC_WIDTH = "3" *) 
  (* RFIFO_DATA_SIZE = "36" *) 
  (* RFIFO_DATA_SIZE_M2 = "0" *) 
  (* RFIFO_DATA_SIZE_M3 = "0" *) 
  (* RFIFO_DATA_SIZE_M4 = "0" *) 
  (* RFIFO_TIE_WIDTH = "1" *) 
  (* RFIFO_WIDTH = "36" *) 
  (* TDM_ID_WIDTH = "2" *) 
  (* TDM_VAL_BITS = "1" *) 
  (* WFIFO_DATA_SIZE = "38" *) 
  (* WFIFO_DATA_SIZE_M2 = "0" *) 
  (* WFIFO_DATA_SIZE_M3 = "2" *) 
  (* WFIFO_DATA_SIZE_M4 = "2" *) 
  (* WFIFO_TIE_WIDTH = "1" *) 
  (* WFIFO_WIDTH = "38" *) 
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7 inst
       (.aurora_do_cc(NLW_inst_aurora_do_cc_UNCONNECTED),
        .aurora_init_clk(1'b0),
        .aurora_mmcm_not_locked(1'b0),
        .aurora_pma_init_in(1'b0),
        .aurora_pma_init_out(NLW_inst_aurora_pma_init_out_UNCONNECTED),
        .aurora_reset_pb(NLW_inst_aurora_reset_pb_UNCONNECTED),
        .axi_c2c_aurora_channel_up(1'b0),
        .axi_c2c_aurora_rx_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_aurora_rx_tvalid(1'b0),
        .axi_c2c_aurora_tx_tdata(NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED[4095:0]),
        .axi_c2c_aurora_tx_tready(1'b0),
        .axi_c2c_aurora_tx_tvalid(NLW_inst_axi_c2c_aurora_tx_tvalid_UNCONNECTED),
        .axi_c2c_config_error_out(NLW_inst_axi_c2c_config_error_out_UNCONNECTED),
        .axi_c2c_link_error_out(NLW_inst_axi_c2c_link_error_out_UNCONNECTED),
        .axi_c2c_link_status_out(axi_c2c_link_status_out),
        .axi_c2c_m2s_intr_in({1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_m2s_intr_out(axi_c2c_m2s_intr_out),
        .axi_c2c_multi_bit_error_out(axi_c2c_multi_bit_error_out),
        .axi_c2c_phy_clk(1'b0),
        .axi_c2c_s2m_intr_in(axi_c2c_s2m_intr_in),
        .axi_c2c_s2m_intr_out(NLW_inst_axi_c2c_s2m_intr_out_UNCONNECTED[3:0]),
        .axi_c2c_selio_rx_clk_in(axi_c2c_selio_rx_clk_in),
        .axi_c2c_selio_rx_data_in(axi_c2c_selio_rx_data_in),
        .axi_c2c_selio_rx_diff_clk_in_n(1'b0),
        .axi_c2c_selio_rx_diff_clk_in_p(1'b0),
        .axi_c2c_selio_rx_diff_data_in_n({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_data_in_p({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_tx_clk_out(axi_c2c_selio_tx_clk_out),
        .axi_c2c_selio_tx_data_out(axi_c2c_selio_tx_data_out),
        .axi_c2c_selio_tx_diff_clk_out_n(NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED),
        .axi_c2c_selio_tx_diff_clk_out_p(NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED),
        .axi_c2c_selio_tx_diff_data_out_n(NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED[14:0]),
        .axi_c2c_selio_tx_diff_data_out_p(NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED[14:0]),
        .idelay_ref_clk(idelay_ref_clk),
        .m_aclk(m_aclk),
        .m_aclk_out(NLW_inst_m_aclk_out_UNCONNECTED),
        .m_aresetn(m_aresetn),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arburst(m_axi_arburst),
        .m_axi_arid(m_axi_arid),
        .m_axi_arlen(m_axi_arlen),
        .m_axi_arready(m_axi_arready),
        .m_axi_arsize(m_axi_arsize),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr(m_axi_awaddr),
        .m_axi_awburst(m_axi_awburst),
        .m_axi_awid(m_axi_awid),
        .m_axi_awlen(m_axi_awlen),
        .m_axi_awready(m_axi_awready),
        .m_axi_awsize(m_axi_awsize),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bid(m_axi_bid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .m_axi_lite_araddr(m_axi_lite_araddr),
        .m_axi_lite_arprot(m_axi_lite_arprot),
        .m_axi_lite_arready(m_axi_lite_arready),
        .m_axi_lite_arvalid(m_axi_lite_arvalid),
        .m_axi_lite_awaddr(m_axi_lite_awaddr),
        .m_axi_lite_awprot(m_axi_lite_awprot),
        .m_axi_lite_awready(m_axi_lite_awready),
        .m_axi_lite_awvalid(m_axi_lite_awvalid),
        .m_axi_lite_bready(m_axi_lite_bready),
        .m_axi_lite_bresp(m_axi_lite_bresp),
        .m_axi_lite_bvalid(m_axi_lite_bvalid),
        .m_axi_lite_rdata(m_axi_lite_rdata),
        .m_axi_lite_rready(m_axi_lite_rready),
        .m_axi_lite_rresp(m_axi_lite_rresp),
        .m_axi_lite_rvalid(m_axi_lite_rvalid),
        .m_axi_lite_wdata(m_axi_lite_wdata),
        .m_axi_lite_wready(m_axi_lite_wready),
        .m_axi_lite_wstrb(m_axi_lite_wstrb),
        .m_axi_lite_wvalid(m_axi_lite_wvalid),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rid(m_axi_rid),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .m_axi_wuser(m_axi_wuser),
        .m_axi_wvalid(m_axi_wvalid),
        .s_aclk(1'b0),
        .s_aresetn(1'b1),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_inst_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_inst_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_inst_s_axi_bvalid_UNCONNECTED),
        .s_axi_lite_aclk(1'b0),
        .s_axi_lite_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_arprot({1'b0,1'b0}),
        .s_axi_lite_arready(NLW_inst_s_axi_lite_arready_UNCONNECTED),
        .s_axi_lite_arvalid(1'b0),
        .s_axi_lite_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_awprot({1'b0,1'b0}),
        .s_axi_lite_awready(NLW_inst_s_axi_lite_awready_UNCONNECTED),
        .s_axi_lite_awvalid(1'b0),
        .s_axi_lite_bready(1'b0),
        .s_axi_lite_bresp(NLW_inst_s_axi_lite_bresp_UNCONNECTED[1:0]),
        .s_axi_lite_bvalid(NLW_inst_s_axi_lite_bvalid_UNCONNECTED),
        .s_axi_lite_rdata(NLW_inst_s_axi_lite_rdata_UNCONNECTED[31:0]),
        .s_axi_lite_rready(1'b0),
        .s_axi_lite_rresp(NLW_inst_s_axi_lite_rresp_UNCONNECTED[1:0]),
        .s_axi_lite_rvalid(NLW_inst_s_axi_lite_rvalid_UNCONNECTED),
        .s_axi_lite_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wready(NLW_inst_s_axi_lite_wready_UNCONNECTED),
        .s_axi_lite_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wvalid(1'b0),
        .s_axi_rdata(NLW_inst_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_inst_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_inst_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_inst_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0));
endmodule

(* ADDR_MUX_RATIO = "2" *) (* AFIFO_DATA_SIZE = "45" *) (* AFIFO_DATA_SIZE_M2 = "1" *) 
(* AFIFO_DATA_SIZE_M3 = "0" *) (* AFIFO_DATA_SIZE_M4 = "1" *) (* AFIFO_TIE_WIDTH = "2" *) 
(* AFIFO_WIDTH = "46" *) (* AWB_FC_WIDTH = "2" *) (* AXILITE_WIDTH = "20" *) 
(* BFIFO_DATA_SIZE = "3" *) (* BFIFO_WIDTH = "3" *) (* C_AURORA_WIDTH = "4096" *) 
(* C_AXI_ADDR_WIDTH = "32" *) (* C_AXI_BRST_WIDTH = "2" *) (* C_AXI_BUS_TYPE = "0" *) 
(* C_AXI_DATA_WIDTH = "32" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LITE_ADDR_WIDTH = "32" *) (* C_AXI_LITE_DATA_WIDTH = "32" *) (* C_AXI_LITE_PROT_WIDTH = "2" *) 
(* C_AXI_LITE_RESP_WIDTH = "2" *) (* C_AXI_LITE_STB_WIDTH = "4" *) (* C_AXI_RESP_WIDTH = "2" *) 
(* C_AXI_SIZE_WIDTH = "3" *) (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) (* C_AXI_STB_WIDTH = "4" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLK = "0" *) (* C_DISABLE_CLK_SHIFT = "0" *) 
(* C_DISABLE_DESKEW = "0" *) (* C_ECC_ENABLE = "1" *) (* C_FAMILY = "virtex7" *) 
(* C_INCLUDE_AXILITE = "2" *) (* C_INSTANCE = "axi_c2c" *) (* C_INTERFACE_MODE = "1" *) 
(* C_INTERFACE_TYPE = "1" *) (* C_INTERRUPT_WIDTH = "4" *) (* C_MASTER_FPGA = "0" *) 
(* C_NUM_OF_IO = "32" *) (* C_PHY_SELECT = "0" *) (* C_SELECTIO_DDR = "1" *) 
(* C_SELECTIO_PHY_CLK = "200" *) (* C_SELECTIO_WIDTH = "15" *) (* C_SIMULATION = "0" *) 
(* C_SYNC_STAGE = "5" *) (* C_USE_DIFF_CLK = "0" *) (* C_USE_DIFF_IO = "0" *) 
(* C_WIDTH_CONVERSION = "2" *) (* DATA_MUX_RATIO = "2" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7" *) (* PHY_CTRL_WIDTH = "3" *) (* PHY_DATA_WIDTH = "30" *) 
(* RB_FC_WIDTH = "3" *) (* RFIFO_DATA_SIZE = "36" *) (* RFIFO_DATA_SIZE_M2 = "0" *) 
(* RFIFO_DATA_SIZE_M3 = "0" *) (* RFIFO_DATA_SIZE_M4 = "0" *) (* RFIFO_TIE_WIDTH = "1" *) 
(* RFIFO_WIDTH = "36" *) (* TDM_ID_WIDTH = "2" *) (* TDM_VAL_BITS = "1" *) 
(* WFIFO_DATA_SIZE = "38" *) (* WFIFO_DATA_SIZE_M2 = "0" *) (* WFIFO_DATA_SIZE_M3 = "2" *) 
(* WFIFO_DATA_SIZE_M4 = "2" *) (* WFIFO_TIE_WIDTH = "1" *) (* WFIFO_WIDTH = "38" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7
   (s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wuser,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    axi_c2c_m2s_intr_in,
    axi_c2c_s2m_intr_out,
    m_aclk,
    m_aresetn,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wuser,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_rvalid,
    m_axi_rready,
    axi_c2c_s2m_intr_in,
    axi_c2c_m2s_intr_out,
    idelay_ref_clk,
    axi_c2c_phy_clk,
    axi_c2c_selio_tx_clk_out,
    axi_c2c_selio_tx_data_out,
    axi_c2c_selio_rx_clk_in,
    axi_c2c_selio_rx_data_in,
    axi_c2c_selio_tx_diff_clk_out_p,
    axi_c2c_selio_tx_diff_clk_out_n,
    axi_c2c_selio_tx_diff_data_out_p,
    axi_c2c_selio_tx_diff_data_out_n,
    axi_c2c_selio_rx_diff_clk_in_p,
    axi_c2c_selio_rx_diff_clk_in_n,
    axi_c2c_selio_rx_diff_data_in_p,
    axi_c2c_selio_rx_diff_data_in_n,
    axi_c2c_aurora_channel_up,
    axi_c2c_aurora_tx_tready,
    axi_c2c_aurora_tx_tdata,
    axi_c2c_aurora_tx_tvalid,
    axi_c2c_aurora_rx_tdata,
    axi_c2c_aurora_rx_tvalid,
    aurora_do_cc,
    aurora_pma_init_in,
    aurora_init_clk,
    aurora_pma_init_out,
    aurora_mmcm_not_locked,
    aurora_reset_pb,
    axi_c2c_config_error_out,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    axi_c2c_link_error_out,
    m_aclk_out,
    s_axi_lite_aclk,
    s_axi_lite_awaddr,
    s_axi_lite_awprot,
    s_axi_lite_awvalid,
    s_axi_lite_awready,
    s_axi_lite_wdata,
    s_axi_lite_wstrb,
    s_axi_lite_wvalid,
    s_axi_lite_wready,
    s_axi_lite_bresp,
    s_axi_lite_bvalid,
    s_axi_lite_bready,
    s_axi_lite_araddr,
    s_axi_lite_arprot,
    s_axi_lite_arvalid,
    s_axi_lite_arready,
    s_axi_lite_rdata,
    s_axi_lite_rresp,
    s_axi_lite_rvalid,
    s_axi_lite_rready,
    m_axi_lite_aclk,
    m_axi_lite_awaddr,
    m_axi_lite_awprot,
    m_axi_lite_awvalid,
    m_axi_lite_awready,
    m_axi_lite_wdata,
    m_axi_lite_wstrb,
    m_axi_lite_wvalid,
    m_axi_lite_wready,
    m_axi_lite_bresp,
    m_axi_lite_bvalid,
    m_axi_lite_bready,
    m_axi_lite_araddr,
    m_axi_lite_arprot,
    m_axi_lite_arvalid,
    m_axi_lite_arready,
    m_axi_lite_rdata,
    m_axi_lite_rresp,
    m_axi_lite_rvalid,
    m_axi_lite_rready);
  input s_aclk;
  input s_aresetn;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wuser;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input [3:0]axi_c2c_m2s_intr_in;
  output [3:0]axi_c2c_s2m_intr_out;
  input m_aclk;
  input m_aresetn;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wuser;
  output [31:0]m_axi_wdata;
  output [3:0]m_axi_wstrb;
  output m_axi_wlast;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  output m_axi_bready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [31:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input m_axi_rvalid;
  output m_axi_rready;
  input [3:0]axi_c2c_s2m_intr_in;
  output [3:0]axi_c2c_m2s_intr_out;
  input idelay_ref_clk;
  input axi_c2c_phy_clk;
  output axi_c2c_selio_tx_clk_out;
  output [14:0]axi_c2c_selio_tx_data_out;
  input axi_c2c_selio_rx_clk_in;
  input [14:0]axi_c2c_selio_rx_data_in;
  output axi_c2c_selio_tx_diff_clk_out_p;
  output axi_c2c_selio_tx_diff_clk_out_n;
  output [14:0]axi_c2c_selio_tx_diff_data_out_p;
  output [14:0]axi_c2c_selio_tx_diff_data_out_n;
  input axi_c2c_selio_rx_diff_clk_in_p;
  input axi_c2c_selio_rx_diff_clk_in_n;
  input [14:0]axi_c2c_selio_rx_diff_data_in_p;
  input [14:0]axi_c2c_selio_rx_diff_data_in_n;
  input axi_c2c_aurora_channel_up;
  input axi_c2c_aurora_tx_tready;
  output [4095:0]axi_c2c_aurora_tx_tdata;
  output axi_c2c_aurora_tx_tvalid;
  input [4095:0]axi_c2c_aurora_rx_tdata;
  input axi_c2c_aurora_rx_tvalid;
  output aurora_do_cc;
  input aurora_pma_init_in;
  input aurora_init_clk;
  output aurora_pma_init_out;
  input aurora_mmcm_not_locked;
  output aurora_reset_pb;
  output axi_c2c_config_error_out;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  output axi_c2c_link_error_out;
  output m_aclk_out;
  input s_axi_lite_aclk;
  input [31:0]s_axi_lite_awaddr;
  input [1:0]s_axi_lite_awprot;
  input s_axi_lite_awvalid;
  output s_axi_lite_awready;
  input [31:0]s_axi_lite_wdata;
  input [3:0]s_axi_lite_wstrb;
  input s_axi_lite_wvalid;
  output s_axi_lite_wready;
  output [1:0]s_axi_lite_bresp;
  output s_axi_lite_bvalid;
  input s_axi_lite_bready;
  input [31:0]s_axi_lite_araddr;
  input [1:0]s_axi_lite_arprot;
  input s_axi_lite_arvalid;
  output s_axi_lite_arready;
  output [31:0]s_axi_lite_rdata;
  output [1:0]s_axi_lite_rresp;
  output s_axi_lite_rvalid;
  input s_axi_lite_rready;
  input m_axi_lite_aclk;
  output [31:0]m_axi_lite_awaddr;
  output [1:0]m_axi_lite_awprot;
  output m_axi_lite_awvalid;
  input m_axi_lite_awready;
  output [31:0]m_axi_lite_wdata;
  output [3:0]m_axi_lite_wstrb;
  output m_axi_lite_wvalid;
  input m_axi_lite_wready;
  input [1:0]m_axi_lite_bresp;
  input m_axi_lite_bvalid;
  output m_axi_lite_bready;
  output [31:0]m_axi_lite_araddr;
  output [1:0]m_axi_lite_arprot;
  output m_axi_lite_arvalid;
  input m_axi_lite_arready;
  input [31:0]m_axi_lite_rdata;
  input [1:0]m_axi_lite_rresp;
  input m_axi_lite_rvalid;
  output m_axi_lite_rready;

  wire \<const0> ;
  wire aurora_init_clk;
  wire aurora_mmcm_not_locked;
  wire aurora_pma_init_in;
  wire axi_c2c_aurora_channel_up;
  wire [4095:0]axi_c2c_aurora_rx_tdata;
  wire axi_c2c_aurora_rx_tvalid;
  wire axi_c2c_aurora_tx_tready;
  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_out;
  wire axi_c2c_multi_bit_error_out;
  wire axi_c2c_phy_clk;
  wire [3:0]axi_c2c_s2m_intr_in;
  wire axi_c2c_selio_rx_clk_in;
  wire [14:0]axi_c2c_selio_rx_data_in;
  wire axi_c2c_selio_rx_diff_clk_in_n;
  wire axi_c2c_selio_rx_diff_clk_in_p;
  wire [14:0]axi_c2c_selio_rx_diff_data_in_n;
  wire [14:0]axi_c2c_selio_rx_diff_data_in_p;
  wire axi_c2c_selio_tx_clk_out;
  wire [14:0]axi_c2c_selio_tx_data_out;
  wire [19:0]axi_lite_rx_data;
  wire axi_lite_rx_valid;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_10 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_11 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_12 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_13 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_14 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_15 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_16 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_17 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_18 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_19 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_20 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_21 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_22 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_3 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_8 ;
  wire \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_9 ;
  wire [3:0]axi_lite_tx_data;
  wire axi_lite_tx_ready;
  wire empty_fwft_i;
  wire idelay_ref_clk;
  wire lite_sync_reset;
  wire m_aclk;
  wire m_aresetn;
  wire [31:0]m_axi_araddr;
  wire [1:0]m_axi_arburst;
  wire [0:0]m_axi_arid;
  wire [7:0]m_axi_arlen;
  wire m_axi_arready;
  wire [1:0]\^m_axi_arsize ;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [1:0]m_axi_awburst;
  wire [0:0]m_axi_awid;
  wire [7:0]m_axi_awlen;
  wire m_axi_awready;
  wire [1:0]\^m_axi_awsize ;
  wire m_axi_awvalid;
  wire [0:0]m_axi_bid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire m_axi_lite_aclk;
  wire [31:0]m_axi_lite_araddr;
  wire [1:0]m_axi_lite_arprot;
  wire m_axi_lite_arready;
  wire m_axi_lite_arvalid;
  wire [31:0]m_axi_lite_awaddr;
  wire [1:0]m_axi_lite_awprot;
  wire m_axi_lite_awready;
  wire m_axi_lite_awvalid;
  wire m_axi_lite_bready;
  wire [1:0]m_axi_lite_bresp;
  wire m_axi_lite_bvalid;
  wire [31:0]m_axi_lite_rdata;
  wire m_axi_lite_rready;
  wire [1:0]m_axi_lite_rresp;
  wire m_axi_lite_rvalid;
  wire [31:0]m_axi_lite_wdata;
  wire m_axi_lite_wready;
  wire [3:0]m_axi_lite_wstrb;
  wire m_axi_lite_wvalid;
  wire [31:0]m_axi_rdata;
  wire [0:0]m_axi_rid;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [31:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [3:0]m_axi_wstrb;
  wire [0:0]m_axi_wuser;
  wire m_axi_wvalid;
  wire mmcm_idelay_reset;
  wire rx_phy_ready;
  wire rx_user_clk;
  wire [29:0]rx_user_data;
  wire rx_user_reset;
  wire \slave_fpga_gen.axi_chip2chip_slave_inst_n_2 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_inst_n_4 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_10 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_11 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_12 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_13 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_14 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_15 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_6 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_9 ;
  wire tx_ch0_valid;
  wire [2:1]tx_phy_ctrl;
  wire tx_phy_ready;
  wire [29:0]tx_user_data;

  assign aurora_do_cc = \<const0> ;
  assign aurora_pma_init_out = \<const0> ;
  assign aurora_reset_pb = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4095] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4094] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4093] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4092] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4091] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4090] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4089] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4088] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4087] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4086] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4085] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4084] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4083] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4082] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4081] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4080] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4079] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4078] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4077] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4076] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4075] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4074] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4073] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4072] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4071] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4070] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4069] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4068] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4067] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4066] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4065] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4064] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4063] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4062] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4061] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4060] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4059] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4058] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4057] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4056] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4055] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4054] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4053] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4052] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4051] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4050] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4049] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4048] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4047] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4046] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4045] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4044] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4043] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4042] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4041] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4040] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4039] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4038] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4037] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4036] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4035] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4034] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4033] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4032] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4031] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4030] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4029] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4028] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4027] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4026] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4025] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4024] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4023] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4022] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4021] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4020] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4019] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4018] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4017] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4016] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4015] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4014] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4013] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4012] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4011] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4010] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4009] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4008] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4007] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4006] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4005] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4004] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4003] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4002] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4001] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4000] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3999] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3998] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3997] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3996] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3995] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3994] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3993] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3992] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3991] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3990] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3989] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3988] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3987] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3986] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3985] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3984] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3983] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3982] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3981] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3980] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3979] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3978] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3977] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3976] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3975] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3974] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3973] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3972] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3971] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3970] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3969] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3968] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3967] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3966] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3965] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3964] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3963] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3962] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3961] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3960] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3959] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3958] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3957] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3956] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3955] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3954] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3953] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3952] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3951] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3950] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3949] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3948] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3947] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3946] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3945] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3944] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3943] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3942] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3941] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3940] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3939] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3938] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3937] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3936] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3935] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3934] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3933] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3932] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3931] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3930] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3929] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3928] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3927] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3926] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3925] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3924] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3923] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3922] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3921] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3920] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3919] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3918] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3917] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3916] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3915] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3914] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3913] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3912] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3911] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3910] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3909] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3908] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3907] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3906] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3905] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3904] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3903] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3902] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3901] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3900] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3899] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3898] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3897] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3896] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3895] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3894] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3893] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3892] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3891] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3890] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3889] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3888] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3887] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3886] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3885] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3884] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3883] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3882] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3881] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3880] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3879] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3878] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3877] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3876] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3875] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3874] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3873] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3872] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3871] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3870] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3869] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3868] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3867] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3866] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3865] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3864] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3863] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3862] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3861] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3860] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3859] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3858] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3857] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3856] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3855] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3854] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3853] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3852] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3851] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3850] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3849] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3848] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3847] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3846] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3845] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3844] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3843] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3842] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3841] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3840] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3839] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3838] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3837] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3836] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3835] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3834] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3833] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3832] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3831] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3830] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3829] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3828] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3827] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3826] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3825] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3824] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3823] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3822] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3821] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3820] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3819] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3818] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3817] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3816] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3815] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3814] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3813] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3812] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3811] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3810] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3809] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3808] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3807] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3806] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3805] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3804] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3803] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3802] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3801] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3800] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3799] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3798] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3797] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3796] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3795] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3794] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3793] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3792] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3791] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3790] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3789] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3788] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3787] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3786] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3785] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3784] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3783] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3782] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3781] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3780] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3779] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3778] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3777] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3776] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3775] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3774] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3773] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3772] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3771] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3770] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3769] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3768] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3767] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3766] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3765] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3764] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3763] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3762] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3761] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3760] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3759] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3758] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3757] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3756] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3755] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3754] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3753] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3752] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3751] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3750] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3749] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3748] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3747] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3746] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3745] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3744] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3743] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3742] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3741] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3740] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3739] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3738] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3737] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3736] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3735] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3734] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3733] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3732] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3731] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3730] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3729] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3728] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3727] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3726] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3725] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3724] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3723] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3722] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3721] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3720] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3719] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3718] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3717] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3716] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3715] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3714] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3713] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3712] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3711] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3710] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3709] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3708] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3707] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3706] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3705] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3704] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3703] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3702] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3701] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3700] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3699] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3698] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3697] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3696] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3695] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3694] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3693] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3692] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3691] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3690] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3689] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3688] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3687] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3686] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3685] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3684] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3683] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3682] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3681] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3680] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3679] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3678] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3677] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3676] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3675] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3674] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3673] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3672] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3671] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3670] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3669] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3668] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3667] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3666] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3665] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3664] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3663] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3662] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3661] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3660] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3659] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3658] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3657] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3656] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3655] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3654] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3653] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3652] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3651] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3650] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3649] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3648] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3647] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3646] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3645] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3644] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3643] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3642] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3641] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3640] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3639] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3638] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3637] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3636] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3635] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3634] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3633] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3632] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3631] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3630] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3629] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3628] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3627] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3626] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3625] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3624] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3623] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3622] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3621] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3620] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3619] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3618] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3617] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3616] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3615] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3614] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3613] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3612] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3611] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3610] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3609] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3608] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3607] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3606] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3605] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3604] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3603] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3602] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3601] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3600] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3599] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3598] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3597] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3596] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3595] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3594] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3593] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3592] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3591] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3590] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3589] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3588] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3587] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3586] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3585] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3584] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3583] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3582] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3581] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3580] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3579] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3578] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3577] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3576] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3575] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3574] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3573] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3572] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3571] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3570] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3569] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3568] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3567] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3566] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3565] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3564] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3563] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3562] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3561] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3560] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3559] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3558] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3557] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3556] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3555] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3554] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3553] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3552] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3551] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3550] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3549] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3548] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3547] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3546] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3545] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3544] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3543] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3542] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3541] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3540] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3539] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3538] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3537] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3536] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3535] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3534] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3533] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3532] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3531] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3530] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3529] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3528] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3527] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3526] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3525] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3524] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3523] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3522] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3521] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3520] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3519] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3518] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3517] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3516] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3515] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3514] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3513] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3512] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3511] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3510] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3509] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3508] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3507] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3506] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3505] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3504] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3503] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3502] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3501] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3500] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3499] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3498] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3497] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3496] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3495] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3494] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3493] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3492] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3491] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3490] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3489] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3488] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3487] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3486] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3485] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3484] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3483] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3482] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3481] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3480] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3479] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3478] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3477] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3476] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3475] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3474] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3473] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3472] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3471] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3470] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3469] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3468] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3467] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3466] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3465] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3464] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3463] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3462] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3461] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3460] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3459] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3458] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3457] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3456] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3455] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3454] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3453] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3452] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3451] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3450] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3449] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3448] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3447] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3446] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3445] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3444] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3443] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3442] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3441] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3440] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3439] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3438] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3437] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3436] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3435] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3434] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3433] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3432] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3431] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3430] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3429] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3428] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3427] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3426] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3425] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3424] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3423] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3422] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3421] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3420] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3419] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3418] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3417] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3416] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3415] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3414] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3413] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3412] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3411] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3410] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3409] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3408] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3407] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3406] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3405] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3404] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3403] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3402] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3401] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3400] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3399] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3398] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3397] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3396] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3395] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3394] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3393] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3392] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3391] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3390] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3389] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3388] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3387] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3386] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3385] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3384] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3383] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3382] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3381] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3380] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3379] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3378] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3377] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3376] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3375] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3374] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3373] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3372] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3371] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3370] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3369] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3368] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3367] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3366] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3365] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3364] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3363] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3362] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3361] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3360] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3359] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3358] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3357] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3356] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3355] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3354] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3353] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3352] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3351] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3350] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3349] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3348] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3347] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3346] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3345] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3344] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3343] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3342] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3341] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3340] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3339] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3338] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3337] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3336] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3335] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3334] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3333] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3332] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3331] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3330] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3329] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3328] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3327] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3326] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3325] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3324] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3323] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3322] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3321] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3320] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3319] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3318] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3317] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3316] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3315] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3314] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3313] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3312] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3311] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3310] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3309] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3308] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3307] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3306] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3305] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3304] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3303] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3302] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3301] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3300] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3299] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3298] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3297] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3296] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3295] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3294] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3293] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3292] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3291] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3290] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3289] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3288] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3287] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3286] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3285] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3284] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3283] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3282] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3281] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3280] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3279] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3278] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3277] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3276] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3275] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3274] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3273] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3272] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3271] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3270] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3269] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3268] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3267] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3266] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3265] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3264] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3263] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3262] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3261] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3260] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3259] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3258] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3257] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3256] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3255] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3254] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3253] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3252] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3251] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3250] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3249] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3248] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3247] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3246] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3245] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3244] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3243] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3242] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3241] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3240] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3239] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3238] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3237] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3236] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3235] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3234] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3233] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3232] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3231] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3230] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3229] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3228] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3227] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3226] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3225] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3224] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3223] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3222] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3221] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3220] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3219] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3218] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3217] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3216] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3215] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3214] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3213] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3212] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3211] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3210] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3209] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3208] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3207] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3206] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3205] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3204] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3203] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3202] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3201] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3200] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3199] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3198] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3197] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3196] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3195] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3194] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3193] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3192] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3191] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3190] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3189] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3188] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3187] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3186] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3185] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3184] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3183] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3182] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3181] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3180] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3179] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3178] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3177] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3176] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3175] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3174] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3173] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3172] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3171] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3170] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3169] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3168] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3167] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3166] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3165] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3164] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3163] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3162] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3161] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3160] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3159] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3158] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3157] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3156] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3155] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3154] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3153] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3152] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3151] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3150] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3149] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3148] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3147] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3146] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3145] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3144] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3143] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3142] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3141] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3140] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3139] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3138] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3137] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3136] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3135] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3134] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3133] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3132] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3131] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3130] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3129] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3128] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3127] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3126] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3125] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3124] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3123] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3122] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3121] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3120] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3119] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3118] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3117] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3116] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3115] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3114] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3113] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3112] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3111] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3110] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3109] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3108] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3107] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3106] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3105] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3104] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3103] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3102] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3101] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3100] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3099] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3098] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3097] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3096] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3095] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3094] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3093] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3092] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3091] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3090] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3089] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3088] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3087] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3086] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3085] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3084] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3083] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3082] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3081] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3080] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3079] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3078] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3077] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3076] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3075] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3074] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3073] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3072] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3071] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3070] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3069] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3068] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3067] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3066] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3065] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3064] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3063] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3062] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3061] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3060] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3059] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3058] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3057] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3056] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3055] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3054] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3053] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3052] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3051] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3050] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3049] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3048] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3047] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3046] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3045] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3044] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3043] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3042] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3041] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3040] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3039] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3038] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3037] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3036] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3035] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3034] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3033] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3032] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3031] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3030] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3029] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3028] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3027] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3026] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3025] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3024] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3023] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3022] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3021] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3020] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3019] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3018] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3017] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3016] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3015] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3014] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3013] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3012] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3011] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3010] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3009] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3008] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3007] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3006] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3005] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3004] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3003] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3002] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3001] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3000] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2999] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2998] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2997] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2996] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2995] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2994] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2993] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2992] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2991] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2990] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2989] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2988] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2987] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2986] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2985] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2984] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2983] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2982] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2981] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2980] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2979] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2978] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2977] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2976] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2975] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2974] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2973] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2972] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2971] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2970] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2969] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2968] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2967] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2966] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2965] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2964] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2963] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2962] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2961] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2960] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2959] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2958] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2957] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2956] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2955] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2954] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2953] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2952] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2951] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2950] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2949] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2948] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2947] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2946] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2945] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2944] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2943] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2942] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2941] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2940] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2939] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2938] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2937] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2936] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2935] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2934] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2933] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2932] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2931] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2930] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2929] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2928] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2927] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2926] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2925] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2924] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2923] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2922] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2921] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2920] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2919] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2918] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2917] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2916] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2915] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2914] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2913] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2912] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2911] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2910] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2909] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2908] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2907] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2906] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2905] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2904] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2903] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2902] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2901] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2900] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2899] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2898] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2897] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2896] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2895] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2894] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2893] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2892] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2891] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2890] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2889] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2888] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2887] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2886] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2885] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2884] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2883] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2882] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2881] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2880] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2879] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2878] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2877] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2876] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2875] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2874] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2873] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2872] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2871] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2870] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2869] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2868] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2867] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2866] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2865] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2864] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2863] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2862] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2861] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2860] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2859] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2858] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2857] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2856] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2855] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2854] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2853] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2852] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2851] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2850] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2849] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2848] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2847] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2846] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2845] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2844] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2843] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2842] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2841] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2840] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2839] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2838] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2837] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2836] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2835] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2834] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2833] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2832] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2831] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2830] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2829] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2828] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2827] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2826] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2825] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2824] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2823] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2822] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2821] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2820] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2819] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2818] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2817] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2816] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2815] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2814] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2813] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2812] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2811] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2810] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2809] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2808] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2807] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2806] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2805] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2804] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2803] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2802] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2801] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2800] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2799] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2798] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2797] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2796] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2795] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2794] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2793] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2792] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2791] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2790] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2789] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2788] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2787] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2786] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2785] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2784] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2783] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2782] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2781] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2780] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2779] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2778] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2777] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2776] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2775] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2774] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2773] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2772] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2771] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2770] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2769] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2768] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2767] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2766] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2765] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2764] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2763] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2762] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2761] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2760] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2759] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2758] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2757] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2756] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2755] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2754] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2753] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2752] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2751] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2750] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2749] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2748] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2747] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2746] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2745] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2744] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2743] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2742] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2741] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2740] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2739] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2738] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2737] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2736] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2735] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2734] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2733] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2732] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2731] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2730] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2729] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2728] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2727] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2726] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2725] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2724] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2723] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2722] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2721] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2720] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2719] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2718] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2717] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2716] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2715] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2714] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2713] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2712] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2711] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2710] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2709] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2708] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2707] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2706] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2705] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2704] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2703] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2702] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2701] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2700] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2699] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2698] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2697] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2696] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2695] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2694] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2693] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2692] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2691] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2690] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2689] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2688] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2687] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2686] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2685] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2684] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2683] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2682] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2681] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2680] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2679] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2678] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2677] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2676] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2675] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2674] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2673] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2672] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2671] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2670] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2669] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2668] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2667] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2666] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2665] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2664] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2663] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2662] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2661] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2660] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2659] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2658] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2657] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2656] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2655] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2654] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2653] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2652] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2651] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2650] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2649] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2648] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2647] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2646] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2645] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2644] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2643] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2642] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2641] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2640] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2639] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2638] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2637] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2636] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2635] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2634] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2633] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2632] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2631] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2630] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2629] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2628] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2627] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2626] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2625] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2624] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2623] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2622] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2621] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2620] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2619] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2618] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2617] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2616] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2615] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2614] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2613] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2612] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2611] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2610] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2609] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2608] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2607] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2606] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2605] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2604] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2603] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2602] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2601] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2600] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2599] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2598] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2597] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2596] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2595] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2594] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2593] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2592] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2591] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2590] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2589] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2588] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2587] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2586] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2585] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2584] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2583] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2582] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2581] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2580] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2579] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2578] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2577] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2576] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2575] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2574] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2573] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2572] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2571] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2570] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2569] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2568] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2567] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2566] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2565] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2564] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2563] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2562] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2561] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2560] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2559] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2558] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2557] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2556] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2555] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2554] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2553] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2552] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2551] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2550] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2549] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2548] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2547] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2546] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2545] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2544] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2543] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2542] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2541] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2540] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2539] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2538] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2537] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2536] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2535] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2534] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2533] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2532] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2531] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2530] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2529] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2528] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2527] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2526] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2525] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2524] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2523] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2522] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2521] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2520] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2519] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2518] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2517] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2516] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2515] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2514] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2513] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2512] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2511] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2510] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2509] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2508] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2507] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2506] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2505] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2504] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2503] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2502] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2501] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2500] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2499] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2498] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2497] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2496] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2495] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2494] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2493] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2492] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2491] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2490] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2489] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2488] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2487] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2486] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2485] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2484] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2483] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2482] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2481] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2480] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2479] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2478] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2477] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2476] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2475] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2474] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2473] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2472] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2471] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2470] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2469] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2468] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2467] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2466] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2465] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2464] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2463] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2462] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2461] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2460] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2459] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2458] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2457] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2456] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2455] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2454] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2453] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2452] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2451] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2450] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2449] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2448] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2447] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2446] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2445] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2444] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2443] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2442] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2441] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2440] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2439] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2438] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2437] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2436] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2435] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2434] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2433] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2432] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2431] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2430] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2429] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2428] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2427] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2426] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2425] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2424] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2423] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2422] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2421] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2420] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2419] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2418] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2417] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2416] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2415] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2414] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2413] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2412] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2411] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2410] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2409] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2408] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2407] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2406] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2405] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2404] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2403] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2402] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2401] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2400] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2399] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2398] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2397] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2396] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2395] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2394] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2393] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2392] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2391] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2390] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2389] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2388] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2387] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2386] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2385] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2384] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2383] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2382] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2381] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2380] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2379] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2378] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2377] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2376] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2375] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2374] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2373] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2372] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2371] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2370] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2369] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2368] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2367] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2366] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2365] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2364] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2363] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2362] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2361] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2360] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2359] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2358] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2357] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2356] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2355] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2354] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2353] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2352] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2351] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2350] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2349] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2348] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2347] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2346] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2345] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2344] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2343] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2342] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2341] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2340] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2339] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2338] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2337] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2336] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2335] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2334] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2333] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2332] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2331] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2330] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2329] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2328] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2327] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2326] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2325] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2324] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2323] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2322] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2321] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2320] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2319] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2318] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2317] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2316] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2315] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2314] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2313] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2312] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2311] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2310] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2309] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2308] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2307] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2306] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2305] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2304] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2303] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2302] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2301] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2300] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2299] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2298] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2297] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2296] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2295] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2294] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2293] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2292] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2291] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2290] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2289] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2288] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2287] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2286] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2285] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2284] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2283] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2282] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2281] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2280] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2279] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2278] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2277] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2276] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2275] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2274] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2273] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2272] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2271] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2270] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2269] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2268] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2267] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2266] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2265] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2264] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2263] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2262] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2261] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2260] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2259] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2258] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2257] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2256] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2255] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2254] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2253] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2252] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2251] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2250] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2249] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2248] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2247] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2246] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2245] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2244] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2243] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2242] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2241] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2240] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2239] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2238] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2237] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2236] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2235] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2234] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2233] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2232] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2231] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2230] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2229] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2228] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2227] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2226] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2225] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2224] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2223] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2222] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2221] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2220] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2219] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2218] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2217] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2216] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2215] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2214] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2213] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2212] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2211] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2210] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2209] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2208] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2207] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2206] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2205] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2204] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2203] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2202] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2201] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2200] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2199] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2198] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2197] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2196] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2195] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2194] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2193] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2192] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2191] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2190] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2189] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2188] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2187] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2186] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2185] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2184] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2183] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2182] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2181] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2180] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2179] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2178] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2177] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2176] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2175] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2174] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2173] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2172] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2171] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2170] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2169] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2168] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2167] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2166] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2165] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2164] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2163] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2162] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2161] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2160] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2159] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2158] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2157] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2156] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2155] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2154] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2153] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2152] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2151] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2150] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2149] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2148] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2147] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2146] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2145] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2144] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2143] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2142] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2141] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2140] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2139] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2138] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2137] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2136] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2135] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2134] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2133] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2132] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2131] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2130] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2129] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2128] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2127] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2126] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2125] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2124] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2123] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2122] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2121] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2120] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2119] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2118] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2117] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2116] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2115] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2114] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2113] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2112] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2111] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2110] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2109] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2108] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2107] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2106] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2105] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2104] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2103] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2102] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2101] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2100] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2099] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2098] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2097] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2096] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2095] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2094] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2093] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2092] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2091] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2090] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2089] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2088] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2087] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2086] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2085] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2084] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2083] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2082] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2081] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2080] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2079] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2078] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2077] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2076] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2075] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2074] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2073] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2072] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2071] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2070] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2069] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2068] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2067] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2066] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2065] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2064] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2063] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2062] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2061] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2060] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2059] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2058] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2057] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2056] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2055] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2054] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2053] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2052] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2051] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2050] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2049] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2048] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2047] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2046] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2045] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2044] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2043] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2042] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2041] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2040] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2039] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2038] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2037] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2036] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2035] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2034] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2033] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2032] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2031] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2030] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2029] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2028] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2027] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2026] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2025] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2024] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2023] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2022] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2021] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2020] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2019] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2018] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2017] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2016] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2015] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2014] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2013] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2012] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2011] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2010] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2009] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2008] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2007] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2006] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2005] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2004] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2003] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2002] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2001] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2000] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1999] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1998] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1997] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1996] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1995] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1994] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1993] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1992] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1991] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1990] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1989] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1988] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1987] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1986] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1985] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1984] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1983] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1982] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1981] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1980] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1979] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1978] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1977] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1976] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1975] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1974] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1973] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1972] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1971] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1970] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1969] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1968] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1967] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1966] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1965] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1964] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1963] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1962] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1961] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1960] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1959] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1958] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1957] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1956] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1955] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1954] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1953] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1952] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1951] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1950] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1949] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1948] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1947] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1946] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1945] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1944] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1943] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1942] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1941] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1940] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1939] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1938] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1937] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1936] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1935] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1934] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1933] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1932] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1931] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1930] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1929] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1928] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1927] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1926] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1925] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1924] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1923] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1922] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1921] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1920] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1919] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1918] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1917] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1916] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1915] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1914] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1913] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1912] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1911] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1910] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1909] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1908] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1907] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1906] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1905] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1904] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1903] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1902] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1901] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1900] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1899] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1898] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1897] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1896] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1895] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1894] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1893] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1892] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1891] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1890] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1889] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1888] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1887] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1886] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1885] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1884] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1883] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1882] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1881] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1880] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1879] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1878] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1877] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1876] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1875] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1874] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1873] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1872] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1871] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1870] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1869] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1868] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1867] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1866] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1865] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1864] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1863] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1862] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1861] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1860] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1859] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1858] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1857] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1856] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1855] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1854] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1853] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1852] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1851] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1850] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1849] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1848] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1847] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1846] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1845] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1844] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1843] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1842] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1841] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1840] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1839] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1838] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1837] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1836] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1835] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1834] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1833] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1832] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1831] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1830] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1829] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1828] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1827] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1826] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1825] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1824] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1823] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1822] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1821] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1820] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1819] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1818] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1817] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1816] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1815] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1814] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1813] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1812] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1811] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1810] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1809] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1808] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1807] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1806] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1805] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1804] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1803] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1802] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1801] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1800] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1799] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1798] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1797] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1796] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1795] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1794] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1793] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1792] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1791] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1790] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1789] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1788] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1787] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1786] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1785] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1784] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1783] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1782] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1781] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1780] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1779] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1778] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1777] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1776] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1775] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1774] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1773] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1772] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1771] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1770] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1769] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1768] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1767] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1766] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1765] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1764] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1763] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1762] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1761] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1760] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1759] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1758] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1757] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1756] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1755] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1754] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1753] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1752] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1751] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1750] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1749] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1748] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1747] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1746] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1745] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1744] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1743] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1742] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1741] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1740] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1739] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1738] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1737] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1736] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1735] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1734] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1733] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1732] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1731] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1730] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1729] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1728] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1727] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1726] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1725] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1724] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1723] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1722] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1721] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1720] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1719] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1718] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1717] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1716] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1715] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1714] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1713] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1712] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1711] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1710] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1709] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1708] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1707] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1706] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1705] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1704] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1703] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1702] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1701] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1700] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1699] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1698] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1697] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1696] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1695] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1694] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1693] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1692] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1691] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1690] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1689] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1688] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1687] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1686] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1685] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1684] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1683] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1682] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1681] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1680] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1679] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1678] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1677] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1676] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1675] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1674] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1673] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1672] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1671] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1670] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1669] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1668] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1667] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1666] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1665] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1664] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1663] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1662] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1661] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1660] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1659] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1658] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1657] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1656] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1655] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1654] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1653] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1652] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1651] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1650] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1649] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1648] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1647] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1646] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1645] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1644] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1643] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1642] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1641] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1640] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1639] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1638] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1637] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1636] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1635] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1634] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1633] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1632] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1631] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1630] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1629] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1628] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1627] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1626] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1625] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1624] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1623] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1622] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1621] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1620] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1619] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1618] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1617] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1616] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1615] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1614] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1613] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1612] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1611] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1610] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1609] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1608] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1607] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1606] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1605] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1604] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1603] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1602] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1601] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1600] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1599] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1598] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1597] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1596] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1595] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1594] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1593] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1592] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1591] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1590] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1589] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1588] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1587] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1586] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1585] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1584] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1583] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1582] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1581] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1580] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1579] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1578] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1577] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1576] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1575] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1574] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1573] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1572] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1571] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1570] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1569] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1568] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1567] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1566] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1565] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1564] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1563] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1562] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1561] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1560] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1559] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1558] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1557] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1556] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1555] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1554] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1553] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1552] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1551] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1550] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1549] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1548] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1547] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1546] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1545] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1544] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1543] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1542] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1541] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1540] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1539] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1538] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1537] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1536] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1535] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1534] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1533] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1532] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1531] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1530] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1529] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1528] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1527] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1526] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1525] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1524] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1523] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1522] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1521] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1520] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1519] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1518] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1517] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1516] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1515] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1514] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1513] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1512] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1511] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1510] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1509] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1508] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1507] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1506] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1505] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1504] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1503] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1502] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1501] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1500] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1499] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1498] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1497] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1496] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1495] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1494] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1493] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1492] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1491] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1490] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1489] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1488] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1487] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1486] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1485] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1484] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1483] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1482] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1481] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1480] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1479] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1478] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1477] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1476] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1475] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1474] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1473] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1472] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1471] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1470] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1469] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1468] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1467] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1466] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1465] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1464] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1463] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1462] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1461] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1460] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1459] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1458] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1457] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1456] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1455] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1454] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1453] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1452] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1451] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1450] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1449] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1448] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1447] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1446] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1445] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1444] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1443] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1442] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1441] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1440] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1439] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1438] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1437] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1436] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1435] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1434] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1433] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1432] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1431] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1430] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1429] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1428] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1427] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1426] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1425] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1424] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1423] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1422] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1421] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1420] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1419] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1418] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1417] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1416] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1415] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1414] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1413] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1412] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1411] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1410] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1409] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1408] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1407] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1406] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1405] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1404] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1403] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1402] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1401] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1400] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1399] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1398] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1397] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1396] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1395] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1394] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1393] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1392] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1391] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1390] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1389] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1388] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1387] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1386] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1385] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1384] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1383] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1382] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1381] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1380] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1379] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1378] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1377] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1376] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1375] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1374] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1373] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1372] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1371] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1370] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1369] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1368] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1367] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1366] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1365] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1364] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1363] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1362] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1361] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1360] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1359] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1358] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1357] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1356] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1355] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1354] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1353] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1352] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1351] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1350] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1349] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1348] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1347] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1346] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1345] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1344] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1343] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1342] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1341] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1340] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1339] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1338] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1337] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1336] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1335] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1334] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1333] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1332] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1331] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1330] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1329] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1328] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1327] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1326] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1325] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1324] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1323] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1322] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1321] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1320] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1319] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1318] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1317] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1316] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1315] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1314] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1313] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1312] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1311] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1310] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1309] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1308] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1307] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1306] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1305] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1304] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1303] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1302] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1301] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1300] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1299] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1298] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1297] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1296] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1295] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1294] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1293] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1292] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1291] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1290] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1289] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1288] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1287] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1286] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1285] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1284] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1283] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1282] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1281] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1280] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1279] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1278] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1277] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1276] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1275] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1274] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1273] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1272] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1271] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1270] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1269] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1268] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1267] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1266] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1265] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1264] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1263] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1262] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1261] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1260] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1259] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1258] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1257] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1256] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1255] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1254] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1253] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1252] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1251] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1250] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1249] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1248] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1247] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1246] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1245] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1244] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1243] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1242] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1241] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1240] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1239] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1238] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1237] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1236] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1235] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1234] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1233] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1232] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1231] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1230] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1229] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1228] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1227] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1226] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1225] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1224] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1223] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1222] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1221] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1220] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1219] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1218] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1217] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1216] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1215] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1214] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1213] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1212] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1211] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1210] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1209] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1208] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1207] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1206] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1205] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1204] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1203] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1202] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1201] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1200] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1199] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1198] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1197] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1196] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1195] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1194] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1193] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1192] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1191] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1190] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1189] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1188] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1187] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1186] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1185] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1184] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1183] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1182] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1181] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1180] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1179] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1178] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1177] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1176] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1175] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1174] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1173] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1172] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1171] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1170] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1169] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1168] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1167] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1166] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1165] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1164] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1163] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1162] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1161] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1160] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1159] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1158] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1157] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1156] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1155] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1154] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1153] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1152] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1151] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1150] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1149] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1148] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1147] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1146] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1145] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1144] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1143] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1142] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1141] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1140] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1139] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1138] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1137] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1136] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1135] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1134] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1133] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1132] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1131] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1130] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1129] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1128] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1127] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1126] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1125] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1124] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1123] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1122] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1121] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1120] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1119] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1118] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1117] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1116] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1115] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1114] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1113] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1112] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1111] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1110] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1109] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1108] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1107] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1106] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1105] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1104] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1103] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1102] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1101] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1100] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1099] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1098] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1097] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1096] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1095] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1094] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1093] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1092] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1091] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1090] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1089] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1088] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1087] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1086] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1085] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1084] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1083] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1082] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1081] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1080] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1079] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1078] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1077] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1076] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1075] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1074] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1073] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1072] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1071] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1070] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1069] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1068] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1067] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1066] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1065] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1064] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1063] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1062] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1061] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1060] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1059] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1058] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1057] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1056] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1055] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1054] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1053] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1052] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1051] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1050] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1049] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1048] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1047] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1046] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1045] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1044] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1043] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1042] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1041] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1040] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1039] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1038] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1037] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1036] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1035] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1034] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1033] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1032] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1031] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1030] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1029] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1028] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1027] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1026] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1025] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1024] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1023] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1022] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1021] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1020] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1019] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1018] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1017] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1016] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1015] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1014] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1013] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1012] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1011] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1010] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1009] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1008] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1007] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1006] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1005] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1004] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1003] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1002] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1001] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1000] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[999] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[998] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[997] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[996] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[995] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[994] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[993] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[992] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[991] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[990] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[989] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[988] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[987] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[986] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[985] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[984] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[983] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[982] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[981] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[980] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[979] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[978] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[977] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[976] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[975] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[974] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[973] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[972] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[971] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[970] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[969] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[968] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[967] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[966] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[965] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[964] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[963] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[962] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[961] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[960] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[959] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[958] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[957] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[956] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[955] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[954] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[953] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[952] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[951] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[950] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[949] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[948] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[947] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[946] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[945] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[944] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[943] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[942] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[941] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[940] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[939] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[938] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[937] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[936] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[935] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[934] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[933] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[932] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[931] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[930] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[929] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[928] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[927] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[926] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[925] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[924] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[923] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[922] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[921] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[920] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[919] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[918] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[917] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[916] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[915] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[914] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[913] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[912] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[911] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[910] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[909] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[908] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[907] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[906] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[905] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[904] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[903] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[902] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[901] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[900] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[899] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[898] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[897] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[896] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[895] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[894] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[893] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[892] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[891] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[890] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[889] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[888] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[887] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[886] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[885] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[884] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[883] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[882] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[881] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[880] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[879] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[878] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[877] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[876] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[875] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[874] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[873] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[872] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[871] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[870] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[869] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[868] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[867] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[866] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[865] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[864] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[863] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[862] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[861] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[860] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[859] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[858] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[857] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[856] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[855] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[854] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[853] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[852] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[851] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[850] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[849] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[848] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[847] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[846] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[845] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[844] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[843] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[842] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[841] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[840] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[839] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[838] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[837] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[836] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[835] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[834] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[833] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[832] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[831] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[830] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[829] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[828] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[827] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[826] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[825] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[824] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[823] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[822] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[821] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[820] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[819] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[818] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[817] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[816] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[815] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[814] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[813] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[812] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[811] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[810] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[809] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[808] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[807] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[806] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[805] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[804] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[803] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[802] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[801] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[800] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[799] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[798] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[797] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[796] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[795] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[794] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[793] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[792] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[791] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[790] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[789] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[788] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[787] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[786] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[785] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[784] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[783] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[782] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[781] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[780] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[779] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[778] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[777] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[776] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[775] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[774] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[773] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[772] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[771] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[770] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[769] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[768] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[767] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[766] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[765] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[764] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[763] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[762] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[761] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[760] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[759] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[758] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[757] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[756] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[755] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[754] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[753] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[752] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[751] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[750] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[749] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[748] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[747] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[746] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[745] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[744] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[743] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[742] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[741] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[740] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[739] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[738] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[737] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[736] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[735] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[734] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[733] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[732] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[731] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[730] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[729] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[728] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[727] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[726] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[725] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[724] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[723] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[722] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[721] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[720] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[719] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[718] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[717] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[716] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[715] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[714] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[713] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[712] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[711] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[710] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[709] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[708] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[707] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[706] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[705] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[704] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[703] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[702] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[701] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[700] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[699] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[698] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[697] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[696] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[695] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[694] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[693] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[692] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[691] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[690] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[689] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[688] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[687] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[686] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[685] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[684] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[683] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[682] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[681] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[680] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[679] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[678] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[677] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[676] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[675] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[674] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[673] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[672] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[671] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[670] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[669] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[668] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[667] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[666] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[665] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[664] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[663] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[662] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[661] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[660] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[659] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[658] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[657] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[656] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[655] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[654] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[653] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[652] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[651] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[650] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[649] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[648] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[647] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[646] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[645] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[644] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[643] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[642] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[641] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[640] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[639] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[638] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[637] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[636] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[635] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[634] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[633] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[632] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[631] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[630] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[629] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[628] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[627] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[626] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[625] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[624] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[623] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[622] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[621] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[620] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[619] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[618] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[617] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[616] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[615] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[614] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[613] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[612] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[611] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[610] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[609] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[608] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[607] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[606] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[605] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[604] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[603] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[602] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[601] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[600] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[599] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[598] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[597] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[596] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[595] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[594] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[593] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[592] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[591] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[590] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[589] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[588] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[587] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[586] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[585] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[584] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[583] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[582] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[581] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[580] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[579] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[578] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[577] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[576] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[575] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[574] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[573] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[572] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[571] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[570] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[569] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[568] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[567] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[566] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[565] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[564] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[563] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[562] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[561] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[560] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[559] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[558] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[557] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[556] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[555] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[554] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[553] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[552] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[551] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[550] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[549] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[548] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[547] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[546] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[545] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[544] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[543] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[542] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[541] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[540] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[539] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[538] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[537] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[536] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[535] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[534] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[533] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[532] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[531] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[530] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[529] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[528] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[527] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[526] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[525] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[524] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[523] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[522] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[521] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[520] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[519] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[518] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[517] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[516] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[515] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[514] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[513] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[512] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[511] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[510] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[509] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[508] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[507] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[506] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[505] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[504] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[503] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[502] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[501] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[500] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[499] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[498] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[497] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[496] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[495] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[494] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[493] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[492] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[491] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[490] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[489] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[488] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[487] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[486] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[485] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[484] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[483] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[482] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[481] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[480] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[479] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[478] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[477] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[476] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[475] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[474] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[473] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[472] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[471] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[470] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[469] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[468] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[467] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[466] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[465] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[464] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[463] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[462] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[461] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[460] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[459] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[458] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[457] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[456] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[455] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[454] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[453] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[452] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[451] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[450] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[449] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[448] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[447] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[446] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[445] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[444] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[443] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[442] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[441] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[440] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[439] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[438] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[437] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[436] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[435] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[434] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[433] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[432] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[431] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[430] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[429] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[428] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[427] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[426] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[425] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[424] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[423] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[422] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[421] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[420] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[419] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[418] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[417] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[416] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[415] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[414] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[413] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[412] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[411] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[410] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[409] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[408] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[407] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[406] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[405] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[404] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[403] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[402] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[401] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[400] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[399] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[398] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[397] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[396] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[395] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[394] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[393] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[392] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[391] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[390] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[389] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[388] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[387] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[386] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[385] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[384] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[383] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[382] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[381] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[380] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[379] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[378] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[377] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[376] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[375] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[374] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[373] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[372] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[371] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[370] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[369] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[368] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[367] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[366] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[365] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[364] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[363] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[362] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[361] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[360] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[359] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[358] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[357] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[356] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[355] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[354] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[353] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[352] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[351] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[350] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[349] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[348] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[347] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[346] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[345] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[344] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[343] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[342] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[341] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[340] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[339] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[338] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[337] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[336] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[335] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[334] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[333] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[332] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[331] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[330] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[329] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[328] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[327] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[326] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[325] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[324] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[323] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[322] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[321] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[320] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[319] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[318] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[317] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[316] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[315] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[314] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[313] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[312] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[311] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[310] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[309] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[308] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[307] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[306] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[305] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[304] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[303] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[302] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[301] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[300] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[299] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[298] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[297] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[296] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[295] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[294] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[293] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[292] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[291] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[290] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[289] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[288] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[287] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[286] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[285] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[284] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[283] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[282] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[281] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[280] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[279] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[278] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[277] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[276] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[275] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[274] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[273] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[272] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[271] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[270] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[269] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[268] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[267] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[266] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[265] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[264] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[263] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[262] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[261] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[260] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[259] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[258] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[257] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[256] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[255] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[254] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[253] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[252] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[251] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[250] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[249] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[248] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[247] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[246] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[245] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[244] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[243] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[242] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[241] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[240] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[239] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[238] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[237] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[236] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[235] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[234] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[233] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[232] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[231] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[230] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[229] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[228] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[227] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[226] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[225] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[224] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[223] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[222] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[221] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[220] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[219] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[218] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[217] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[216] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[215] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[214] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[213] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[212] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[211] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[210] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[209] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[208] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[207] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[206] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[205] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[204] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[203] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[202] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[201] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[200] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[199] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[198] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[197] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[196] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[195] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[194] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[193] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[192] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[191] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[190] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[189] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[188] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[187] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[186] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[185] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[184] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[183] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[182] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[181] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[180] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[179] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[178] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[177] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[176] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[175] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[174] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[173] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[172] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[171] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[170] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[169] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[168] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[167] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[166] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[165] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[164] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[163] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[162] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[161] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[160] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[159] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[158] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[157] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[156] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[155] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[154] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[153] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[152] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[151] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[150] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[149] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[148] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[147] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[146] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[145] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[144] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[143] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[142] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[141] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[140] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[139] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[138] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[137] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[136] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[135] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[134] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[133] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[132] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[131] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[130] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[129] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[128] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[127] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[126] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[125] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[124] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[123] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[122] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[121] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[120] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[119] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[118] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[117] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[116] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[115] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[114] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[113] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[112] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[111] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[110] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[109] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[108] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[107] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[106] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[105] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[104] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[103] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[102] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[101] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[100] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[99] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[98] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[97] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[96] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[95] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[94] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[93] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[92] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[91] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[90] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[89] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[88] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[87] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[86] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[85] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[84] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[83] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[82] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[81] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[80] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[79] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[78] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[77] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[76] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[75] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[74] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[73] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[72] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[71] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[70] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[69] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[68] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[67] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[66] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[65] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[64] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[63] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[62] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[61] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[60] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[59] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[58] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[57] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[56] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[55] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[54] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[53] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[52] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[51] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[50] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[49] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[48] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[47] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[46] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[45] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[44] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[43] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[42] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[41] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[40] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[39] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[38] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[37] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[36] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[35] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[34] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[33] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[32] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[31] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[30] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[29] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[28] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[27] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[26] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[25] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[24] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[23] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[22] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[21] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[20] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[19] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[18] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[17] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[16] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[15] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[14] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[13] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[12] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[11] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[10] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[9] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[8] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[7] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[6] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[5] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[0] = \<const0> ;
  assign axi_c2c_aurora_tx_tvalid = \<const0> ;
  assign axi_c2c_config_error_out = \<const0> ;
  assign axi_c2c_link_error_out = \<const0> ;
  assign axi_c2c_s2m_intr_out[3] = \<const0> ;
  assign axi_c2c_s2m_intr_out[2] = \<const0> ;
  assign axi_c2c_s2m_intr_out[1] = \<const0> ;
  assign axi_c2c_s2m_intr_out[0] = \<const0> ;
  assign axi_c2c_selio_tx_diff_clk_out_n = \<const0> ;
  assign axi_c2c_selio_tx_diff_clk_out_p = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[14] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[13] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[12] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[11] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[10] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[9] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[8] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[7] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[6] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[5] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[4] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[3] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[2] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[1] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[0] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[14] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[13] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[12] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[11] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[10] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[9] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[8] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[7] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[6] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[5] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[4] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[3] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[2] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[1] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[0] = \<const0> ;
  assign m_aclk_out = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1:0] = \^m_axi_arsize [1:0];
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1:0] = \^m_axi_awsize [1:0];
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_lite_arready = \<const0> ;
  assign s_axi_lite_awready = \<const0> ;
  assign s_axi_lite_bresp[1] = \<const0> ;
  assign s_axi_lite_bresp[0] = \<const0> ;
  assign s_axi_lite_bvalid = \<const0> ;
  assign s_axi_lite_rdata[31] = \<const0> ;
  assign s_axi_lite_rdata[30] = \<const0> ;
  assign s_axi_lite_rdata[29] = \<const0> ;
  assign s_axi_lite_rdata[28] = \<const0> ;
  assign s_axi_lite_rdata[27] = \<const0> ;
  assign s_axi_lite_rdata[26] = \<const0> ;
  assign s_axi_lite_rdata[25] = \<const0> ;
  assign s_axi_lite_rdata[24] = \<const0> ;
  assign s_axi_lite_rdata[23] = \<const0> ;
  assign s_axi_lite_rdata[22] = \<const0> ;
  assign s_axi_lite_rdata[21] = \<const0> ;
  assign s_axi_lite_rdata[20] = \<const0> ;
  assign s_axi_lite_rdata[19] = \<const0> ;
  assign s_axi_lite_rdata[18] = \<const0> ;
  assign s_axi_lite_rdata[17] = \<const0> ;
  assign s_axi_lite_rdata[16] = \<const0> ;
  assign s_axi_lite_rdata[15] = \<const0> ;
  assign s_axi_lite_rdata[14] = \<const0> ;
  assign s_axi_lite_rdata[13] = \<const0> ;
  assign s_axi_lite_rdata[12] = \<const0> ;
  assign s_axi_lite_rdata[11] = \<const0> ;
  assign s_axi_lite_rdata[10] = \<const0> ;
  assign s_axi_lite_rdata[9] = \<const0> ;
  assign s_axi_lite_rdata[8] = \<const0> ;
  assign s_axi_lite_rdata[7] = \<const0> ;
  assign s_axi_lite_rdata[6] = \<const0> ;
  assign s_axi_lite_rdata[5] = \<const0> ;
  assign s_axi_lite_rdata[4] = \<const0> ;
  assign s_axi_lite_rdata[3] = \<const0> ;
  assign s_axi_lite_rdata[2] = \<const0> ;
  assign s_axi_lite_rdata[1] = \<const0> ;
  assign s_axi_lite_rdata[0] = \<const0> ;
  assign s_axi_lite_rresp[1] = \<const0> ;
  assign s_axi_lite_rresp[0] = \<const0> ;
  assign s_axi_lite_rvalid = \<const0> ;
  assign s_axi_lite_wready = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  GND GND
       (.G(\<const0> ));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_lite_slave \axi_lite_slave_gen.axi_chip2chip_lite_slave_inst 
       (.Q(axi_lite_tx_data),
        .\axi_lite_rx_gen.axi_lite_rx_data_reg[19] (axi_lite_rx_data),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .axi_lite_tx_ready(axi_lite_tx_ready),
        .\calib_intr_gen.tx_ch0_data_reg[10] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_16 ),
        .\calib_intr_gen.tx_ch0_data_reg[11] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_15 ),
        .\calib_intr_gen.tx_ch0_data_reg[12] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_14 ),
        .\calib_intr_gen.tx_ch0_data_reg[13] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_13 ),
        .\calib_intr_gen.tx_ch0_data_reg[14] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_12 ),
        .\calib_intr_gen.tx_ch0_data_reg[15] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_11 ),
        .\calib_intr_gen.tx_ch0_data_reg[16] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_10 ),
        .\calib_intr_gen.tx_ch0_data_reg[17] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_9 ),
        .\calib_intr_gen.tx_ch0_data_reg[18] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_8 ),
        .\calib_intr_gen.tx_ch0_data_reg[19] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_3 ),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_22 ),
        .\calib_intr_gen.tx_ch0_data_reg[5] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_21 ),
        .\calib_intr_gen.tx_ch0_data_reg[6] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_20 ),
        .\calib_intr_gen.tx_ch0_data_reg[7] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_19 ),
        .\calib_intr_gen.tx_ch0_data_reg[8] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_18 ),
        .\calib_intr_gen.tx_ch0_data_reg[9] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_17 ),
        .clk_ph_out(rx_user_clk),
        .empty_fwft_i(empty_fwft_i),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\m_axi_lite_arprot[1] ({m_axi_lite_arprot,m_axi_lite_araddr}),
        .m_axi_lite_arready(m_axi_lite_arready),
        .m_axi_lite_arvalid(m_axi_lite_arvalid),
        .\m_axi_lite_awprot[1] ({m_axi_lite_awprot,m_axi_lite_awaddr}),
        .m_axi_lite_awready(m_axi_lite_awready),
        .m_axi_lite_awvalid(m_axi_lite_awvalid),
        .m_axi_lite_bready(m_axi_lite_bready),
        .m_axi_lite_bresp(m_axi_lite_bresp),
        .m_axi_lite_bvalid(m_axi_lite_bvalid),
        .m_axi_lite_rdata(m_axi_lite_rdata),
        .m_axi_lite_rready(m_axi_lite_rready),
        .m_axi_lite_rresp(m_axi_lite_rresp),
        .m_axi_lite_rvalid(m_axi_lite_rvalid),
        .m_axi_lite_wready(m_axi_lite_wready),
        .\m_axi_lite_wstrb[3] ({m_axi_lite_wstrb,m_axi_lite_wdata}),
        .m_axi_lite_wvalid(m_axi_lite_wvalid),
        .rx_phy_ready_reg(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_13 ),
        .rx_user_reset(rx_user_reset),
        .sync_reset_out(lite_sync_reset));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_reset_sync \axi_lite_slave_gen.reset_sync_lite_slv 
       (.axi_c2c_link_status_out(axi_c2c_link_status_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .sync_reset_out(lite_sync_reset));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_slave \slave_fpga_gen.axi_chip2chip_slave_inst 
       (.AR(mmcm_idelay_reset),
        .DIADI({m_axi_rresp,m_axi_rlast,m_axi_rid}),
        .Q(axi_lite_tx_data),
        .SR(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_9 ),
        .axi_c2c_m2s_intr_out(axi_c2c_m2s_intr_out),
        .axi_c2c_s2m_intr_in(axi_c2c_s2m_intr_in),
        .\axi_c2c_selio_tx_data_out[14] (tx_user_data),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .axi_lite_tx_ready(axi_lite_tx_ready),
        .bfifo_data({m_axi_bresp,m_axi_bid}),
        .\calib_intr_gen.intr_flop_reg (\slave_fpga_gen.axi_chip2chip_slave_inst_n_2 ),
        .\calib_intr_gen.tx_ch0_valid_reg (\slave_fpga_gen.axi_chip2chip_slave_inst_n_4 ),
        .\calib_intr_gen.tx_ch0_valid_reg_0 (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_14 ),
        .clk_ph_out(rx_user_clk),
        .data_out(rx_user_data),
        .empty_fwft_i(empty_fwft_i),
        .\goreg_dm.dout_i_reg[10] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_16 ),
        .\goreg_dm.dout_i_reg[11] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_15 ),
        .\goreg_dm.dout_i_reg[12] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_14 ),
        .\goreg_dm.dout_i_reg[13] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_13 ),
        .\goreg_dm.dout_i_reg[14] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_12 ),
        .\goreg_dm.dout_i_reg[15] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_11 ),
        .\goreg_dm.dout_i_reg[16] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_10 ),
        .\goreg_dm.dout_i_reg[17] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_9 ),
        .\goreg_dm.dout_i_reg[18] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_8 ),
        .\goreg_dm.dout_i_reg[19] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_3 ),
        .\goreg_dm.dout_i_reg[4] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_22 ),
        .\goreg_dm.dout_i_reg[5] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_21 ),
        .\goreg_dm.dout_i_reg[6] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_20 ),
        .\goreg_dm.dout_i_reg[7] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_19 ),
        .\goreg_dm.dout_i_reg[8] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_18 ),
        .\goreg_dm.dout_i_reg[9] (\axi_lite_slave_gen.axi_chip2chip_lite_slave_inst_n_17 ),
        .\gpr1.dout_i_reg[19] (axi_lite_rx_data),
        .m_aclk(m_aclk),
        .m_aresetn(m_aresetn),
        .\m_axi_araddr[31] ({m_axi_araddr,m_axi_arburst,\^m_axi_arsize ,m_axi_arlen,m_axi_arid}),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .\m_axi_awaddr[31] ({m_axi_awaddr,m_axi_awburst,\^m_axi_awsize ,m_axi_awlen,m_axi_awid}),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .\m_axi_wdata[31] ({m_axi_wdata,m_axi_wstrb,m_axi_wlast,m_axi_wuser}),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .rx_phy_ready(rx_phy_ready),
        .rx_phy_ready_reg(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_13 ),
        .rx_user_reset(rx_user_reset),
        .sync_reset_out_reg(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_12 ),
        .sync_reset_out_reg_0(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_15 ),
        .tx_ch0_valid(tx_ch0_valid),
        .tx_phy_ctrl(tx_phy_ctrl),
        .\tx_phy_ctrl_reg[0] (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_10 ),
        .\tx_phy_ctrl_reg[2] (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_6 ),
        .\tx_phy_ctrl_reg[2]_0 (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_11 ),
        .tx_phy_ready(tx_phy_ready));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_phy_if \slave_fpga_gen.axi_chip2chip_slave_phy_inst 
       (.D({axi_c2c_link_status_out,axi_c2c_multi_bit_error_out}),
        .Q(rx_user_data),
        .SR(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_9 ),
        .aw_fifo_reset_reg(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_13 ),
        .axi_c2c_selio_rx_clk_in(axi_c2c_selio_rx_clk_in),
        .axi_c2c_selio_rx_data_in(axi_c2c_selio_rx_data_in),
        .axi_c2c_selio_tx_clk_out(axi_c2c_selio_tx_clk_out),
        .axi_c2c_selio_tx_data_out(axi_c2c_selio_tx_data_out),
        .\calib_intr_gen.intr_flop_reg (\slave_fpga_gen.axi_chip2chip_slave_inst_n_4 ),
        .\calib_intr_gen.intr_flop_reg_0 (\slave_fpga_gen.axi_chip2chip_slave_inst_n_2 ),
        .\calib_intr_gen.send_calib_reg (tx_phy_ctrl),
        .\calib_intr_gen.send_calib_reg_0 (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_11 ),
        .\calib_intr_gen.send_ch0_reg (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_10 ),
        .\calib_intr_gen.send_intr_reg (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_14 ),
        .\calib_intr_gen.tx_ch0_data_reg[20] (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_12 ),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_6 ),
        .\calib_intr_gen.tx_ch0_data_reg[4]_0 (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_15 ),
        .clk_ph_out(rx_user_clk),
        .data_in(tx_user_data),
        .idelay_ref_clk(idelay_ref_clk),
        .m_aclk(m_aclk),
        .m_aresetn(m_aresetn),
        .reset(mmcm_idelay_reset),
        .rx_phy_ready(rx_phy_ready),
        .rx_user_reset(rx_user_reset),
        .tx_ch0_valid(tx_ch0_valid),
        .tx_phy_ready(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_asitv10_axisc_register_slice" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_asitv10_axisc_register_slice
   (m_axi_lite_arvalid,
    axi_arready_rs,
    \m_axi_lite_arprot[1] ,
    m_axi_lite_arready,
    axi_arvalid_rs,
    sync_reset_out,
    ch2_data_out,
    m_axi_lite_aclk,
    E);
  output m_axi_lite_arvalid;
  output axi_arready_rs;
  output [33:0]\m_axi_lite_arprot[1] ;
  input m_axi_lite_arready;
  input axi_arvalid_rs;
  input sync_reset_out;
  input [33:0]ch2_data_out;
  input m_axi_lite_aclk;
  input [0:0]E;

  wire [0:0]E;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [1:0]areset_d;
  wire axi_arready_rs;
  wire axi_arvalid_rs;
  wire [33:0]ch2_data_out;
  (* RTL_KEEP = "yes" *) wire load_s1_from_s2;
  wire m_axi_lite_aclk;
  wire [33:0]\m_axi_lite_arprot[1] ;
  wire m_axi_lite_arready;
  wire m_axi_lite_arvalid;
  wire s_ready_i15_out;
  wire s_ready_i_i_1_n_0;
  wire s_ready_i_i_2_n_0;
  wire \state[0]_i_1__1_n_0 ;
  wire \state[0]_i_2__0_n_0 ;
  wire \state[0]_i_3__0_n_0 ;
  wire \state[1]_i_1__1_n_0 ;
  wire \state_reg_n_0_[1] ;
  wire storage_data1;
  wire \storage_data1[0]_i_1__0_n_0 ;
  wire \storage_data1[10]_i_1__0_n_0 ;
  wire \storage_data1[11]_i_1__0_n_0 ;
  wire \storage_data1[12]_i_1__0_n_0 ;
  wire \storage_data1[13]_i_1__0_n_0 ;
  wire \storage_data1[14]_i_1__0_n_0 ;
  wire \storage_data1[15]_i_1__0_n_0 ;
  wire \storage_data1[16]_i_1__0_n_0 ;
  wire \storage_data1[17]_i_1__0_n_0 ;
  wire \storage_data1[18]_i_1__0_n_0 ;
  wire \storage_data1[19]_i_1__0_n_0 ;
  wire \storage_data1[1]_i_1__0_n_0 ;
  wire \storage_data1[20]_i_1__0_n_0 ;
  wire \storage_data1[21]_i_1__0_n_0 ;
  wire \storage_data1[22]_i_1__0_n_0 ;
  wire \storage_data1[23]_i_1__0_n_0 ;
  wire \storage_data1[24]_i_1__0_n_0 ;
  wire \storage_data1[25]_i_1__0_n_0 ;
  wire \storage_data1[26]_i_1__0_n_0 ;
  wire \storage_data1[27]_i_1__0_n_0 ;
  wire \storage_data1[28]_i_1__0_n_0 ;
  wire \storage_data1[29]_i_1__0_n_0 ;
  wire \storage_data1[2]_i_1__0_n_0 ;
  wire \storage_data1[30]_i_1__0_n_0 ;
  wire \storage_data1[31]_i_2__0_n_0 ;
  wire \storage_data1[32]_i_1__0_n_0 ;
  wire \storage_data1[33]_i_1__0_n_0 ;
  wire \storage_data1[3]_i_1__0_n_0 ;
  wire \storage_data1[4]_i_1__0_n_0 ;
  wire \storage_data1[5]_i_1__0_n_0 ;
  wire \storage_data1[6]_i_1__0_n_0 ;
  wire \storage_data1[7]_i_1__0_n_0 ;
  wire \storage_data1[8]_i_1__0_n_0 ;
  wire \storage_data1[9]_i_1__0_n_0 ;
  wire \storage_data2_reg_n_0_[0] ;
  wire \storage_data2_reg_n_0_[10] ;
  wire \storage_data2_reg_n_0_[11] ;
  wire \storage_data2_reg_n_0_[12] ;
  wire \storage_data2_reg_n_0_[13] ;
  wire \storage_data2_reg_n_0_[14] ;
  wire \storage_data2_reg_n_0_[15] ;
  wire \storage_data2_reg_n_0_[16] ;
  wire \storage_data2_reg_n_0_[17] ;
  wire \storage_data2_reg_n_0_[18] ;
  wire \storage_data2_reg_n_0_[19] ;
  wire \storage_data2_reg_n_0_[1] ;
  wire \storage_data2_reg_n_0_[20] ;
  wire \storage_data2_reg_n_0_[21] ;
  wire \storage_data2_reg_n_0_[22] ;
  wire \storage_data2_reg_n_0_[23] ;
  wire \storage_data2_reg_n_0_[24] ;
  wire \storage_data2_reg_n_0_[25] ;
  wire \storage_data2_reg_n_0_[26] ;
  wire \storage_data2_reg_n_0_[27] ;
  wire \storage_data2_reg_n_0_[28] ;
  wire \storage_data2_reg_n_0_[29] ;
  wire \storage_data2_reg_n_0_[2] ;
  wire \storage_data2_reg_n_0_[30] ;
  wire \storage_data2_reg_n_0_[31] ;
  wire \storage_data2_reg_n_0_[32] ;
  wire \storage_data2_reg_n_0_[33] ;
  wire \storage_data2_reg_n_0_[3] ;
  wire \storage_data2_reg_n_0_[4] ;
  wire \storage_data2_reg_n_0_[5] ;
  wire \storage_data2_reg_n_0_[6] ;
  wire \storage_data2_reg_n_0_[7] ;
  wire \storage_data2_reg_n_0_[8] ;
  wire \storage_data2_reg_n_0_[9] ;
  wire sync_reset_out;

  LUT4 #(
    .INIT(16'h00A2)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(axi_arvalid_rs),
        .I2(m_axi_lite_arready),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8B888888)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(axi_arvalid_rs),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(m_axi_lite_arready),
        .I4(load_s1_from_s2),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44444474)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(axi_arvalid_rs),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(load_s1_from_s2),
        .I3(m_axi_lite_arready),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(axi_arvalid_rs),
        .I2(m_axi_lite_arready),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__0_n_0 ),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(\state[0]_i_1__1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__0_n_0 ),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ),
        .R(\state[0]_i_1__1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__0_n_0 ),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(\state[0]_i_1__1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__0_n_0 ),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(load_s1_from_s2),
        .R(\state[0]_i_1__1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE \areset_d_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_out),
        .Q(areset_d[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \areset_d_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(areset_d[0]),
        .Q(areset_d[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8F88FFFF8F880000)) 
    s_ready_i_i_1
       (.I0(m_axi_lite_arready),
        .I1(load_s1_from_s2),
        .I2(areset_d[0]),
        .I3(areset_d[1]),
        .I4(s_ready_i_i_2_n_0),
        .I5(axi_arready_rs),
        .O(s_ready_i_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000FFFF0000F808)) 
    s_ready_i_i_2
       (.I0(axi_arvalid_rs),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(m_axi_lite_arready),
        .I3(load_s1_from_s2),
        .I4(areset_d[0]),
        .I5(areset_d[1]),
        .O(s_ready_i_i_2_n_0));
  FDRE s_ready_i_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(s_ready_i_i_1_n_0),
        .Q(axi_arready_rs),
        .R(sync_reset_out));
  LUT3 #(
    .INIT(8'hBA)) 
    \state[0]_i_1__1 
       (.I0(sync_reset_out),
        .I1(areset_d[0]),
        .I2(areset_d[1]),
        .O(\state[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hAA88A288AA808080)) 
    \state[0]_i_2__0 
       (.I0(s_ready_i15_out),
        .I1(m_axi_lite_arready),
        .I2(load_s1_from_s2),
        .I3(axi_arvalid_rs),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\state[0]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h6F40)) 
    \state[0]_i_3__0 
       (.I0(\state_reg_n_0_[1] ),
        .I1(m_axi_lite_arready),
        .I2(m_axi_lite_arvalid),
        .I3(axi_arvalid_rs),
        .O(\state[0]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \state[0]_i_4__0 
       (.I0(areset_d[0]),
        .I1(areset_d[1]),
        .O(s_ready_i15_out));
  LUT4 #(
    .INIT(16'hCFE0)) 
    \state[1]_i_1__1 
       (.I0(\state_reg_n_0_[1] ),
        .I1(m_axi_lite_arready),
        .I2(m_axi_lite_arvalid),
        .I3(axi_arvalid_rs),
        .O(\state[1]_i_1__1_n_0 ));
  FDRE \state_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__0_n_0 ),
        .D(\state[0]_i_3__0_n_0 ),
        .Q(m_axi_lite_arvalid),
        .R(\state[0]_i_1__1_n_0 ));
  FDSE \state_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__0_n_0 ),
        .D(\state[1]_i_1__1_n_0 ),
        .Q(\state_reg_n_0_[1] ),
        .S(\state[0]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[0]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[0] ),
        .I1(ch2_data_out[0]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[0]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[10]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[10] ),
        .I1(ch2_data_out[10]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[10]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[11]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[11] ),
        .I1(ch2_data_out[11]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[11]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[12]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[12] ),
        .I1(ch2_data_out[12]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[12]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[13]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[13] ),
        .I1(ch2_data_out[13]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[13]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[14]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[14] ),
        .I1(ch2_data_out[14]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[14]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[15]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[15] ),
        .I1(ch2_data_out[15]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[15]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[16]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[16] ),
        .I1(ch2_data_out[16]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[16]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[17]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[17] ),
        .I1(ch2_data_out[17]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[17]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[18]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[18] ),
        .I1(ch2_data_out[18]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[18]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[19]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[19] ),
        .I1(ch2_data_out[19]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[19]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[1]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[1] ),
        .I1(ch2_data_out[1]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[1]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[20]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[20] ),
        .I1(ch2_data_out[20]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[20]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[21]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[21] ),
        .I1(ch2_data_out[21]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[21]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[22]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[22] ),
        .I1(ch2_data_out[22]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[22]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[23]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[23] ),
        .I1(ch2_data_out[23]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[23]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[24]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[24] ),
        .I1(ch2_data_out[24]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[24]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[25]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[25] ),
        .I1(ch2_data_out[25]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[25]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[26]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[26] ),
        .I1(ch2_data_out[26]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[26]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[27]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[27] ),
        .I1(ch2_data_out[27]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[27]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[28]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[28] ),
        .I1(ch2_data_out[28]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[28]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[29]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[29] ),
        .I1(ch2_data_out[29]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[29]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[2]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[2] ),
        .I1(ch2_data_out[2]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[2]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[30]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[30] ),
        .I1(ch2_data_out[30]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[30]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hEEAACC80)) 
    \storage_data1[31]_i_1__0 
       (.I0(axi_arvalid_rs),
        .I1(m_axi_lite_arready),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(load_s1_from_s2),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .O(storage_data1));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[31]_i_2__0 
       (.I0(\storage_data2_reg_n_0_[31] ),
        .I1(ch2_data_out[31]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[31]_i_2__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[32]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[32] ),
        .I1(ch2_data_out[32]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[32]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[33]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[33] ),
        .I1(ch2_data_out[33]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[33]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[3]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[3] ),
        .I1(ch2_data_out[3]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[3]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[4]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[4] ),
        .I1(ch2_data_out[4]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[4]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[5]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[5] ),
        .I1(ch2_data_out[5]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[5]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[6]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[6] ),
        .I1(ch2_data_out[6]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[6]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[7]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[7] ),
        .I1(ch2_data_out[7]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[7]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[8]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[8] ),
        .I1(ch2_data_out[8]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[8]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[9]_i_1__0 
       (.I0(\storage_data2_reg_n_0_[9] ),
        .I1(ch2_data_out[9]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[9]_i_1__0_n_0 ));
  FDRE \storage_data1_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[0]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [0]),
        .R(1'b0));
  FDRE \storage_data1_reg[10] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[10]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [10]),
        .R(1'b0));
  FDRE \storage_data1_reg[11] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[11]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [11]),
        .R(1'b0));
  FDRE \storage_data1_reg[12] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[12]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [12]),
        .R(1'b0));
  FDRE \storage_data1_reg[13] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[13]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [13]),
        .R(1'b0));
  FDRE \storage_data1_reg[14] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[14]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [14]),
        .R(1'b0));
  FDRE \storage_data1_reg[15] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[15]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [15]),
        .R(1'b0));
  FDRE \storage_data1_reg[16] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[16]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [16]),
        .R(1'b0));
  FDRE \storage_data1_reg[17] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[17]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [17]),
        .R(1'b0));
  FDRE \storage_data1_reg[18] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[18]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [18]),
        .R(1'b0));
  FDRE \storage_data1_reg[19] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[19]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [19]),
        .R(1'b0));
  FDRE \storage_data1_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[1]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [1]),
        .R(1'b0));
  FDRE \storage_data1_reg[20] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[20]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [20]),
        .R(1'b0));
  FDRE \storage_data1_reg[21] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[21]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [21]),
        .R(1'b0));
  FDRE \storage_data1_reg[22] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[22]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [22]),
        .R(1'b0));
  FDRE \storage_data1_reg[23] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[23]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [23]),
        .R(1'b0));
  FDRE \storage_data1_reg[24] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[24]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [24]),
        .R(1'b0));
  FDRE \storage_data1_reg[25] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[25]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [25]),
        .R(1'b0));
  FDRE \storage_data1_reg[26] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[26]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [26]),
        .R(1'b0));
  FDRE \storage_data1_reg[27] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[27]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [27]),
        .R(1'b0));
  FDRE \storage_data1_reg[28] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[28]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [28]),
        .R(1'b0));
  FDRE \storage_data1_reg[29] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[29]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [29]),
        .R(1'b0));
  FDRE \storage_data1_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[2]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [2]),
        .R(1'b0));
  FDRE \storage_data1_reg[30] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[30]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [30]),
        .R(1'b0));
  FDRE \storage_data1_reg[31] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[31]_i_2__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [31]),
        .R(1'b0));
  FDRE \storage_data1_reg[32] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[32]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [32]),
        .R(1'b0));
  FDRE \storage_data1_reg[33] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[33]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [33]),
        .R(1'b0));
  FDRE \storage_data1_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[3]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [3]),
        .R(1'b0));
  FDRE \storage_data1_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[4]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [4]),
        .R(1'b0));
  FDRE \storage_data1_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[5]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [5]),
        .R(1'b0));
  FDRE \storage_data1_reg[6] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[6]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [6]),
        .R(1'b0));
  FDRE \storage_data1_reg[7] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[7]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [7]),
        .R(1'b0));
  FDRE \storage_data1_reg[8] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[8]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [8]),
        .R(1'b0));
  FDRE \storage_data1_reg[9] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[9]_i_1__0_n_0 ),
        .Q(\m_axi_lite_arprot[1] [9]),
        .R(1'b0));
  FDRE \storage_data2_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[0]),
        .Q(\storage_data2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \storage_data2_reg[10] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[10]),
        .Q(\storage_data2_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \storage_data2_reg[11] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[11]),
        .Q(\storage_data2_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \storage_data2_reg[12] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[12]),
        .Q(\storage_data2_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \storage_data2_reg[13] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[13]),
        .Q(\storage_data2_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \storage_data2_reg[14] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[14]),
        .Q(\storage_data2_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \storage_data2_reg[15] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[15]),
        .Q(\storage_data2_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \storage_data2_reg[16] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[16]),
        .Q(\storage_data2_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \storage_data2_reg[17] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[17]),
        .Q(\storage_data2_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \storage_data2_reg[18] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[18]),
        .Q(\storage_data2_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \storage_data2_reg[19] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[19]),
        .Q(\storage_data2_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \storage_data2_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[1]),
        .Q(\storage_data2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \storage_data2_reg[20] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[20]),
        .Q(\storage_data2_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \storage_data2_reg[21] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[21]),
        .Q(\storage_data2_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \storage_data2_reg[22] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[22]),
        .Q(\storage_data2_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \storage_data2_reg[23] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[23]),
        .Q(\storage_data2_reg_n_0_[23] ),
        .R(1'b0));
  FDRE \storage_data2_reg[24] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[24]),
        .Q(\storage_data2_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \storage_data2_reg[25] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[25]),
        .Q(\storage_data2_reg_n_0_[25] ),
        .R(1'b0));
  FDRE \storage_data2_reg[26] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[26]),
        .Q(\storage_data2_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \storage_data2_reg[27] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[27]),
        .Q(\storage_data2_reg_n_0_[27] ),
        .R(1'b0));
  FDRE \storage_data2_reg[28] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[28]),
        .Q(\storage_data2_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \storage_data2_reg[29] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[29]),
        .Q(\storage_data2_reg_n_0_[29] ),
        .R(1'b0));
  FDRE \storage_data2_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[2]),
        .Q(\storage_data2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \storage_data2_reg[30] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[30]),
        .Q(\storage_data2_reg_n_0_[30] ),
        .R(1'b0));
  FDRE \storage_data2_reg[31] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[31]),
        .Q(\storage_data2_reg_n_0_[31] ),
        .R(1'b0));
  FDRE \storage_data2_reg[32] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[32]),
        .Q(\storage_data2_reg_n_0_[32] ),
        .R(1'b0));
  FDRE \storage_data2_reg[33] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[33]),
        .Q(\storage_data2_reg_n_0_[33] ),
        .R(1'b0));
  FDRE \storage_data2_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[3]),
        .Q(\storage_data2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \storage_data2_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[4]),
        .Q(\storage_data2_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \storage_data2_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[5]),
        .Q(\storage_data2_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \storage_data2_reg[6] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[6]),
        .Q(\storage_data2_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \storage_data2_reg[7] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[7]),
        .Q(\storage_data2_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \storage_data2_reg[8] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[8]),
        .Q(\storage_data2_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \storage_data2_reg[9] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[9]),
        .Q(\storage_data2_reg_n_0_[9] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_asitv10_axisc_register_slice" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_asitv10_axisc_register_slice_68
   (m_axi_lite_awvalid,
    axi_awready_rs,
    \m_axi_lite_awprot[1] ,
    m_axi_lite_awready,
    axi_awvalid_rs,
    sync_reset_out,
    ch2_data_out,
    m_axi_lite_aclk,
    E);
  output m_axi_lite_awvalid;
  output axi_awready_rs;
  output [33:0]\m_axi_lite_awprot[1] ;
  input m_axi_lite_awready;
  input axi_awvalid_rs;
  input sync_reset_out;
  input [33:0]ch2_data_out;
  input m_axi_lite_aclk;
  input [0:0]E;

  wire [0:0]E;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [1:0]areset_d;
  wire axi_awready_rs;
  wire axi_awvalid_rs;
  wire [33:0]ch2_data_out;
  (* RTL_KEEP = "yes" *) wire load_s1_from_s2;
  wire m_axi_lite_aclk;
  wire [33:0]\m_axi_lite_awprot[1] ;
  wire m_axi_lite_awready;
  wire m_axi_lite_awvalid;
  wire s_ready_i15_out;
  wire s_ready_i_i_1_n_0;
  wire s_ready_i_i_2_n_0;
  wire \state[0]_i_1__0_n_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[0]_i_3_n_0 ;
  wire \state[1]_i_1__0_n_0 ;
  wire \state_reg_n_0_[1] ;
  wire storage_data1;
  wire \storage_data1[0]_i_1_n_0 ;
  wire \storage_data1[10]_i_1_n_0 ;
  wire \storage_data1[11]_i_1_n_0 ;
  wire \storage_data1[12]_i_1_n_0 ;
  wire \storage_data1[13]_i_1_n_0 ;
  wire \storage_data1[14]_i_1_n_0 ;
  wire \storage_data1[15]_i_1_n_0 ;
  wire \storage_data1[16]_i_1_n_0 ;
  wire \storage_data1[17]_i_1_n_0 ;
  wire \storage_data1[18]_i_1_n_0 ;
  wire \storage_data1[19]_i_1_n_0 ;
  wire \storage_data1[1]_i_1_n_0 ;
  wire \storage_data1[20]_i_1_n_0 ;
  wire \storage_data1[21]_i_1_n_0 ;
  wire \storage_data1[22]_i_1_n_0 ;
  wire \storage_data1[23]_i_1_n_0 ;
  wire \storage_data1[24]_i_1_n_0 ;
  wire \storage_data1[25]_i_1_n_0 ;
  wire \storage_data1[26]_i_1_n_0 ;
  wire \storage_data1[27]_i_1_n_0 ;
  wire \storage_data1[28]_i_1_n_0 ;
  wire \storage_data1[29]_i_1_n_0 ;
  wire \storage_data1[2]_i_1_n_0 ;
  wire \storage_data1[30]_i_1_n_0 ;
  wire \storage_data1[31]_i_2_n_0 ;
  wire \storage_data1[32]_i_1_n_0 ;
  wire \storage_data1[33]_i_1_n_0 ;
  wire \storage_data1[3]_i_1_n_0 ;
  wire \storage_data1[4]_i_1_n_0 ;
  wire \storage_data1[5]_i_1_n_0 ;
  wire \storage_data1[6]_i_1_n_0 ;
  wire \storage_data1[7]_i_1_n_0 ;
  wire \storage_data1[8]_i_1_n_0 ;
  wire \storage_data1[9]_i_1_n_0 ;
  wire [33:0]storage_data2;
  wire sync_reset_out;

  LUT4 #(
    .INIT(16'h00A2)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(axi_awvalid_rs),
        .I2(m_axi_lite_awready),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8B888888)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(axi_awvalid_rs),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(m_axi_lite_awready),
        .I4(load_s1_from_s2),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44444474)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(axi_awvalid_rs),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(load_s1_from_s2),
        .I3(m_axi_lite_awready),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(axi_awvalid_rs),
        .I2(m_axi_lite_awready),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2_n_0 ),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(\state[0]_i_1__0_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2_n_0 ),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ),
        .R(\state[0]_i_1__0_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2_n_0 ),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(\state[0]_i_1__0_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2_n_0 ),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(load_s1_from_s2),
        .R(\state[0]_i_1__0_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE \areset_d_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_out),
        .Q(areset_d[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \areset_d_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(areset_d[0]),
        .Q(areset_d[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8F88FFFF8F880000)) 
    s_ready_i_i_1
       (.I0(m_axi_lite_awready),
        .I1(load_s1_from_s2),
        .I2(areset_d[0]),
        .I3(areset_d[1]),
        .I4(s_ready_i_i_2_n_0),
        .I5(axi_awready_rs),
        .O(s_ready_i_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000FFFF0000F808)) 
    s_ready_i_i_2
       (.I0(axi_awvalid_rs),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(m_axi_lite_awready),
        .I3(load_s1_from_s2),
        .I4(areset_d[0]),
        .I5(areset_d[1]),
        .O(s_ready_i_i_2_n_0));
  FDRE s_ready_i_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(s_ready_i_i_1_n_0),
        .Q(axi_awready_rs),
        .R(sync_reset_out));
  LUT3 #(
    .INIT(8'hBA)) 
    \state[0]_i_1__0 
       (.I0(sync_reset_out),
        .I1(areset_d[0]),
        .I2(areset_d[1]),
        .O(\state[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hAA88A288AA808080)) 
    \state[0]_i_2 
       (.I0(s_ready_i15_out),
        .I1(m_axi_lite_awready),
        .I2(load_s1_from_s2),
        .I3(axi_awvalid_rs),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\state[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h6F40)) 
    \state[0]_i_3 
       (.I0(\state_reg_n_0_[1] ),
        .I1(m_axi_lite_awready),
        .I2(m_axi_lite_awvalid),
        .I3(axi_awvalid_rs),
        .O(\state[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \state[0]_i_4 
       (.I0(areset_d[0]),
        .I1(areset_d[1]),
        .O(s_ready_i15_out));
  LUT4 #(
    .INIT(16'hCFE0)) 
    \state[1]_i_1__0 
       (.I0(\state_reg_n_0_[1] ),
        .I1(m_axi_lite_awready),
        .I2(m_axi_lite_awvalid),
        .I3(axi_awvalid_rs),
        .O(\state[1]_i_1__0_n_0 ));
  FDRE \state_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2_n_0 ),
        .D(\state[0]_i_3_n_0 ),
        .Q(m_axi_lite_awvalid),
        .R(\state[0]_i_1__0_n_0 ));
  FDSE \state_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2_n_0 ),
        .D(\state[1]_i_1__0_n_0 ),
        .Q(\state_reg_n_0_[1] ),
        .S(\state[0]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[0]_i_1 
       (.I0(storage_data2[0]),
        .I1(ch2_data_out[0]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[10]_i_1 
       (.I0(storage_data2[10]),
        .I1(ch2_data_out[10]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[10]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[11]_i_1 
       (.I0(storage_data2[11]),
        .I1(ch2_data_out[11]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[12]_i_1 
       (.I0(storage_data2[12]),
        .I1(ch2_data_out[12]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[12]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[13]_i_1 
       (.I0(storage_data2[13]),
        .I1(ch2_data_out[13]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[13]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[14]_i_1 
       (.I0(storage_data2[14]),
        .I1(ch2_data_out[14]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[15]_i_1 
       (.I0(storage_data2[15]),
        .I1(ch2_data_out[15]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[15]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[16]_i_1 
       (.I0(storage_data2[16]),
        .I1(ch2_data_out[16]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[17]_i_1 
       (.I0(storage_data2[17]),
        .I1(ch2_data_out[17]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[17]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[18]_i_1 
       (.I0(storage_data2[18]),
        .I1(ch2_data_out[18]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[18]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[19]_i_1 
       (.I0(storage_data2[19]),
        .I1(ch2_data_out[19]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[19]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[1]_i_1 
       (.I0(storage_data2[1]),
        .I1(ch2_data_out[1]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[20]_i_1 
       (.I0(storage_data2[20]),
        .I1(ch2_data_out[20]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[20]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[21]_i_1 
       (.I0(storage_data2[21]),
        .I1(ch2_data_out[21]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[21]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[22]_i_1 
       (.I0(storage_data2[22]),
        .I1(ch2_data_out[22]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[22]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[23]_i_1 
       (.I0(storage_data2[23]),
        .I1(ch2_data_out[23]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[23]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[24]_i_1 
       (.I0(storage_data2[24]),
        .I1(ch2_data_out[24]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[24]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[25]_i_1 
       (.I0(storage_data2[25]),
        .I1(ch2_data_out[25]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[25]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[26]_i_1 
       (.I0(storage_data2[26]),
        .I1(ch2_data_out[26]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[26]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[27]_i_1 
       (.I0(storage_data2[27]),
        .I1(ch2_data_out[27]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[27]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[28]_i_1 
       (.I0(storage_data2[28]),
        .I1(ch2_data_out[28]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[28]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[29]_i_1 
       (.I0(storage_data2[29]),
        .I1(ch2_data_out[29]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[29]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[2]_i_1 
       (.I0(storage_data2[2]),
        .I1(ch2_data_out[2]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[30]_i_1 
       (.I0(storage_data2[30]),
        .I1(ch2_data_out[30]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hEEAACC80)) 
    \storage_data1[31]_i_1 
       (.I0(axi_awvalid_rs),
        .I1(m_axi_lite_awready),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(load_s1_from_s2),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .O(storage_data1));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[31]_i_2 
       (.I0(storage_data2[31]),
        .I1(ch2_data_out[31]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[31]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[32]_i_1 
       (.I0(storage_data2[32]),
        .I1(ch2_data_out[32]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[32]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[33]_i_1 
       (.I0(storage_data2[33]),
        .I1(ch2_data_out[33]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[33]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[3]_i_1 
       (.I0(storage_data2[3]),
        .I1(ch2_data_out[3]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[4]_i_1 
       (.I0(storage_data2[4]),
        .I1(ch2_data_out[4]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[5]_i_1 
       (.I0(storage_data2[5]),
        .I1(ch2_data_out[5]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[6]_i_1 
       (.I0(storage_data2[6]),
        .I1(ch2_data_out[6]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[7]_i_1 
       (.I0(storage_data2[7]),
        .I1(ch2_data_out[7]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[8]_i_1 
       (.I0(storage_data2[8]),
        .I1(ch2_data_out[8]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[8]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[9]_i_1 
       (.I0(storage_data2[9]),
        .I1(ch2_data_out[9]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[9]_i_1_n_0 ));
  FDRE \storage_data1_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[0]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [0]),
        .R(1'b0));
  FDRE \storage_data1_reg[10] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[10]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [10]),
        .R(1'b0));
  FDRE \storage_data1_reg[11] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[11]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [11]),
        .R(1'b0));
  FDRE \storage_data1_reg[12] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[12]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [12]),
        .R(1'b0));
  FDRE \storage_data1_reg[13] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[13]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [13]),
        .R(1'b0));
  FDRE \storage_data1_reg[14] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[14]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [14]),
        .R(1'b0));
  FDRE \storage_data1_reg[15] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[15]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [15]),
        .R(1'b0));
  FDRE \storage_data1_reg[16] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[16]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [16]),
        .R(1'b0));
  FDRE \storage_data1_reg[17] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[17]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [17]),
        .R(1'b0));
  FDRE \storage_data1_reg[18] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[18]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [18]),
        .R(1'b0));
  FDRE \storage_data1_reg[19] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[19]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [19]),
        .R(1'b0));
  FDRE \storage_data1_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[1]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [1]),
        .R(1'b0));
  FDRE \storage_data1_reg[20] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[20]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [20]),
        .R(1'b0));
  FDRE \storage_data1_reg[21] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[21]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [21]),
        .R(1'b0));
  FDRE \storage_data1_reg[22] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[22]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [22]),
        .R(1'b0));
  FDRE \storage_data1_reg[23] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[23]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [23]),
        .R(1'b0));
  FDRE \storage_data1_reg[24] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[24]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [24]),
        .R(1'b0));
  FDRE \storage_data1_reg[25] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[25]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [25]),
        .R(1'b0));
  FDRE \storage_data1_reg[26] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[26]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [26]),
        .R(1'b0));
  FDRE \storage_data1_reg[27] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[27]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [27]),
        .R(1'b0));
  FDRE \storage_data1_reg[28] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[28]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [28]),
        .R(1'b0));
  FDRE \storage_data1_reg[29] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[29]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [29]),
        .R(1'b0));
  FDRE \storage_data1_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[2]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [2]),
        .R(1'b0));
  FDRE \storage_data1_reg[30] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[30]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [30]),
        .R(1'b0));
  FDRE \storage_data1_reg[31] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[31]_i_2_n_0 ),
        .Q(\m_axi_lite_awprot[1] [31]),
        .R(1'b0));
  FDRE \storage_data1_reg[32] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[32]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [32]),
        .R(1'b0));
  FDRE \storage_data1_reg[33] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[33]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [33]),
        .R(1'b0));
  FDRE \storage_data1_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[3]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [3]),
        .R(1'b0));
  FDRE \storage_data1_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[4]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [4]),
        .R(1'b0));
  FDRE \storage_data1_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[5]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [5]),
        .R(1'b0));
  FDRE \storage_data1_reg[6] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[6]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [6]),
        .R(1'b0));
  FDRE \storage_data1_reg[7] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[7]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [7]),
        .R(1'b0));
  FDRE \storage_data1_reg[8] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[8]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [8]),
        .R(1'b0));
  FDRE \storage_data1_reg[9] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[9]_i_1_n_0 ),
        .Q(\m_axi_lite_awprot[1] [9]),
        .R(1'b0));
  FDRE \storage_data2_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[0]),
        .Q(storage_data2[0]),
        .R(1'b0));
  FDRE \storage_data2_reg[10] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[10]),
        .Q(storage_data2[10]),
        .R(1'b0));
  FDRE \storage_data2_reg[11] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[11]),
        .Q(storage_data2[11]),
        .R(1'b0));
  FDRE \storage_data2_reg[12] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[12]),
        .Q(storage_data2[12]),
        .R(1'b0));
  FDRE \storage_data2_reg[13] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[13]),
        .Q(storage_data2[13]),
        .R(1'b0));
  FDRE \storage_data2_reg[14] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[14]),
        .Q(storage_data2[14]),
        .R(1'b0));
  FDRE \storage_data2_reg[15] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[15]),
        .Q(storage_data2[15]),
        .R(1'b0));
  FDRE \storage_data2_reg[16] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[16]),
        .Q(storage_data2[16]),
        .R(1'b0));
  FDRE \storage_data2_reg[17] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[17]),
        .Q(storage_data2[17]),
        .R(1'b0));
  FDRE \storage_data2_reg[18] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[18]),
        .Q(storage_data2[18]),
        .R(1'b0));
  FDRE \storage_data2_reg[19] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[19]),
        .Q(storage_data2[19]),
        .R(1'b0));
  FDRE \storage_data2_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[1]),
        .Q(storage_data2[1]),
        .R(1'b0));
  FDRE \storage_data2_reg[20] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[20]),
        .Q(storage_data2[20]),
        .R(1'b0));
  FDRE \storage_data2_reg[21] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[21]),
        .Q(storage_data2[21]),
        .R(1'b0));
  FDRE \storage_data2_reg[22] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[22]),
        .Q(storage_data2[22]),
        .R(1'b0));
  FDRE \storage_data2_reg[23] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[23]),
        .Q(storage_data2[23]),
        .R(1'b0));
  FDRE \storage_data2_reg[24] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[24]),
        .Q(storage_data2[24]),
        .R(1'b0));
  FDRE \storage_data2_reg[25] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[25]),
        .Q(storage_data2[25]),
        .R(1'b0));
  FDRE \storage_data2_reg[26] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[26]),
        .Q(storage_data2[26]),
        .R(1'b0));
  FDRE \storage_data2_reg[27] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[27]),
        .Q(storage_data2[27]),
        .R(1'b0));
  FDRE \storage_data2_reg[28] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[28]),
        .Q(storage_data2[28]),
        .R(1'b0));
  FDRE \storage_data2_reg[29] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[29]),
        .Q(storage_data2[29]),
        .R(1'b0));
  FDRE \storage_data2_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[2]),
        .Q(storage_data2[2]),
        .R(1'b0));
  FDRE \storage_data2_reg[30] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[30]),
        .Q(storage_data2[30]),
        .R(1'b0));
  FDRE \storage_data2_reg[31] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[31]),
        .Q(storage_data2[31]),
        .R(1'b0));
  FDRE \storage_data2_reg[32] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[32]),
        .Q(storage_data2[32]),
        .R(1'b0));
  FDRE \storage_data2_reg[33] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[33]),
        .Q(storage_data2[33]),
        .R(1'b0));
  FDRE \storage_data2_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[3]),
        .Q(storage_data2[3]),
        .R(1'b0));
  FDRE \storage_data2_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[4]),
        .Q(storage_data2[4]),
        .R(1'b0));
  FDRE \storage_data2_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[5]),
        .Q(storage_data2[5]),
        .R(1'b0));
  FDRE \storage_data2_reg[6] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[6]),
        .Q(storage_data2[6]),
        .R(1'b0));
  FDRE \storage_data2_reg[7] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[7]),
        .Q(storage_data2[7]),
        .R(1'b0));
  FDRE \storage_data2_reg[8] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[8]),
        .Q(storage_data2[8]),
        .R(1'b0));
  FDRE \storage_data2_reg[9] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(ch2_data_out[9]),
        .Q(storage_data2[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_asitv10_axisc_register_slice" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_asitv10_axisc_register_slice__parameterized0
   (m_axi_lite_wvalid,
    axi_wready_rs,
    \m_axi_lite_wstrb[3] ,
    m_axi_lite_wready,
    axi_wvalid_rs,
    sync_reset_out,
    D,
    m_axi_lite_aclk,
    E);
  output m_axi_lite_wvalid;
  output axi_wready_rs;
  output [35:0]\m_axi_lite_wstrb[3] ;
  input m_axi_lite_wready;
  input axi_wvalid_rs;
  input sync_reset_out;
  input [35:0]D;
  input m_axi_lite_aclk;
  input [0:0]E;

  wire [35:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[2] ;
  wire [1:0]areset_d;
  wire axi_wready_rs;
  wire axi_wvalid_rs;
  (* RTL_KEEP = "yes" *) wire load_s1_from_s2;
  wire m_axi_lite_aclk;
  wire m_axi_lite_wready;
  wire [35:0]\m_axi_lite_wstrb[3] ;
  wire m_axi_lite_wvalid;
  wire s_ready_i15_out;
  wire s_ready_i_i_1_n_0;
  wire s_ready_i_i_2_n_0;
  wire \state[0]_i_1__2_n_0 ;
  wire \state[0]_i_2__1_n_0 ;
  wire \state[0]_i_3__1_n_0 ;
  wire \state[1]_i_1__2_n_0 ;
  wire \state_reg_n_0_[1] ;
  wire storage_data1;
  wire \storage_data1[0]_i_1__1_n_0 ;
  wire \storage_data1[10]_i_1__1_n_0 ;
  wire \storage_data1[11]_i_1__1_n_0 ;
  wire \storage_data1[12]_i_1__1_n_0 ;
  wire \storage_data1[13]_i_1__1_n_0 ;
  wire \storage_data1[14]_i_1__1_n_0 ;
  wire \storage_data1[15]_i_1__1_n_0 ;
  wire \storage_data1[16]_i_1__1_n_0 ;
  wire \storage_data1[17]_i_1__1_n_0 ;
  wire \storage_data1[18]_i_1__1_n_0 ;
  wire \storage_data1[19]_i_1__1_n_0 ;
  wire \storage_data1[1]_i_1__1_n_0 ;
  wire \storage_data1[20]_i_1__1_n_0 ;
  wire \storage_data1[21]_i_1__1_n_0 ;
  wire \storage_data1[22]_i_1__1_n_0 ;
  wire \storage_data1[23]_i_1__1_n_0 ;
  wire \storage_data1[24]_i_1__1_n_0 ;
  wire \storage_data1[25]_i_1__1_n_0 ;
  wire \storage_data1[26]_i_1__1_n_0 ;
  wire \storage_data1[27]_i_1__1_n_0 ;
  wire \storage_data1[28]_i_1__1_n_0 ;
  wire \storage_data1[29]_i_1__1_n_0 ;
  wire \storage_data1[2]_i_1__1_n_0 ;
  wire \storage_data1[30]_i_1__1_n_0 ;
  wire \storage_data1[31]_i_2__1_n_0 ;
  wire \storage_data1[32]_i_1__1_n_0 ;
  wire \storage_data1[33]_i_1__1_n_0 ;
  wire \storage_data1[34]_i_1_n_0 ;
  wire \storage_data1[35]_i_1_n_0 ;
  wire \storage_data1[3]_i_1__1_n_0 ;
  wire \storage_data1[4]_i_1__1_n_0 ;
  wire \storage_data1[5]_i_1__1_n_0 ;
  wire \storage_data1[6]_i_1__1_n_0 ;
  wire \storage_data1[7]_i_1__1_n_0 ;
  wire \storage_data1[8]_i_1__1_n_0 ;
  wire \storage_data1[9]_i_1__1_n_0 ;
  wire \storage_data2_reg_n_0_[0] ;
  wire \storage_data2_reg_n_0_[10] ;
  wire \storage_data2_reg_n_0_[11] ;
  wire \storage_data2_reg_n_0_[12] ;
  wire \storage_data2_reg_n_0_[13] ;
  wire \storage_data2_reg_n_0_[14] ;
  wire \storage_data2_reg_n_0_[15] ;
  wire \storage_data2_reg_n_0_[16] ;
  wire \storage_data2_reg_n_0_[17] ;
  wire \storage_data2_reg_n_0_[18] ;
  wire \storage_data2_reg_n_0_[19] ;
  wire \storage_data2_reg_n_0_[1] ;
  wire \storage_data2_reg_n_0_[20] ;
  wire \storage_data2_reg_n_0_[21] ;
  wire \storage_data2_reg_n_0_[22] ;
  wire \storage_data2_reg_n_0_[23] ;
  wire \storage_data2_reg_n_0_[24] ;
  wire \storage_data2_reg_n_0_[25] ;
  wire \storage_data2_reg_n_0_[26] ;
  wire \storage_data2_reg_n_0_[27] ;
  wire \storage_data2_reg_n_0_[28] ;
  wire \storage_data2_reg_n_0_[29] ;
  wire \storage_data2_reg_n_0_[2] ;
  wire \storage_data2_reg_n_0_[30] ;
  wire \storage_data2_reg_n_0_[31] ;
  wire \storage_data2_reg_n_0_[32] ;
  wire \storage_data2_reg_n_0_[33] ;
  wire \storage_data2_reg_n_0_[34] ;
  wire \storage_data2_reg_n_0_[35] ;
  wire \storage_data2_reg_n_0_[3] ;
  wire \storage_data2_reg_n_0_[4] ;
  wire \storage_data2_reg_n_0_[5] ;
  wire \storage_data2_reg_n_0_[6] ;
  wire \storage_data2_reg_n_0_[7] ;
  wire \storage_data2_reg_n_0_[8] ;
  wire \storage_data2_reg_n_0_[9] ;
  wire sync_reset_out;

  LUT4 #(
    .INIT(16'h00A2)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(axi_wvalid_rs),
        .I2(m_axi_lite_wready),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8B888888)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(axi_wvalid_rs),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(m_axi_lite_wready),
        .I4(load_s1_from_s2),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44444474)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(axi_wvalid_rs),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(load_s1_from_s2),
        .I3(m_axi_lite_wready),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(axi_wvalid_rs),
        .I2(m_axi_lite_wready),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__1_n_0 ),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(\state[0]_i_1__2_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__1_n_0 ),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ),
        .R(\state[0]_i_1__2_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__1_n_0 ),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(\state[0]_i_1__2_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__1_n_0 ),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(load_s1_from_s2),
        .R(\state[0]_i_1__2_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE \areset_d_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_out),
        .Q(areset_d[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \areset_d_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(areset_d[0]),
        .Q(areset_d[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8F88FFFF8F880000)) 
    s_ready_i_i_1
       (.I0(m_axi_lite_wready),
        .I1(load_s1_from_s2),
        .I2(areset_d[0]),
        .I3(areset_d[1]),
        .I4(s_ready_i_i_2_n_0),
        .I5(axi_wready_rs),
        .O(s_ready_i_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000FFFF0000F808)) 
    s_ready_i_i_2
       (.I0(axi_wvalid_rs),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(m_axi_lite_wready),
        .I3(load_s1_from_s2),
        .I4(areset_d[0]),
        .I5(areset_d[1]),
        .O(s_ready_i_i_2_n_0));
  FDRE s_ready_i_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(s_ready_i_i_1_n_0),
        .Q(axi_wready_rs),
        .R(sync_reset_out));
  LUT3 #(
    .INIT(8'hBA)) 
    \state[0]_i_1__2 
       (.I0(sync_reset_out),
        .I1(areset_d[0]),
        .I2(areset_d[1]),
        .O(\state[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hAA88A288AA808080)) 
    \state[0]_i_2__1 
       (.I0(s_ready_i15_out),
        .I1(m_axi_lite_wready),
        .I2(load_s1_from_s2),
        .I3(axi_wvalid_rs),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\state[0]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h6F40)) 
    \state[0]_i_3__1 
       (.I0(\state_reg_n_0_[1] ),
        .I1(m_axi_lite_wready),
        .I2(m_axi_lite_wvalid),
        .I3(axi_wvalid_rs),
        .O(\state[0]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \state[0]_i_4__1 
       (.I0(areset_d[0]),
        .I1(areset_d[1]),
        .O(s_ready_i15_out));
  LUT4 #(
    .INIT(16'hCFE0)) 
    \state[1]_i_1__2 
       (.I0(\state_reg_n_0_[1] ),
        .I1(m_axi_lite_wready),
        .I2(m_axi_lite_wvalid),
        .I3(axi_wvalid_rs),
        .O(\state[1]_i_1__2_n_0 ));
  FDRE \state_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__1_n_0 ),
        .D(\state[0]_i_3__1_n_0 ),
        .Q(m_axi_lite_wvalid),
        .R(\state[0]_i_1__2_n_0 ));
  FDSE \state_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(\state[0]_i_2__1_n_0 ),
        .D(\state[1]_i_1__2_n_0 ),
        .Q(\state_reg_n_0_[1] ),
        .S(\state[0]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[0]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[0] ),
        .I1(D[0]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[0]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[10]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[10] ),
        .I1(D[10]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[10]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[11]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[11] ),
        .I1(D[11]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[11]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[12]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[12] ),
        .I1(D[12]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[12]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[13]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[13] ),
        .I1(D[13]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[13]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[14]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[14] ),
        .I1(D[14]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[14]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[15]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[15] ),
        .I1(D[15]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[15]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[16]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[16] ),
        .I1(D[16]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[16]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[17]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[17] ),
        .I1(D[17]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[17]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[18]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[18] ),
        .I1(D[18]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[18]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[19]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[19] ),
        .I1(D[19]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[19]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[1]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[1] ),
        .I1(D[1]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[1]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[20]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[20] ),
        .I1(D[20]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[20]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[21]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[21] ),
        .I1(D[21]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[21]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[22]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[22] ),
        .I1(D[22]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[22]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[23]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[23] ),
        .I1(D[23]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[23]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[24]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[24] ),
        .I1(D[24]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[24]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[25]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[25] ),
        .I1(D[25]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[25]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[26]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[26] ),
        .I1(D[26]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[26]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[27]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[27] ),
        .I1(D[27]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[27]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[28]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[28] ),
        .I1(D[28]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[28]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[29]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[29] ),
        .I1(D[29]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[29]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[2]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[2] ),
        .I1(D[2]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[2]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[30]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[30] ),
        .I1(D[30]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[30]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hEEAACC80)) 
    \storage_data1[31]_i_1__1 
       (.I0(axi_wvalid_rs),
        .I1(m_axi_lite_wready),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(load_s1_from_s2),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .O(storage_data1));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[31]_i_2__1 
       (.I0(\storage_data2_reg_n_0_[31] ),
        .I1(D[31]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[31]_i_2__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[32]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[32] ),
        .I1(D[32]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[32]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[33]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[33] ),
        .I1(D[33]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[33]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[34]_i_1 
       (.I0(\storage_data2_reg_n_0_[34] ),
        .I1(D[34]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[34]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[35]_i_1 
       (.I0(\storage_data2_reg_n_0_[35] ),
        .I1(D[35]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[35]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[3]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[3] ),
        .I1(D[3]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[3]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[4]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[4] ),
        .I1(D[4]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[4]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[5]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[5] ),
        .I1(D[5]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[5]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[6]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[6] ),
        .I1(D[6]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[6]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[7]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[7] ),
        .I1(D[7]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[7]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[8]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[8] ),
        .I1(D[8]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[8]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \storage_data1[9]_i_1__1 
       (.I0(\storage_data2_reg_n_0_[9] ),
        .I1(D[9]),
        .I2(load_s1_from_s2),
        .O(\storage_data1[9]_i_1__1_n_0 ));
  FDRE \storage_data1_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[0]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [0]),
        .R(1'b0));
  FDRE \storage_data1_reg[10] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[10]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [10]),
        .R(1'b0));
  FDRE \storage_data1_reg[11] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[11]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [11]),
        .R(1'b0));
  FDRE \storage_data1_reg[12] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[12]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [12]),
        .R(1'b0));
  FDRE \storage_data1_reg[13] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[13]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [13]),
        .R(1'b0));
  FDRE \storage_data1_reg[14] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[14]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [14]),
        .R(1'b0));
  FDRE \storage_data1_reg[15] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[15]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [15]),
        .R(1'b0));
  FDRE \storage_data1_reg[16] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[16]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [16]),
        .R(1'b0));
  FDRE \storage_data1_reg[17] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[17]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [17]),
        .R(1'b0));
  FDRE \storage_data1_reg[18] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[18]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [18]),
        .R(1'b0));
  FDRE \storage_data1_reg[19] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[19]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [19]),
        .R(1'b0));
  FDRE \storage_data1_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[1]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [1]),
        .R(1'b0));
  FDRE \storage_data1_reg[20] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[20]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [20]),
        .R(1'b0));
  FDRE \storage_data1_reg[21] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[21]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [21]),
        .R(1'b0));
  FDRE \storage_data1_reg[22] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[22]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [22]),
        .R(1'b0));
  FDRE \storage_data1_reg[23] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[23]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [23]),
        .R(1'b0));
  FDRE \storage_data1_reg[24] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[24]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [24]),
        .R(1'b0));
  FDRE \storage_data1_reg[25] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[25]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [25]),
        .R(1'b0));
  FDRE \storage_data1_reg[26] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[26]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [26]),
        .R(1'b0));
  FDRE \storage_data1_reg[27] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[27]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [27]),
        .R(1'b0));
  FDRE \storage_data1_reg[28] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[28]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [28]),
        .R(1'b0));
  FDRE \storage_data1_reg[29] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[29]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [29]),
        .R(1'b0));
  FDRE \storage_data1_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[2]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [2]),
        .R(1'b0));
  FDRE \storage_data1_reg[30] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[30]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [30]),
        .R(1'b0));
  FDRE \storage_data1_reg[31] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[31]_i_2__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [31]),
        .R(1'b0));
  FDRE \storage_data1_reg[32] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[32]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [32]),
        .R(1'b0));
  FDRE \storage_data1_reg[33] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[33]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [33]),
        .R(1'b0));
  FDRE \storage_data1_reg[34] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[34]_i_1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [34]),
        .R(1'b0));
  FDRE \storage_data1_reg[35] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[35]_i_1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [35]),
        .R(1'b0));
  FDRE \storage_data1_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[3]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [3]),
        .R(1'b0));
  FDRE \storage_data1_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[4]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [4]),
        .R(1'b0));
  FDRE \storage_data1_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[5]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [5]),
        .R(1'b0));
  FDRE \storage_data1_reg[6] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[6]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [6]),
        .R(1'b0));
  FDRE \storage_data1_reg[7] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[7]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [7]),
        .R(1'b0));
  FDRE \storage_data1_reg[8] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[8]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [8]),
        .R(1'b0));
  FDRE \storage_data1_reg[9] 
       (.C(m_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[9]_i_1__1_n_0 ),
        .Q(\m_axi_lite_wstrb[3] [9]),
        .R(1'b0));
  FDRE \storage_data2_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[0]),
        .Q(\storage_data2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \storage_data2_reg[10] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[10]),
        .Q(\storage_data2_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \storage_data2_reg[11] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[11]),
        .Q(\storage_data2_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \storage_data2_reg[12] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[12]),
        .Q(\storage_data2_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \storage_data2_reg[13] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[13]),
        .Q(\storage_data2_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \storage_data2_reg[14] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[14]),
        .Q(\storage_data2_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \storage_data2_reg[15] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[15]),
        .Q(\storage_data2_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \storage_data2_reg[16] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[16]),
        .Q(\storage_data2_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \storage_data2_reg[17] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[17]),
        .Q(\storage_data2_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \storage_data2_reg[18] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[18]),
        .Q(\storage_data2_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \storage_data2_reg[19] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[19]),
        .Q(\storage_data2_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \storage_data2_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[1]),
        .Q(\storage_data2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \storage_data2_reg[20] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[20]),
        .Q(\storage_data2_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \storage_data2_reg[21] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[21]),
        .Q(\storage_data2_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \storage_data2_reg[22] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[22]),
        .Q(\storage_data2_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \storage_data2_reg[23] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[23]),
        .Q(\storage_data2_reg_n_0_[23] ),
        .R(1'b0));
  FDRE \storage_data2_reg[24] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[24]),
        .Q(\storage_data2_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \storage_data2_reg[25] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[25]),
        .Q(\storage_data2_reg_n_0_[25] ),
        .R(1'b0));
  FDRE \storage_data2_reg[26] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[26]),
        .Q(\storage_data2_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \storage_data2_reg[27] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[27]),
        .Q(\storage_data2_reg_n_0_[27] ),
        .R(1'b0));
  FDRE \storage_data2_reg[28] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[28]),
        .Q(\storage_data2_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \storage_data2_reg[29] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[29]),
        .Q(\storage_data2_reg_n_0_[29] ),
        .R(1'b0));
  FDRE \storage_data2_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[2]),
        .Q(\storage_data2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \storage_data2_reg[30] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[30]),
        .Q(\storage_data2_reg_n_0_[30] ),
        .R(1'b0));
  FDRE \storage_data2_reg[31] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[31]),
        .Q(\storage_data2_reg_n_0_[31] ),
        .R(1'b0));
  FDRE \storage_data2_reg[32] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[32]),
        .Q(\storage_data2_reg_n_0_[32] ),
        .R(1'b0));
  FDRE \storage_data2_reg[33] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[33]),
        .Q(\storage_data2_reg_n_0_[33] ),
        .R(1'b0));
  FDRE \storage_data2_reg[34] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[34]),
        .Q(\storage_data2_reg_n_0_[34] ),
        .R(1'b0));
  FDRE \storage_data2_reg[35] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[35]),
        .Q(\storage_data2_reg_n_0_[35] ),
        .R(1'b0));
  FDRE \storage_data2_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[3]),
        .Q(\storage_data2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \storage_data2_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[4]),
        .Q(\storage_data2_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \storage_data2_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[5]),
        .Q(\storage_data2_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \storage_data2_reg[6] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[6]),
        .Q(\storage_data2_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \storage_data2_reg[7] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[7]),
        .Q(\storage_data2_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \storage_data2_reg[8] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[8]),
        .Q(\storage_data2_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \storage_data2_reg[9] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(D[9]),
        .Q(\storage_data2_reg_n_0_[9] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_async_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo
   (\gic0.gc0.count_reg[0] ,
    aw_ch_fc,
    m_axi_awvalid,
    \m_axi_awaddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[22] ,
    br_fifo_reset,
    p_0_in,
    aw_ch_data_valid,
    m_axi_awready);
  output \gic0.gc0.count_reg[0] ;
  output aw_ch_fc;
  output m_axi_awvalid;
  output [44:0]\m_axi_awaddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input [22:0]\data_out_reg[22] ;
  input br_fifo_reset;
  input p_0_in;
  input aw_ch_data_valid;
  input m_axi_awready;

  wire [22:0]Q;
  wire aw_ch_data_valid;
  wire aw_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \gic0.gc0.count_reg[0] ;
  wire m_aclk;
  wire [44:0]\m_axi_awaddr[31] ;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire p_0_in;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1 U0
       (.Q(Q),
        .aw_ch_data_valid(aw_ch_data_valid),
        .aw_ch_fc(aw_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gic0.gc0.count_reg[0] (\gic0.gc0.count_reg[0] ),
        .m_aclk(m_aclk),
        .\m_axi_awaddr[31] (\m_axi_awaddr[31] ),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .p_0_in(p_0_in));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_async_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo_34
   (\gic0.gc0.count_reg[7] ,
    ar_ch_fc,
    m_axi_arvalid,
    \m_axi_araddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[22] ,
    br_fifo_reset,
    p_0_in,
    ar_ch_data_valid,
    m_axi_arready);
  output \gic0.gc0.count_reg[7] ;
  output ar_ch_fc;
  output m_axi_arvalid;
  output [44:0]\m_axi_araddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input [22:0]\data_out_reg[22] ;
  input br_fifo_reset;
  input p_0_in;
  input ar_ch_data_valid;
  input m_axi_arready;

  wire [22:0]Q;
  wire ar_ch_data_valid;
  wire ar_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \gic0.gc0.count_reg[7] ;
  wire m_aclk;
  wire [44:0]\m_axi_araddr[31] ;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire p_0_in;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_36 U0
       (.Q(Q),
        .ar_ch_data_valid(ar_ch_data_valid),
        .ar_ch_fc(ar_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gic0.gc0.count_reg[7] (\gic0.gc0.count_reg[7] ),
        .m_aclk(m_aclk),
        .\m_axi_araddr[31] (\m_axi_araddr[31] ),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .p_0_in(p_0_in));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_async_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo__parameterized0
   (\gic0.gc0.count_reg[8] ,
    wd_ch_fc,
    m_axi_wvalid,
    \m_axi_wdata[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[18] ,
    br_fifo_reset,
    p_0_in,
    wd_ch_data_valid,
    m_axi_wready);
  output \gic0.gc0.count_reg[8] ;
  output wd_ch_fc;
  output m_axi_wvalid;
  output [37:0]\m_axi_wdata[31] ;
  input m_aclk;
  input clk_ph_out;
  input [18:0]Q;
  input [18:0]\data_out_reg[18] ;
  input br_fifo_reset;
  input p_0_in;
  input wd_ch_data_valid;
  input m_axi_wready;

  wire [18:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire \gic0.gc0.count_reg[8] ;
  wire m_aclk;
  wire [37:0]\m_axi_wdata[31] ;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire p_0_in;
  wire wd_ch_data_valid;
  wire wd_ch_fc;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1__parameterized0 U0
       (.Q(Q),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gic0.gc0.count_reg[8] (\gic0.gc0.count_reg[8] ),
        .m_aclk(m_aclk),
        .\m_axi_wdata[31] (\m_axi_wdata[31] ),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .p_0_in(p_0_in),
        .wd_ch_data_valid(wd_ch_data_valid),
        .wd_ch_fc(wd_ch_fc));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_async_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo__parameterized1
   (\gpregsm1.curr_fwft_state_reg[0] ,
    \tdm_data_out_reg[6] ,
    \tdm_data_out_reg[7] ,
    \tdm_data_out_reg[8] ,
    \tdm_data_out_reg[9] ,
    \tdm_data_out_reg[10] ,
    \tdm_data_out_reg[11] ,
    \tdm_data_out_reg[12] ,
    \tdm_data_out_reg[13] ,
    \tdm_data_out_reg[14] ,
    \tdm_data_out_reg[15] ,
    \tdm_data_out_reg[16] ,
    \tdm_data_out_reg[17] ,
    \tdm_data_out_reg[18] ,
    \tdm_data_out_reg[19] ,
    \tdm_data_out_reg[20] ,
    \tdm_data_out_reg[21] ,
    \tdm_data_out_reg[22] ,
    \tdm_data_out_reg[23] ,
    p_12_in,
    m_axi_rready,
    clk_ph_out,
    m_aclk,
    m_axi_rdata,
    DIADI,
    br_fifo_reset,
    p_0_in,
    Q,
    \mux_by_2.data_count_reg[0] ,
    rd_ch_data_ready,
    tx_phy_ready,
    \ctrl_info_reg[0] ,
    m_axi_rvalid);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output \tdm_data_out_reg[6] ;
  output \tdm_data_out_reg[7] ;
  output \tdm_data_out_reg[8] ;
  output \tdm_data_out_reg[9] ;
  output \tdm_data_out_reg[10] ;
  output \tdm_data_out_reg[11] ;
  output \tdm_data_out_reg[12] ;
  output \tdm_data_out_reg[13] ;
  output \tdm_data_out_reg[14] ;
  output \tdm_data_out_reg[15] ;
  output \tdm_data_out_reg[16] ;
  output \tdm_data_out_reg[17] ;
  output \tdm_data_out_reg[18] ;
  output \tdm_data_out_reg[19] ;
  output \tdm_data_out_reg[20] ;
  output \tdm_data_out_reg[21] ;
  output \tdm_data_out_reg[22] ;
  output \tdm_data_out_reg[23] ;
  output p_12_in;
  output m_axi_rready;
  input clk_ph_out;
  input m_aclk;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;
  input br_fifo_reset;
  input p_0_in;
  input [0:0]Q;
  input \mux_by_2.data_count_reg[0] ;
  input rd_ch_data_ready;
  input tx_phy_ready;
  input [0:0]\ctrl_info_reg[0] ;
  input m_axi_rvalid;

  wire [3:0]DIADI;
  wire [0:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [0:0]\ctrl_info_reg[0] ;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire \mux_by_2.data_count_reg[0] ;
  wire p_0_in;
  wire p_12_in;
  wire rd_ch_data_ready;
  wire \tdm_data_out_reg[10] ;
  wire \tdm_data_out_reg[11] ;
  wire \tdm_data_out_reg[12] ;
  wire \tdm_data_out_reg[13] ;
  wire \tdm_data_out_reg[14] ;
  wire \tdm_data_out_reg[15] ;
  wire \tdm_data_out_reg[16] ;
  wire \tdm_data_out_reg[17] ;
  wire \tdm_data_out_reg[18] ;
  wire \tdm_data_out_reg[19] ;
  wire \tdm_data_out_reg[20] ;
  wire \tdm_data_out_reg[21] ;
  wire \tdm_data_out_reg[22] ;
  wire \tdm_data_out_reg[23] ;
  wire \tdm_data_out_reg[6] ;
  wire \tdm_data_out_reg[7] ;
  wire \tdm_data_out_reg[8] ;
  wire \tdm_data_out_reg[9] ;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1__parameterized1 U0
       (.DIADI(DIADI),
        .Q(Q),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\ctrl_info_reg[0] (\ctrl_info_reg[0] ),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .\mux_by_2.data_count_reg[0] (\mux_by_2.data_count_reg[0] ),
        .p_0_in(p_0_in),
        .p_12_in(p_12_in),
        .rd_ch_data_ready(rd_ch_data_ready),
        .\tdm_data_out_reg[10] (\tdm_data_out_reg[10] ),
        .\tdm_data_out_reg[11] (\tdm_data_out_reg[11] ),
        .\tdm_data_out_reg[12] (\tdm_data_out_reg[12] ),
        .\tdm_data_out_reg[13] (\tdm_data_out_reg[13] ),
        .\tdm_data_out_reg[14] (\tdm_data_out_reg[14] ),
        .\tdm_data_out_reg[15] (\tdm_data_out_reg[15] ),
        .\tdm_data_out_reg[16] (\tdm_data_out_reg[16] ),
        .\tdm_data_out_reg[17] (\tdm_data_out_reg[17] ),
        .\tdm_data_out_reg[18] (\tdm_data_out_reg[18] ),
        .\tdm_data_out_reg[19] (\tdm_data_out_reg[19] ),
        .\tdm_data_out_reg[20] (\tdm_data_out_reg[20] ),
        .\tdm_data_out_reg[21] (\tdm_data_out_reg[21] ),
        .\tdm_data_out_reg[22] (\tdm_data_out_reg[22] ),
        .\tdm_data_out_reg[23] (\tdm_data_out_reg[23] ),
        .\tdm_data_out_reg[6] (\tdm_data_out_reg[6] ),
        .\tdm_data_out_reg[7] (\tdm_data_out_reg[7] ),
        .\tdm_data_out_reg[8] (\tdm_data_out_reg[8] ),
        .\tdm_data_out_reg[9] (\tdm_data_out_reg[9] ),
        .tx_phy_ready(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_async_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo__parameterized2
   (\gpregsm1.curr_fwft_state_reg[0] ,
    int_ch1_ready5,
    m_axi_bready,
    br_ch_data,
    m_aclk,
    br_fifo_reset,
    clk_ph_out,
    br_ch_data_ready,
    tx_phy_ready,
    Q,
    m_axi_bvalid,
    bfifo_data);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output int_ch1_ready5;
  output m_axi_bready;
  output [2:0]br_ch_data;
  input m_aclk;
  input br_fifo_reset;
  input clk_ph_out;
  input br_ch_data_ready;
  input tx_phy_ready;
  input [0:0]Q;
  input m_axi_bvalid;
  input [2:0]bfifo_data;

  wire [0:0]Q;
  wire [2:0]bfifo_data;
  wire [2:0]br_ch_data;
  wire br_ch_data_ready;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire int_ch1_ready5;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1__parameterized2 U0
       (.Q(Q),
        .bfifo_data(bfifo_data),
        .br_ch_data(br_ch_data),
        .br_ch_data_ready(br_ch_data_ready),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .int_ch1_ready5(int_ch1_ready5),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .tx_phy_ready(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_async_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo__parameterized3
   (\gpr1.dout_i_reg[0] ,
    prog_full_i,
    \calib_intr_gen.tx_ch0_data_reg[19] ,
    \calib_intr_gen.tx_ch0_data_reg[18] ,
    \calib_intr_gen.tx_ch0_data_reg[17] ,
    \calib_intr_gen.tx_ch0_data_reg[16] ,
    \calib_intr_gen.tx_ch0_data_reg[15] ,
    \calib_intr_gen.tx_ch0_data_reg[14] ,
    \calib_intr_gen.tx_ch0_data_reg[13] ,
    \calib_intr_gen.tx_ch0_data_reg[12] ,
    \calib_intr_gen.tx_ch0_data_reg[11] ,
    \calib_intr_gen.tx_ch0_data_reg[10] ,
    \calib_intr_gen.tx_ch0_data_reg[9] ,
    \calib_intr_gen.tx_ch0_data_reg[8] ,
    \calib_intr_gen.tx_ch0_data_reg[7] ,
    \calib_intr_gen.tx_ch0_data_reg[6] ,
    \calib_intr_gen.tx_ch0_data_reg[5] ,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    \calib_intr_gen.tx_ch0_data_reg[3] ,
    m_axi_lite_aclk,
    fifo_reset,
    clk_ph_out,
    rx_user_reset,
    axi_lite_tx_ready,
    tx_fifo_we,
    Q);
  output \gpr1.dout_i_reg[0] ;
  output prog_full_i;
  output \calib_intr_gen.tx_ch0_data_reg[19] ;
  output \calib_intr_gen.tx_ch0_data_reg[18] ;
  output \calib_intr_gen.tx_ch0_data_reg[17] ;
  output \calib_intr_gen.tx_ch0_data_reg[16] ;
  output \calib_intr_gen.tx_ch0_data_reg[15] ;
  output \calib_intr_gen.tx_ch0_data_reg[14] ;
  output \calib_intr_gen.tx_ch0_data_reg[13] ;
  output \calib_intr_gen.tx_ch0_data_reg[12] ;
  output \calib_intr_gen.tx_ch0_data_reg[11] ;
  output \calib_intr_gen.tx_ch0_data_reg[10] ;
  output \calib_intr_gen.tx_ch0_data_reg[9] ;
  output \calib_intr_gen.tx_ch0_data_reg[8] ;
  output \calib_intr_gen.tx_ch0_data_reg[7] ;
  output \calib_intr_gen.tx_ch0_data_reg[6] ;
  output \calib_intr_gen.tx_ch0_data_reg[5] ;
  output \calib_intr_gen.tx_ch0_data_reg[4] ;
  output [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  input m_axi_lite_aclk;
  input fifo_reset;
  input clk_ph_out;
  input rx_user_reset;
  input axi_lite_tx_ready;
  input tx_fifo_we;
  input [18:0]Q;

  wire [18:0]Q;
  wire axi_lite_tx_ready;
  wire \calib_intr_gen.tx_ch0_data_reg[10] ;
  wire \calib_intr_gen.tx_ch0_data_reg[11] ;
  wire \calib_intr_gen.tx_ch0_data_reg[12] ;
  wire \calib_intr_gen.tx_ch0_data_reg[13] ;
  wire \calib_intr_gen.tx_ch0_data_reg[14] ;
  wire \calib_intr_gen.tx_ch0_data_reg[15] ;
  wire \calib_intr_gen.tx_ch0_data_reg[16] ;
  wire \calib_intr_gen.tx_ch0_data_reg[17] ;
  wire \calib_intr_gen.tx_ch0_data_reg[18] ;
  wire \calib_intr_gen.tx_ch0_data_reg[19] ;
  wire [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire \calib_intr_gen.tx_ch0_data_reg[5] ;
  wire \calib_intr_gen.tx_ch0_data_reg[6] ;
  wire \calib_intr_gen.tx_ch0_data_reg[7] ;
  wire \calib_intr_gen.tx_ch0_data_reg[8] ;
  wire \calib_intr_gen.tx_ch0_data_reg[9] ;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gpr1.dout_i_reg[0] ;
  wire m_axi_lite_aclk;
  wire prog_full_i;
  wire rx_user_reset;
  wire tx_fifo_we;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1__parameterized3 U0
       (.Q(Q),
        .axi_lite_tx_ready(axi_lite_tx_ready),
        .\calib_intr_gen.tx_ch0_data_reg[10] (\calib_intr_gen.tx_ch0_data_reg[10] ),
        .\calib_intr_gen.tx_ch0_data_reg[11] (\calib_intr_gen.tx_ch0_data_reg[11] ),
        .\calib_intr_gen.tx_ch0_data_reg[12] (\calib_intr_gen.tx_ch0_data_reg[12] ),
        .\calib_intr_gen.tx_ch0_data_reg[13] (\calib_intr_gen.tx_ch0_data_reg[13] ),
        .\calib_intr_gen.tx_ch0_data_reg[14] (\calib_intr_gen.tx_ch0_data_reg[14] ),
        .\calib_intr_gen.tx_ch0_data_reg[15] (\calib_intr_gen.tx_ch0_data_reg[15] ),
        .\calib_intr_gen.tx_ch0_data_reg[16] (\calib_intr_gen.tx_ch0_data_reg[16] ),
        .\calib_intr_gen.tx_ch0_data_reg[17] (\calib_intr_gen.tx_ch0_data_reg[17] ),
        .\calib_intr_gen.tx_ch0_data_reg[18] (\calib_intr_gen.tx_ch0_data_reg[18] ),
        .\calib_intr_gen.tx_ch0_data_reg[19] (\calib_intr_gen.tx_ch0_data_reg[19] ),
        .\calib_intr_gen.tx_ch0_data_reg[3] (\calib_intr_gen.tx_ch0_data_reg[3] ),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\calib_intr_gen.tx_ch0_data_reg[4] ),
        .\calib_intr_gen.tx_ch0_data_reg[5] (\calib_intr_gen.tx_ch0_data_reg[5] ),
        .\calib_intr_gen.tx_ch0_data_reg[6] (\calib_intr_gen.tx_ch0_data_reg[6] ),
        .\calib_intr_gen.tx_ch0_data_reg[7] (\calib_intr_gen.tx_ch0_data_reg[7] ),
        .\calib_intr_gen.tx_ch0_data_reg[8] (\calib_intr_gen.tx_ch0_data_reg[8] ),
        .\calib_intr_gen.tx_ch0_data_reg[9] (\calib_intr_gen.tx_ch0_data_reg[9] ),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpr1.dout_i_reg[0] (\gpr1.dout_i_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .prog_full_i(prog_full_i),
        .rx_user_reset(rx_user_reset),
        .tx_fifo_we(tx_fifo_we));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_async_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo__parameterized4
   (\gpregsm1.curr_fwft_state_reg[0] ,
    D,
    Q,
    ch0_valid_out_reg,
    ch1_valid_out_reg,
    ch2_valid_out_reg,
    m_axi_lite_aclk,
    clk_ph_out,
    fifo_reset,
    axi_lite_rx_valid,
    rx_fifo_re,
    \state_reg[5] ,
    axi_wready_rs,
    axi_arready_rs,
    axi_awready_rs,
    \axi_lite_rx_gen.axi_lite_rx_data_reg[19] );
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output [2:0]D;
  output [19:0]Q;
  output ch0_valid_out_reg;
  output ch1_valid_out_reg;
  output ch2_valid_out_reg;
  input m_axi_lite_aclk;
  input clk_ph_out;
  input fifo_reset;
  input axi_lite_rx_valid;
  input rx_fifo_re;
  input [3:0]\state_reg[5] ;
  input axi_wready_rs;
  input axi_arready_rs;
  input axi_awready_rs;
  input [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;

  wire [2:0]D;
  wire [19:0]Q;
  wire axi_arready_rs;
  wire axi_awready_rs;
  wire [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  wire axi_lite_rx_valid;
  wire axi_wready_rs;
  wire ch0_valid_out_reg;
  wire ch1_valid_out_reg;
  wire ch2_valid_out_reg;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_axi_lite_aclk;
  wire rx_fifo_re;
  wire [3:0]\state_reg[5] ;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1__parameterized4 U0
       (.D(D),
        .Q(Q),
        .axi_arready_rs(axi_arready_rs),
        .axi_awready_rs(axi_awready_rs),
        .\axi_lite_rx_gen.axi_lite_rx_data_reg[19] (\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .axi_wready_rs(axi_wready_rs),
        .ch0_valid_out_reg(ch0_valid_out_reg),
        .ch1_valid_out_reg(ch1_valid_out_reg),
        .ch2_valid_out_reg(ch2_valid_out_reg),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .rx_fifo_re(rx_fifo_re),
        .\state_reg[5] (\state_reg[5] ));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_awr_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_awr_fifo
   (\gic0.gc0.count_reg[7] ,
    ar_ch_fc,
    m_axi_arvalid,
    \m_axi_araddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    br_fifo_reset,
    ar_ch_data_valid,
    m_axi_arready,
    E,
    rx_user_reset);
  output \gic0.gc0.count_reg[7] ;
  output ar_ch_fc;
  output m_axi_arvalid;
  output [44:0]\m_axi_araddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input br_fifo_reset;
  input ar_ch_data_valid;
  input m_axi_arready;
  input [0:0]E;
  input rx_user_reset;

  wire [0:0]E;
  wire [22:0]Q;
  wire ar_ch_data_valid;
  wire ar_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire \gic0.gc0.count_reg[7] ;
  wire m_aclk;
  wire [44:0]\m_axi_araddr[31] ;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire p_0_in;
  wire [22:0]pack_data_out;
  wire rx_user_reset;

  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo_34 axi_chip2chip_async_fifo_inst
       (.Q(pack_data_out),
        .ar_ch_data_valid(ar_ch_data_valid),
        .ar_ch_fc(ar_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (Q),
        .\gic0.gc0.count_reg[7] (\gic0.gc0.count_reg[7] ),
        .m_aclk(m_aclk),
        .\m_axi_araddr[31] (\m_axi_araddr[31] ),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .p_0_in(p_0_in));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_packer_35 axi_chip2chip_packer_inst
       (.E(E),
        .Q(pack_data_out),
        .ar_ch_data_valid(ar_ch_data_valid),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (Q),
        .p_0_in(p_0_in),
        .ram_full_i_reg(\gic0.gc0.count_reg[7] ),
        .rx_user_reset(rx_user_reset));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_awr_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_awr_fifo_1
   (ram_full_i,
    aw_ch_fc,
    m_axi_awvalid,
    \m_axi_awaddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    br_fifo_reset,
    aw_ch_data_valid,
    m_axi_awready,
    E,
    rx_user_reset);
  output ram_full_i;
  output aw_ch_fc;
  output m_axi_awvalid;
  output [44:0]\m_axi_awaddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input br_fifo_reset;
  input aw_ch_data_valid;
  input m_axi_awready;
  input [0:0]E;
  input rx_user_reset;

  wire [0:0]E;
  wire [22:0]Q;
  wire aw_ch_data_valid;
  wire aw_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire m_aclk;
  wire [44:0]\m_axi_awaddr[31] ;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire p_0_in;
  wire [22:0]pack_data_out;
  wire ram_full_i;
  wire rx_user_reset;

  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo axi_chip2chip_async_fifo_inst
       (.Q(pack_data_out),
        .aw_ch_data_valid(aw_ch_data_valid),
        .aw_ch_fc(aw_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (Q),
        .\gic0.gc0.count_reg[0] (ram_full_i),
        .m_aclk(m_aclk),
        .\m_axi_awaddr[31] (\m_axi_awaddr[31] ),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .p_0_in(p_0_in));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_packer axi_chip2chip_packer_inst
       (.E(E),
        .Q(pack_data_out),
        .aw_ch_data_valid(aw_ch_data_valid),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (Q),
        .p_0_in(p_0_in),
        .ram_full_i(ram_full_i),
        .rx_user_reset(rx_user_reset));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_awr_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_awr_fifo__parameterized0
   (\gic0.gc0.count_reg[8] ,
    wd_ch_fc,
    m_axi_wvalid,
    \m_axi_wdata[31] ,
    m_aclk,
    clk_ph_out,
    \data_out_reg[18] ,
    br_fifo_reset,
    wd_ch_data_valid,
    m_axi_wready,
    E,
    rx_user_reset);
  output \gic0.gc0.count_reg[8] ;
  output wd_ch_fc;
  output m_axi_wvalid;
  output [37:0]\m_axi_wdata[31] ;
  input m_aclk;
  input clk_ph_out;
  input [18:0]\data_out_reg[18] ;
  input br_fifo_reset;
  input wd_ch_data_valid;
  input m_axi_wready;
  input [0:0]E;
  input rx_user_reset;

  wire [0:0]E;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire \gic0.gc0.count_reg[8] ;
  wire m_aclk;
  wire [37:0]\m_axi_wdata[31] ;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire p_0_in;
  wire [18:0]pack_data_out;
  wire rx_user_reset;
  wire wd_ch_data_valid;
  wire wd_ch_fc;

  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo__parameterized0 axi_chip2chip_async_fifo_inst
       (.Q(pack_data_out),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gic0.gc0.count_reg[8] (\gic0.gc0.count_reg[8] ),
        .m_aclk(m_aclk),
        .\m_axi_wdata[31] (\m_axi_wdata[31] ),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .p_0_in(p_0_in),
        .wd_ch_data_valid(wd_ch_data_valid),
        .wd_ch_fc(wd_ch_fc));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_packer__parameterized0 axi_chip2chip_packer_inst
       (.E(E),
        .Q(pack_data_out),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .p_0_in(p_0_in),
        .ram_full_i_reg(\gic0.gc0.count_reg[8] ),
        .rx_user_reset(rx_user_reset),
        .wd_ch_data_valid(wd_ch_data_valid));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_awr_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_awr_fifo__parameterized1
   (\gpregsm1.curr_fwft_state_reg[0] ,
    \tdm_data_out_reg[6] ,
    \tdm_data_out_reg[7] ,
    \tdm_data_out_reg[8] ,
    \tdm_data_out_reg[9] ,
    \tdm_data_out_reg[10] ,
    \tdm_data_out_reg[11] ,
    \tdm_data_out_reg[12] ,
    \tdm_data_out_reg[13] ,
    \tdm_data_out_reg[14] ,
    \tdm_data_out_reg[15] ,
    \tdm_data_out_reg[16] ,
    \tdm_data_out_reg[17] ,
    \tdm_data_out_reg[18] ,
    \tdm_data_out_reg[19] ,
    \tdm_data_out_reg[20] ,
    \tdm_data_out_reg[21] ,
    \tdm_data_out_reg[22] ,
    \tdm_data_out_reg[23] ,
    p_12_in,
    m_axi_rready,
    clk_ph_out,
    m_aclk,
    m_axi_rdata,
    DIADI,
    br_fifo_reset,
    Q,
    rd_ch_data_ready,
    tx_phy_ready,
    \ctrl_info_reg[0] ,
    m_axi_rvalid,
    rx_user_reset);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output \tdm_data_out_reg[6] ;
  output \tdm_data_out_reg[7] ;
  output \tdm_data_out_reg[8] ;
  output \tdm_data_out_reg[9] ;
  output \tdm_data_out_reg[10] ;
  output \tdm_data_out_reg[11] ;
  output \tdm_data_out_reg[12] ;
  output \tdm_data_out_reg[13] ;
  output \tdm_data_out_reg[14] ;
  output \tdm_data_out_reg[15] ;
  output \tdm_data_out_reg[16] ;
  output \tdm_data_out_reg[17] ;
  output \tdm_data_out_reg[18] ;
  output \tdm_data_out_reg[19] ;
  output \tdm_data_out_reg[20] ;
  output \tdm_data_out_reg[21] ;
  output \tdm_data_out_reg[22] ;
  output \tdm_data_out_reg[23] ;
  output p_12_in;
  output m_axi_rready;
  input clk_ph_out;
  input m_aclk;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;
  input br_fifo_reset;
  input [0:0]Q;
  input rd_ch_data_ready;
  input tx_phy_ready;
  input [0:0]\ctrl_info_reg[0] ;
  input m_axi_rvalid;
  input rx_user_reset;

  wire [3:0]DIADI;
  wire [0:0]Q;
  wire axi_chip2chip_unpacker_inst_n_0;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [0:0]\ctrl_info_reg[0] ;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire p_0_in;
  wire p_12_in;
  wire rd_ch_data_ready;
  wire rx_user_reset;
  wire \tdm_data_out_reg[10] ;
  wire \tdm_data_out_reg[11] ;
  wire \tdm_data_out_reg[12] ;
  wire \tdm_data_out_reg[13] ;
  wire \tdm_data_out_reg[14] ;
  wire \tdm_data_out_reg[15] ;
  wire \tdm_data_out_reg[16] ;
  wire \tdm_data_out_reg[17] ;
  wire \tdm_data_out_reg[18] ;
  wire \tdm_data_out_reg[19] ;
  wire \tdm_data_out_reg[20] ;
  wire \tdm_data_out_reg[21] ;
  wire \tdm_data_out_reg[22] ;
  wire \tdm_data_out_reg[23] ;
  wire \tdm_data_out_reg[6] ;
  wire \tdm_data_out_reg[7] ;
  wire \tdm_data_out_reg[8] ;
  wire \tdm_data_out_reg[9] ;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo__parameterized1 axi_chip2chip_async_fifo_inst
       (.DIADI(DIADI),
        .Q(Q),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\ctrl_info_reg[0] (\ctrl_info_reg[0] ),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .\mux_by_2.data_count_reg[0] (axi_chip2chip_unpacker_inst_n_0),
        .p_0_in(p_0_in),
        .p_12_in(p_12_in),
        .rd_ch_data_ready(rd_ch_data_ready),
        .\tdm_data_out_reg[10] (\tdm_data_out_reg[10] ),
        .\tdm_data_out_reg[11] (\tdm_data_out_reg[11] ),
        .\tdm_data_out_reg[12] (\tdm_data_out_reg[12] ),
        .\tdm_data_out_reg[13] (\tdm_data_out_reg[13] ),
        .\tdm_data_out_reg[14] (\tdm_data_out_reg[14] ),
        .\tdm_data_out_reg[15] (\tdm_data_out_reg[15] ),
        .\tdm_data_out_reg[16] (\tdm_data_out_reg[16] ),
        .\tdm_data_out_reg[17] (\tdm_data_out_reg[17] ),
        .\tdm_data_out_reg[18] (\tdm_data_out_reg[18] ),
        .\tdm_data_out_reg[19] (\tdm_data_out_reg[19] ),
        .\tdm_data_out_reg[20] (\tdm_data_out_reg[20] ),
        .\tdm_data_out_reg[21] (\tdm_data_out_reg[21] ),
        .\tdm_data_out_reg[22] (\tdm_data_out_reg[22] ),
        .\tdm_data_out_reg[23] (\tdm_data_out_reg[23] ),
        .\tdm_data_out_reg[6] (\tdm_data_out_reg[6] ),
        .\tdm_data_out_reg[7] (\tdm_data_out_reg[7] ),
        .\tdm_data_out_reg[8] (\tdm_data_out_reg[8] ),
        .\tdm_data_out_reg[9] (\tdm_data_out_reg[9] ),
        .tx_phy_ready(tx_phy_ready));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_unpacker__parameterized1 axi_chip2chip_unpacker_inst
       (.clk_ph_out(clk_ph_out),
        .empty_fwft_i_reg(\gpregsm1.curr_fwft_state_reg[0] ),
        .\mux_by_2.data_count_reg[1]_0 (axi_chip2chip_unpacker_inst_n_0),
        .p_0_in(p_0_in),
        .rd_ch_data_ready(rd_ch_data_ready),
        .rx_user_reset(rx_user_reset));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_b_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_b_fifo
   (\gpregsm1.curr_fwft_state_reg[0] ,
    int_ch1_ready5,
    m_axi_bready,
    br_ch_data,
    m_aclk,
    br_fifo_reset,
    clk_ph_out,
    br_ch_data_ready,
    tx_phy_ready,
    Q,
    m_axi_bvalid,
    bfifo_data);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output int_ch1_ready5;
  output m_axi_bready;
  output [2:0]br_ch_data;
  input m_aclk;
  input br_fifo_reset;
  input clk_ph_out;
  input br_ch_data_ready;
  input tx_phy_ready;
  input [0:0]Q;
  input m_axi_bvalid;
  input [2:0]bfifo_data;

  wire [0:0]Q;
  wire [2:0]bfifo_data;
  wire [2:0]br_ch_data;
  wire br_ch_data_ready;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire int_ch1_ready5;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo__parameterized2 axi_chip2chip_async_fifo_inst
       (.Q(Q),
        .bfifo_data(bfifo_data),
        .br_ch_data(br_ch_data),
        .br_ch_data_ready(br_ch_data_ready),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .int_ch1_ready5(int_ch1_ready5),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .tx_phy_ready(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_b_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_b_fifo__parameterized0
   (\gpr1.dout_i_reg[0] ,
    prog_full_i,
    \calib_intr_gen.tx_ch0_data_reg[19] ,
    \calib_intr_gen.tx_ch0_data_reg[18] ,
    \calib_intr_gen.tx_ch0_data_reg[17] ,
    \calib_intr_gen.tx_ch0_data_reg[16] ,
    \calib_intr_gen.tx_ch0_data_reg[15] ,
    \calib_intr_gen.tx_ch0_data_reg[14] ,
    \calib_intr_gen.tx_ch0_data_reg[13] ,
    \calib_intr_gen.tx_ch0_data_reg[12] ,
    \calib_intr_gen.tx_ch0_data_reg[11] ,
    \calib_intr_gen.tx_ch0_data_reg[10] ,
    \calib_intr_gen.tx_ch0_data_reg[9] ,
    \calib_intr_gen.tx_ch0_data_reg[8] ,
    \calib_intr_gen.tx_ch0_data_reg[7] ,
    \calib_intr_gen.tx_ch0_data_reg[6] ,
    \calib_intr_gen.tx_ch0_data_reg[5] ,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    \calib_intr_gen.tx_ch0_data_reg[3] ,
    m_axi_lite_aclk,
    fifo_reset,
    clk_ph_out,
    rx_user_reset,
    axi_lite_tx_ready,
    tx_fifo_we,
    Q);
  output \gpr1.dout_i_reg[0] ;
  output prog_full_i;
  output \calib_intr_gen.tx_ch0_data_reg[19] ;
  output \calib_intr_gen.tx_ch0_data_reg[18] ;
  output \calib_intr_gen.tx_ch0_data_reg[17] ;
  output \calib_intr_gen.tx_ch0_data_reg[16] ;
  output \calib_intr_gen.tx_ch0_data_reg[15] ;
  output \calib_intr_gen.tx_ch0_data_reg[14] ;
  output \calib_intr_gen.tx_ch0_data_reg[13] ;
  output \calib_intr_gen.tx_ch0_data_reg[12] ;
  output \calib_intr_gen.tx_ch0_data_reg[11] ;
  output \calib_intr_gen.tx_ch0_data_reg[10] ;
  output \calib_intr_gen.tx_ch0_data_reg[9] ;
  output \calib_intr_gen.tx_ch0_data_reg[8] ;
  output \calib_intr_gen.tx_ch0_data_reg[7] ;
  output \calib_intr_gen.tx_ch0_data_reg[6] ;
  output \calib_intr_gen.tx_ch0_data_reg[5] ;
  output \calib_intr_gen.tx_ch0_data_reg[4] ;
  output [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  input m_axi_lite_aclk;
  input fifo_reset;
  input clk_ph_out;
  input rx_user_reset;
  input axi_lite_tx_ready;
  input tx_fifo_we;
  input [18:0]Q;

  wire [18:0]Q;
  wire axi_lite_tx_ready;
  wire \calib_intr_gen.tx_ch0_data_reg[10] ;
  wire \calib_intr_gen.tx_ch0_data_reg[11] ;
  wire \calib_intr_gen.tx_ch0_data_reg[12] ;
  wire \calib_intr_gen.tx_ch0_data_reg[13] ;
  wire \calib_intr_gen.tx_ch0_data_reg[14] ;
  wire \calib_intr_gen.tx_ch0_data_reg[15] ;
  wire \calib_intr_gen.tx_ch0_data_reg[16] ;
  wire \calib_intr_gen.tx_ch0_data_reg[17] ;
  wire \calib_intr_gen.tx_ch0_data_reg[18] ;
  wire \calib_intr_gen.tx_ch0_data_reg[19] ;
  wire [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire \calib_intr_gen.tx_ch0_data_reg[5] ;
  wire \calib_intr_gen.tx_ch0_data_reg[6] ;
  wire \calib_intr_gen.tx_ch0_data_reg[7] ;
  wire \calib_intr_gen.tx_ch0_data_reg[8] ;
  wire \calib_intr_gen.tx_ch0_data_reg[9] ;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gpr1.dout_i_reg[0] ;
  wire m_axi_lite_aclk;
  wire prog_full_i;
  wire rx_user_reset;
  wire tx_fifo_we;

  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo__parameterized3 axi_chip2chip_async_fifo_inst
       (.Q(Q),
        .axi_lite_tx_ready(axi_lite_tx_ready),
        .\calib_intr_gen.tx_ch0_data_reg[10] (\calib_intr_gen.tx_ch0_data_reg[10] ),
        .\calib_intr_gen.tx_ch0_data_reg[11] (\calib_intr_gen.tx_ch0_data_reg[11] ),
        .\calib_intr_gen.tx_ch0_data_reg[12] (\calib_intr_gen.tx_ch0_data_reg[12] ),
        .\calib_intr_gen.tx_ch0_data_reg[13] (\calib_intr_gen.tx_ch0_data_reg[13] ),
        .\calib_intr_gen.tx_ch0_data_reg[14] (\calib_intr_gen.tx_ch0_data_reg[14] ),
        .\calib_intr_gen.tx_ch0_data_reg[15] (\calib_intr_gen.tx_ch0_data_reg[15] ),
        .\calib_intr_gen.tx_ch0_data_reg[16] (\calib_intr_gen.tx_ch0_data_reg[16] ),
        .\calib_intr_gen.tx_ch0_data_reg[17] (\calib_intr_gen.tx_ch0_data_reg[17] ),
        .\calib_intr_gen.tx_ch0_data_reg[18] (\calib_intr_gen.tx_ch0_data_reg[18] ),
        .\calib_intr_gen.tx_ch0_data_reg[19] (\calib_intr_gen.tx_ch0_data_reg[19] ),
        .\calib_intr_gen.tx_ch0_data_reg[3] (\calib_intr_gen.tx_ch0_data_reg[3] ),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\calib_intr_gen.tx_ch0_data_reg[4] ),
        .\calib_intr_gen.tx_ch0_data_reg[5] (\calib_intr_gen.tx_ch0_data_reg[5] ),
        .\calib_intr_gen.tx_ch0_data_reg[6] (\calib_intr_gen.tx_ch0_data_reg[6] ),
        .\calib_intr_gen.tx_ch0_data_reg[7] (\calib_intr_gen.tx_ch0_data_reg[7] ),
        .\calib_intr_gen.tx_ch0_data_reg[8] (\calib_intr_gen.tx_ch0_data_reg[8] ),
        .\calib_intr_gen.tx_ch0_data_reg[9] (\calib_intr_gen.tx_ch0_data_reg[9] ),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpr1.dout_i_reg[0] (\gpr1.dout_i_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .prog_full_i(prog_full_i),
        .rx_user_reset(rx_user_reset),
        .tx_fifo_we(tx_fifo_we));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_b_fifo" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_b_fifo__parameterized1
   (\gpregsm1.curr_fwft_state_reg[0] ,
    D,
    Q,
    ch0_valid_out_reg,
    ch1_valid_out_reg,
    ch2_valid_out_reg,
    m_axi_lite_aclk,
    clk_ph_out,
    fifo_reset,
    axi_lite_rx_valid,
    rx_fifo_re,
    \state_reg[5] ,
    axi_wready_rs,
    axi_arready_rs,
    axi_awready_rs,
    \axi_lite_rx_gen.axi_lite_rx_data_reg[19] );
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output [2:0]D;
  output [19:0]Q;
  output ch0_valid_out_reg;
  output ch1_valid_out_reg;
  output ch2_valid_out_reg;
  input m_axi_lite_aclk;
  input clk_ph_out;
  input fifo_reset;
  input axi_lite_rx_valid;
  input rx_fifo_re;
  input [3:0]\state_reg[5] ;
  input axi_wready_rs;
  input axi_arready_rs;
  input axi_awready_rs;
  input [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;

  wire [2:0]D;
  wire [19:0]Q;
  wire axi_arready_rs;
  wire axi_awready_rs;
  wire [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  wire axi_lite_rx_valid;
  wire axi_wready_rs;
  wire ch0_valid_out_reg;
  wire ch1_valid_out_reg;
  wire ch2_valid_out_reg;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_axi_lite_aclk;
  wire rx_fifo_re;
  wire [3:0]\state_reg[5] ;

  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_async_fifo__parameterized4 axi_chip2chip_async_fifo_inst
       (.D(D),
        .Q(Q),
        .axi_arready_rs(axi_arready_rs),
        .axi_awready_rs(axi_awready_rs),
        .\axi_lite_rx_gen.axi_lite_rx_data_reg[19] (\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .axi_wready_rs(axi_wready_rs),
        .ch0_valid_out_reg(ch0_valid_out_reg),
        .ch1_valid_out_reg(ch1_valid_out_reg),
        .ch2_valid_out_reg(ch2_valid_out_reg),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .rx_fifo_re(rx_fifo_re),
        .\state_reg[5] (\state_reg[5] ));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_ch0_ctrl" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_ch0_ctrl
   (send_ch0,
    axi_lite_rx_valid,
    \calib_intr_gen.intr_flop_reg_0 ,
    axi_lite_tx_ready,
    Q,
    \calib_intr_gen.tx_ch0_valid_reg_0 ,
    \calib_intr_gen.axi_lite_tx_ready_reg_0 ,
    D,
    AR,
    int_ch0_ready_reg,
    axi_c2c_m2s_intr_out,
    \gpr1.dout_i_reg[19] ,
    axi_c2c_s2m_intr_in,
    rx_user_reset,
    \tx_phy_ctrl_reg[0] ,
    clk_ph_out,
    \tx_phy_ctrl_reg[2] ,
    sync_reset_out_reg,
    sync_reset_out_reg_0,
    \goreg_dm.dout_i_reg[19] ,
    \goreg_dm.dout_i_reg[18] ,
    \goreg_dm.dout_i_reg[17] ,
    \goreg_dm.dout_i_reg[16] ,
    \goreg_dm.dout_i_reg[15] ,
    \goreg_dm.dout_i_reg[14] ,
    \goreg_dm.dout_i_reg[13] ,
    \goreg_dm.dout_i_reg[12] ,
    \goreg_dm.dout_i_reg[11] ,
    \goreg_dm.dout_i_reg[10] ,
    \goreg_dm.dout_i_reg[9] ,
    \goreg_dm.dout_i_reg[8] ,
    \goreg_dm.dout_i_reg[7] ,
    \goreg_dm.dout_i_reg[6] ,
    \goreg_dm.dout_i_reg[5] ,
    \goreg_dm.dout_i_reg[4] ,
    axi_lite_rx_data_valid,
    \tx_phy_ctrl_reg[2]_0 ,
    \calib_intr_gen.tx_ch0_valid_reg_1 ,
    tx_phy_ctrl,
    empty_fwft_i,
    \slot_select_reg[2] ,
    br_ch_data,
    \goreg_bm.dout_i_reg[18] ,
    \goreg_bm.dout_i_reg[19] ,
    \goreg_bm.dout_i_reg[20] ,
    \goreg_bm.dout_i_reg[21] ,
    \goreg_bm.dout_i_reg[22] ,
    \goreg_bm.dout_i_reg[23] ,
    \goreg_bm.dout_i_reg[24] ,
    \goreg_bm.dout_i_reg[25] ,
    \goreg_bm.dout_i_reg[26] ,
    \goreg_bm.dout_i_reg[27] ,
    \goreg_bm.dout_i_reg[28] ,
    \goreg_bm.dout_i_reg[29] ,
    \goreg_bm.dout_i_reg[30] ,
    \goreg_bm.dout_i_reg[31] ,
    \goreg_bm.dout_i_reg[32] ,
    \goreg_bm.dout_i_reg[33] ,
    \goreg_bm.dout_i_reg[34] ,
    \goreg_bm.dout_i_reg[35] ,
    wd_ch_fc,
    ar_ch_fc,
    aw_ch_fc,
    \goreg_dm.dout_i_reg[3] ,
    m_aresetn,
    m_aclk,
    tx_ch0_ready,
    SR,
    \data_out_reg[19] ,
    E);
  output send_ch0;
  output axi_lite_rx_valid;
  output \calib_intr_gen.intr_flop_reg_0 ;
  output axi_lite_tx_ready;
  output [1:0]Q;
  output \calib_intr_gen.tx_ch0_valid_reg_0 ;
  output \calib_intr_gen.axi_lite_tx_ready_reg_0 ;
  output [26:0]D;
  output [0:0]AR;
  output [0:0]int_ch0_ready_reg;
  output [3:0]axi_c2c_m2s_intr_out;
  output [19:0]\gpr1.dout_i_reg[19] ;
  input [3:0]axi_c2c_s2m_intr_in;
  input rx_user_reset;
  input \tx_phy_ctrl_reg[0] ;
  input clk_ph_out;
  input \tx_phy_ctrl_reg[2] ;
  input sync_reset_out_reg;
  input sync_reset_out_reg_0;
  input \goreg_dm.dout_i_reg[19] ;
  input \goreg_dm.dout_i_reg[18] ;
  input \goreg_dm.dout_i_reg[17] ;
  input \goreg_dm.dout_i_reg[16] ;
  input \goreg_dm.dout_i_reg[15] ;
  input \goreg_dm.dout_i_reg[14] ;
  input \goreg_dm.dout_i_reg[13] ;
  input \goreg_dm.dout_i_reg[12] ;
  input \goreg_dm.dout_i_reg[11] ;
  input \goreg_dm.dout_i_reg[10] ;
  input \goreg_dm.dout_i_reg[9] ;
  input \goreg_dm.dout_i_reg[8] ;
  input \goreg_dm.dout_i_reg[7] ;
  input \goreg_dm.dout_i_reg[6] ;
  input \goreg_dm.dout_i_reg[5] ;
  input \goreg_dm.dout_i_reg[4] ;
  input axi_lite_rx_data_valid;
  input \tx_phy_ctrl_reg[2]_0 ;
  input \calib_intr_gen.tx_ch0_valid_reg_1 ;
  input [1:0]tx_phy_ctrl;
  input empty_fwft_i;
  input [1:0]\slot_select_reg[2] ;
  input [2:0]br_ch_data;
  input \goreg_bm.dout_i_reg[18] ;
  input \goreg_bm.dout_i_reg[19] ;
  input \goreg_bm.dout_i_reg[20] ;
  input \goreg_bm.dout_i_reg[21] ;
  input \goreg_bm.dout_i_reg[22] ;
  input \goreg_bm.dout_i_reg[23] ;
  input \goreg_bm.dout_i_reg[24] ;
  input \goreg_bm.dout_i_reg[25] ;
  input \goreg_bm.dout_i_reg[26] ;
  input \goreg_bm.dout_i_reg[27] ;
  input \goreg_bm.dout_i_reg[28] ;
  input \goreg_bm.dout_i_reg[29] ;
  input \goreg_bm.dout_i_reg[30] ;
  input \goreg_bm.dout_i_reg[31] ;
  input \goreg_bm.dout_i_reg[32] ;
  input \goreg_bm.dout_i_reg[33] ;
  input \goreg_bm.dout_i_reg[34] ;
  input \goreg_bm.dout_i_reg[35] ;
  input wd_ch_fc;
  input ar_ch_fc;
  input aw_ch_fc;
  input [3:0]\goreg_dm.dout_i_reg[3] ;
  input m_aresetn;
  input m_aclk;
  input tx_ch0_ready;
  input [0:0]SR;
  input [19:0]\data_out_reg[19] ;
  input [0:0]E;

  wire [0:0]AR;
  wire [26:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]SR;
  wire ar_ch_fc;
  wire aw_ch_fc;
  wire [3:0]axi_c2c_m2s_intr_out;
  wire [3:0]axi_c2c_s2m_intr_in;
  wire axi_chip2chip_sync_cell_intr_in_inst_n_5;
  wire axi_chip2chip_sync_cell_intr_in_inst_n_6;
  wire axi_lite_rx_data_valid;
  wire axi_lite_rx_valid;
  wire axi_lite_tx_ready;
  wire [2:0]br_ch_data;
  wire [3:0]cal_nibble;
  wire \calib_intr_gen.axi_lite_tx_ready_reg_0 ;
  wire \calib_intr_gen.intr_flop_reg_0 ;
  wire \calib_intr_gen.tx_ch0_data[0]_i_1_n_0 ;
  wire \calib_intr_gen.tx_ch0_data[1]_i_1_n_0 ;
  wire \calib_intr_gen.tx_ch0_data[2]_i_1_n_0 ;
  wire \calib_intr_gen.tx_ch0_data[3]_i_1_n_0 ;
  wire \calib_intr_gen.tx_ch0_valid_i_1_n_0 ;
  wire \calib_intr_gen.tx_ch0_valid_reg_0 ;
  wire \calib_intr_gen.tx_ch0_valid_reg_1 ;
  wire [3:2]calib_pattern;
  wire clk_ph_out;
  wire [19:0]\data_out_reg[19] ;
  wire empty_fwft_i;
  wire \goreg_bm.dout_i_reg[18] ;
  wire \goreg_bm.dout_i_reg[19] ;
  wire \goreg_bm.dout_i_reg[20] ;
  wire \goreg_bm.dout_i_reg[21] ;
  wire \goreg_bm.dout_i_reg[22] ;
  wire \goreg_bm.dout_i_reg[23] ;
  wire \goreg_bm.dout_i_reg[24] ;
  wire \goreg_bm.dout_i_reg[25] ;
  wire \goreg_bm.dout_i_reg[26] ;
  wire \goreg_bm.dout_i_reg[27] ;
  wire \goreg_bm.dout_i_reg[28] ;
  wire \goreg_bm.dout_i_reg[29] ;
  wire \goreg_bm.dout_i_reg[30] ;
  wire \goreg_bm.dout_i_reg[31] ;
  wire \goreg_bm.dout_i_reg[32] ;
  wire \goreg_bm.dout_i_reg[33] ;
  wire \goreg_bm.dout_i_reg[34] ;
  wire \goreg_bm.dout_i_reg[35] ;
  wire \goreg_dm.dout_i_reg[10] ;
  wire \goreg_dm.dout_i_reg[11] ;
  wire \goreg_dm.dout_i_reg[12] ;
  wire \goreg_dm.dout_i_reg[13] ;
  wire \goreg_dm.dout_i_reg[14] ;
  wire \goreg_dm.dout_i_reg[15] ;
  wire \goreg_dm.dout_i_reg[16] ;
  wire \goreg_dm.dout_i_reg[17] ;
  wire \goreg_dm.dout_i_reg[18] ;
  wire \goreg_dm.dout_i_reg[19] ;
  wire [3:0]\goreg_dm.dout_i_reg[3] ;
  wire \goreg_dm.dout_i_reg[4] ;
  wire \goreg_dm.dout_i_reg[5] ;
  wire \goreg_dm.dout_i_reg[6] ;
  wire \goreg_dm.dout_i_reg[7] ;
  wire \goreg_dm.dout_i_reg[8] ;
  wire \goreg_dm.dout_i_reg[9] ;
  wire [19:0]\gpr1.dout_i_reg[19] ;
  wire [0:0]int_ch0_ready_reg;
  wire [3:0]intr_data;
  wire m_aclk;
  wire m_aresetn;
  wire rx_user_reset;
  wire send_calib;
  wire send_ch0;
  wire send_intr;
  wire [1:0]\slot_select_reg[2] ;
  wire [3:0]sync_intr_in;
  wire \sync_intr_in_d1_reg_n_0_[0] ;
  wire \sync_intr_in_d1_reg_n_0_[1] ;
  wire \sync_intr_in_d1_reg_n_0_[2] ;
  wire \sync_intr_in_d1_reg_n_0_[3] ;
  wire [3:0]sync_intr_out;
  wire sync_reset_out_reg;
  wire sync_reset_out_reg_0;
  wire tx_ch0_ready;
  wire [20:0]tx_ch0_tdm_data;
  wire [1:0]tx_phy_ctrl;
  wire \tx_phy_ctrl_reg[0] ;
  wire \tx_phy_ctrl_reg[2] ;
  wire \tx_phy_ctrl_reg[2]_0 ;
  wire wd_ch_fc;

  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_sync_cell axi_chip2chip_sync_cell_intr_in_inst
       (.D(sync_intr_in),
        .Q({\sync_intr_in_d1_reg_n_0_[3] ,\sync_intr_in_d1_reg_n_0_[2] ,\sync_intr_in_d1_reg_n_0_[1] ,\sync_intr_in_d1_reg_n_0_[0] }),
        .axi_c2c_s2m_intr_in(axi_c2c_s2m_intr_in),
        .\calib_intr_gen.axi_lite_tx_ready_reg (axi_chip2chip_sync_cell_intr_in_inst_n_6),
        .\calib_intr_gen.intr_flop_reg (axi_chip2chip_sync_cell_intr_in_inst_n_5),
        .\calib_intr_gen.intr_flop_reg_0 (\calib_intr_gen.intr_flop_reg_0 ),
        .\calib_intr_gen.tx_ch0_valid_reg (\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .\calib_intr_gen.tx_ch0_valid_reg_0 (\calib_intr_gen.axi_lite_tx_ready_reg_0 ),
        .clk_ph_out(clk_ph_out),
        .empty_fwft_i(empty_fwft_i),
        .rx_user_reset(rx_user_reset),
        .send_intr(send_intr),
        .\tx_phy_ctrl_reg[2] (\tx_phy_ctrl_reg[2]_0 ));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_sync_cell_4 axi_chip2chip_sync_cell_intr_out_inst
       (.D(sync_intr_out),
        .Q(intr_data),
        .m_aclk(m_aclk));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [0]),
        .Q(\gpr1.dout_i_reg[19] [0]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [10]),
        .Q(\gpr1.dout_i_reg[19] [10]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [11]),
        .Q(\gpr1.dout_i_reg[19] [11]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [12]),
        .Q(\gpr1.dout_i_reg[19] [12]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [13]),
        .Q(\gpr1.dout_i_reg[19] [13]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [14]),
        .Q(\gpr1.dout_i_reg[19] [14]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [15]),
        .Q(\gpr1.dout_i_reg[19] [15]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [16]),
        .Q(\gpr1.dout_i_reg[19] [16]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [17]),
        .Q(\gpr1.dout_i_reg[19] [17]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [18]),
        .Q(\gpr1.dout_i_reg[19] [18]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [19]),
        .Q(\gpr1.dout_i_reg[19] [19]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [1]),
        .Q(\gpr1.dout_i_reg[19] [1]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [2]),
        .Q(\gpr1.dout_i_reg[19] [2]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [3]),
        .Q(\gpr1.dout_i_reg[19] [3]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [4]),
        .Q(\gpr1.dout_i_reg[19] [4]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [5]),
        .Q(\gpr1.dout_i_reg[19] [5]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [6]),
        .Q(\gpr1.dout_i_reg[19] [6]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [7]),
        .Q(\gpr1.dout_i_reg[19] [7]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [8]),
        .Q(\gpr1.dout_i_reg[19] [8]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[19] [9]),
        .Q(\gpr1.dout_i_reg[19] [9]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_valid_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_lite_rx_data_valid),
        .Q(axi_lite_rx_valid),
        .R(rx_user_reset));
  FDRE \calib_intr_gen.axi_lite_tx_ready_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_chip2chip_sync_cell_intr_in_inst_n_6),
        .Q(axi_lite_tx_ready),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000FBFFFFFF0000)) 
    \calib_intr_gen.cal_nibble[0]_i_1 
       (.I0(calib_pattern[3]),
        .I1(calib_pattern[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(tx_phy_ctrl[0]),
        .I5(tx_phy_ctrl[1]),
        .O(cal_nibble[0]));
  LUT6 #(
    .INIT(64'h0F0F0F0F00600000)) 
    \calib_intr_gen.cal_nibble[1]_i_1 
       (.I0(calib_pattern[3]),
        .I1(calib_pattern[2]),
        .I2(tx_phy_ctrl[1]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(tx_phy_ctrl[0]),
        .O(cal_nibble[1]));
  LUT6 #(
    .INIT(64'hFFAAFFAAFF8AFFAA)) 
    \calib_intr_gen.cal_nibble[2]_i_1 
       (.I0(tx_phy_ctrl[1]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(tx_phy_ctrl[0]),
        .I4(calib_pattern[2]),
        .I5(calib_pattern[3]),
        .O(cal_nibble[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00004000)) 
    \calib_intr_gen.cal_nibble[3]_i_2 
       (.I0(calib_pattern[3]),
        .I1(calib_pattern[2]),
        .I2(tx_phy_ctrl[1]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(tx_phy_ctrl[0]),
        .O(cal_nibble[3]));
  FDRE \calib_intr_gen.cal_nibble_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(cal_nibble[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \calib_intr_gen.cal_nibble_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(cal_nibble[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \calib_intr_gen.cal_nibble_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(cal_nibble[2]),
        .Q(calib_pattern[2]),
        .R(SR));
  FDRE \calib_intr_gen.cal_nibble_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(cal_nibble[3]),
        .Q(calib_pattern[3]),
        .R(SR));
  FDRE \calib_intr_gen.intr_flop_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_chip2chip_sync_cell_intr_in_inst_n_5),
        .Q(\calib_intr_gen.intr_flop_reg_0 ),
        .R(1'b0));
  FDRE \calib_intr_gen.send_calib_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tx_phy_ctrl_reg[2]_0 ),
        .Q(send_calib),
        .R(rx_user_reset));
  FDRE \calib_intr_gen.send_ch0_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tx_phy_ctrl_reg[0] ),
        .Q(send_ch0),
        .R(rx_user_reset));
  FDRE \calib_intr_gen.send_intr_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_valid_reg_1 ),
        .Q(send_intr),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00EF0020)) 
    \calib_intr_gen.tx_ch0_data[0]_i_1 
       (.I0(\sync_intr_in_d1_reg_n_0_[0] ),
        .I1(\calib_intr_gen.axi_lite_tx_ready_reg_0 ),
        .I2(\calib_intr_gen.intr_flop_reg_0 ),
        .I3(rx_user_reset),
        .I4(\goreg_dm.dout_i_reg[3] [0]),
        .O(\calib_intr_gen.tx_ch0_data[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00EF0020)) 
    \calib_intr_gen.tx_ch0_data[1]_i_1 
       (.I0(\sync_intr_in_d1_reg_n_0_[1] ),
        .I1(\calib_intr_gen.axi_lite_tx_ready_reg_0 ),
        .I2(\calib_intr_gen.intr_flop_reg_0 ),
        .I3(rx_user_reset),
        .I4(\goreg_dm.dout_i_reg[3] [1]),
        .O(\calib_intr_gen.tx_ch0_data[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00EF0020)) 
    \calib_intr_gen.tx_ch0_data[2]_i_1 
       (.I0(\sync_intr_in_d1_reg_n_0_[2] ),
        .I1(\calib_intr_gen.axi_lite_tx_ready_reg_0 ),
        .I2(\calib_intr_gen.intr_flop_reg_0 ),
        .I3(rx_user_reset),
        .I4(\goreg_dm.dout_i_reg[3] [2]),
        .O(\calib_intr_gen.tx_ch0_data[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00EF0020)) 
    \calib_intr_gen.tx_ch0_data[3]_i_1 
       (.I0(\sync_intr_in_d1_reg_n_0_[3] ),
        .I1(\calib_intr_gen.axi_lite_tx_ready_reg_0 ),
        .I2(\calib_intr_gen.intr_flop_reg_0 ),
        .I3(rx_user_reset),
        .I4(\goreg_dm.dout_i_reg[3] [3]),
        .O(\calib_intr_gen.tx_ch0_data[3]_i_1_n_0 ));
  FDRE \calib_intr_gen.tx_ch0_data_reg[0] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\calib_intr_gen.tx_ch0_data[0]_i_1_n_0 ),
        .Q(tx_ch0_tdm_data[0]),
        .R(1'b0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[10] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[10] ),
        .Q(tx_ch0_tdm_data[10]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[11] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[11] ),
        .Q(tx_ch0_tdm_data[11]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[12] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[12] ),
        .Q(tx_ch0_tdm_data[12]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[13] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[13] ),
        .Q(tx_ch0_tdm_data[13]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[14] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[14] ),
        .Q(tx_ch0_tdm_data[14]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[15] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[15] ),
        .Q(tx_ch0_tdm_data[15]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[16] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[16] ),
        .Q(tx_ch0_tdm_data[16]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[17] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[17] ),
        .Q(tx_ch0_tdm_data[17]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[18] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[18] ),
        .Q(tx_ch0_tdm_data[18]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[19] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[19] ),
        .Q(tx_ch0_tdm_data[19]),
        .S(sync_reset_out_reg_0));
  FDRE \calib_intr_gen.tx_ch0_data_reg[1] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\calib_intr_gen.tx_ch0_data[1]_i_1_n_0 ),
        .Q(tx_ch0_tdm_data[1]),
        .R(1'b0));
  FDRE \calib_intr_gen.tx_ch0_data_reg[20] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(sync_reset_out_reg),
        .Q(tx_ch0_tdm_data[20]),
        .R(1'b0));
  FDRE \calib_intr_gen.tx_ch0_data_reg[2] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\calib_intr_gen.tx_ch0_data[2]_i_1_n_0 ),
        .Q(tx_ch0_tdm_data[2]),
        .R(1'b0));
  FDRE \calib_intr_gen.tx_ch0_data_reg[3] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\calib_intr_gen.tx_ch0_data[3]_i_1_n_0 ),
        .Q(tx_ch0_tdm_data[3]),
        .R(1'b0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[4] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[4] ),
        .Q(tx_ch0_tdm_data[4]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[5] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[5] ),
        .Q(tx_ch0_tdm_data[5]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[6] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[6] ),
        .Q(tx_ch0_tdm_data[6]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[7] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[7] ),
        .Q(tx_ch0_tdm_data[7]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[8] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[8] ),
        .Q(tx_ch0_tdm_data[8]),
        .S(sync_reset_out_reg_0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[9] 
       (.C(clk_ph_out),
        .CE(\tx_phy_ctrl_reg[2] ),
        .D(\goreg_dm.dout_i_reg[9] ),
        .Q(tx_ch0_tdm_data[9]),
        .S(sync_reset_out_reg_0));
  LUT5 #(
    .INIT(32'h000000AE)) 
    \calib_intr_gen.tx_ch0_valid_i_1 
       (.I0(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .I1(\calib_intr_gen.axi_lite_tx_ready_reg_0 ),
        .I2(tx_ch0_ready),
        .I3(\tx_phy_ctrl_reg[2]_0 ),
        .I4(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_valid_i_1_n_0 ));
  FDRE \calib_intr_gen.tx_ch0_valid_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_valid_i_1_n_0 ),
        .Q(\calib_intr_gen.axi_lite_tx_ready_reg_0 ),
        .R(1'b0));
  FDRE \intr_data_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[19] [0]),
        .Q(intr_data[0]),
        .R(rx_user_reset));
  FDRE \intr_data_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[19] [1]),
        .Q(intr_data[1]),
        .R(rx_user_reset));
  FDRE \intr_data_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[19] [2]),
        .Q(intr_data[2]),
        .R(rx_user_reset));
  FDRE \intr_data_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[19] [3]),
        .Q(intr_data[3]),
        .R(rx_user_reset));
  LUT1 #(
    .INIT(2'h1)) 
    \intr_out[3]_i_1 
       (.I0(m_aresetn),
        .O(AR));
  FDCE \intr_out_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync_intr_out[0]),
        .Q(axi_c2c_m2s_intr_out[0]));
  FDCE \intr_out_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync_intr_out[1]),
        .Q(axi_c2c_m2s_intr_out[1]));
  FDCE \intr_out_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync_intr_out[2]),
        .Q(axi_c2c_m2s_intr_out[2]));
  FDCE \intr_out_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync_intr_out[3]),
        .Q(axi_c2c_m2s_intr_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \slot_select[0]_i_1 
       (.I0(send_ch0),
        .I1(send_calib),
        .O(int_ch0_ready_reg));
  FDRE \sync_intr_in_d1_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_intr_in[0]),
        .Q(\sync_intr_in_d1_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \sync_intr_in_d1_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_intr_in[1]),
        .Q(\sync_intr_in_d1_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \sync_intr_in_d1_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_intr_in[2]),
        .Q(\sync_intr_in_d1_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \sync_intr_in_d1_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_intr_in[3]),
        .Q(\sync_intr_in_d1_reg_n_0_[3] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[10]_i_1 
       (.I0(calib_pattern[2]),
        .I1(tx_ch0_tdm_data[4]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[22] ),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[11]_i_1 
       (.I0(calib_pattern[3]),
        .I1(tx_ch0_tdm_data[5]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[23] ),
        .O(D[8]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[12]_i_1 
       (.I0(Q[0]),
        .I1(tx_ch0_tdm_data[6]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[24] ),
        .O(D[9]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[13]_i_1 
       (.I0(Q[1]),
        .I1(tx_ch0_tdm_data[7]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[25] ),
        .O(D[10]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[14]_i_1 
       (.I0(calib_pattern[2]),
        .I1(tx_ch0_tdm_data[8]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[26] ),
        .O(D[11]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[15]_i_1 
       (.I0(calib_pattern[3]),
        .I1(tx_ch0_tdm_data[9]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[27] ),
        .O(D[12]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[16]_i_1 
       (.I0(Q[0]),
        .I1(tx_ch0_tdm_data[10]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[28] ),
        .O(D[13]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[17]_i_1 
       (.I0(Q[1]),
        .I1(tx_ch0_tdm_data[11]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[29] ),
        .O(D[14]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[18]_i_1 
       (.I0(calib_pattern[2]),
        .I1(tx_ch0_tdm_data[12]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[30] ),
        .O(D[15]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[19]_i_1 
       (.I0(calib_pattern[3]),
        .I1(tx_ch0_tdm_data[13]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[31] ),
        .O(D[16]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[20]_i_1 
       (.I0(Q[0]),
        .I1(tx_ch0_tdm_data[14]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[32] ),
        .O(D[17]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[21]_i_1 
       (.I0(Q[1]),
        .I1(tx_ch0_tdm_data[15]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[33] ),
        .O(D[18]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[22]_i_1 
       (.I0(calib_pattern[2]),
        .I1(tx_ch0_tdm_data[16]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[34] ),
        .O(D[19]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[23]_i_1 
       (.I0(calib_pattern[3]),
        .I1(tx_ch0_tdm_data[17]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[35] ),
        .O(D[20]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \tdm_data_out[24]_i_1 
       (.I0(tx_ch0_tdm_data[18]),
        .I1(\slot_select_reg[2] [0]),
        .I2(Q[0]),
        .O(D[21]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \tdm_data_out[25]_i_1 
       (.I0(tx_ch0_tdm_data[19]),
        .I1(\slot_select_reg[2] [0]),
        .I2(Q[1]),
        .O(D[22]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \tdm_data_out[26]_i_1 
       (.I0(tx_ch0_tdm_data[20]),
        .I1(\slot_select_reg[2] [0]),
        .I2(calib_pattern[2]),
        .O(D[23]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \tdm_data_out[27]_i_1 
       (.I0(tx_ch0_tdm_data[20]),
        .I1(\slot_select_reg[2] [0]),
        .I2(calib_pattern[3]),
        .O(D[24]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \tdm_data_out[28]_i_1 
       (.I0(tx_ch0_tdm_data[20]),
        .I1(\slot_select_reg[2] [0]),
        .I2(Q[0]),
        .O(D[25]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \tdm_data_out[29]_i_1 
       (.I0(tx_ch0_tdm_data[20]),
        .I1(\slot_select_reg[2] [0]),
        .I2(Q[1]),
        .O(D[26]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \tdm_data_out[2]_i_1 
       (.I0(send_calib),
        .I1(aw_ch_fc),
        .I2(calib_pattern[2]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \tdm_data_out[3]_i_1 
       (.I0(send_calib),
        .I1(ar_ch_fc),
        .I2(calib_pattern[3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \tdm_data_out[4]_i_1 
       (.I0(send_calib),
        .I1(wd_ch_fc),
        .I2(Q[0]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tdm_data_out[6]_i_1 
       (.I0(calib_pattern[2]),
        .I1(\slot_select_reg[2] [0]),
        .I2(tx_ch0_tdm_data[0]),
        .I3(\slot_select_reg[2] [1]),
        .I4(br_ch_data[0]),
        .I5(\goreg_bm.dout_i_reg[18] ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tdm_data_out[7]_i_1 
       (.I0(calib_pattern[3]),
        .I1(\slot_select_reg[2] [0]),
        .I2(tx_ch0_tdm_data[1]),
        .I3(\slot_select_reg[2] [1]),
        .I4(br_ch_data[1]),
        .I5(\goreg_bm.dout_i_reg[19] ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tdm_data_out[8]_i_1 
       (.I0(Q[0]),
        .I1(\slot_select_reg[2] [0]),
        .I2(tx_ch0_tdm_data[2]),
        .I3(br_ch_data[2]),
        .I4(\slot_select_reg[2] [1]),
        .I5(\goreg_bm.dout_i_reg[20] ),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \tdm_data_out[9]_i_1 
       (.I0(Q[1]),
        .I1(tx_ch0_tdm_data[3]),
        .I2(\slot_select_reg[2] [0]),
        .I3(\goreg_bm.dout_i_reg[21] ),
        .O(D[6]));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_clk_gen" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_clk_gen
   (\sync_reset_flop_reg[6] ,
    clk_ph_out,
    m_aresetn,
    axi_c2c_selio_rx_clk_in,
    reset);
  output \sync_reset_flop_reg[6] ;
  output clk_ph_out;
  input m_aresetn;
  input axi_c2c_selio_rx_clk_in;
  input reset;

  wire axi_c2c_selio_rx_clk_in;
  wire clk_in_ibufg;
  wire clk_locked;
  wire clk_out;
  wire clk_ph_out;
  wire clkfbout;
  wire clkfbout_bufg;
  wire m_aresetn;
  wire reset;
  wire \sync_reset_flop_reg[6] ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKFBOUTB_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT0B_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT1_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT1B_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT2_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT2B_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT3_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT3B_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT4_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT5_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT6_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_DRDY_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_PSDONE_UNCONNECTED ;
  wire [15:0]\NLW_gen_mmcme2.mmcm_adv_inst_DO_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  BUFG bufg_inst
       (.I(clk_out),
        .O(clk_ph_out));
  (* box_type = "PRIMITIVE" *) 
  BUFG fb_bufg_inst
       (.I(clkfbout),
        .O(clkfbout_bufg));
  (* box_type = "PRIMITIVE" *) 
  MMCME2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT_F(5.000000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(5.000000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(5.000000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(90.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(1),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(1),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(0.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(1),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(1),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("ZHOLD"),
    .DIVCLK_DIVIDE(1),
    .IS_CLKINSEL_INVERTED(1'b0),
    .IS_PSEN_INVERTED(1'b0),
    .IS_PSINCDEC_INVERTED(1'b0),
    .IS_PWRDWN_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .SS_EN("FALSE"),
    .SS_MODE("CENTER_HIGH"),
    .SS_MOD_PERIOD(10000),
    .STARTUP_WAIT("FALSE")) 
    \gen_mmcme2.mmcm_adv_inst 
       (.CLKFBIN(clkfbout_bufg),
        .CLKFBOUT(clkfbout),
        .CLKFBOUTB(\NLW_gen_mmcme2.mmcm_adv_inst_CLKFBOUTB_UNCONNECTED ),
        .CLKFBSTOPPED(\NLW_gen_mmcme2.mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED ),
        .CLKIN1(clk_in_ibufg),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(\NLW_gen_mmcme2.mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED ),
        .CLKOUT0(clk_out),
        .CLKOUT0B(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT0B_UNCONNECTED ),
        .CLKOUT1(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT1_UNCONNECTED ),
        .CLKOUT1B(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT1B_UNCONNECTED ),
        .CLKOUT2(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT2_UNCONNECTED ),
        .CLKOUT2B(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT2B_UNCONNECTED ),
        .CLKOUT3(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT3_UNCONNECTED ),
        .CLKOUT3B(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT3B_UNCONNECTED ),
        .CLKOUT4(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT4_UNCONNECTED ),
        .CLKOUT5(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT5_UNCONNECTED ),
        .CLKOUT6(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT6_UNCONNECTED ),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(\NLW_gen_mmcme2.mmcm_adv_inst_DO_UNCONNECTED [15:0]),
        .DRDY(\NLW_gen_mmcme2.mmcm_adv_inst_DRDY_UNCONNECTED ),
        .DWE(1'b0),
        .LOCKED(clk_locked),
        .PSCLK(1'b0),
        .PSDONE(\NLW_gen_mmcme2.mmcm_adv_inst_PSDONE_UNCONNECTED ),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(reset));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* XILINX_LEGACY_PRIM = "IBUFG" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_clk_gen.ibufg_clk_inst 
       (.I(axi_c2c_selio_rx_clk_in),
        .O(clk_in_ibufg));
  LUT2 #(
    .INIT(4'h7)) 
    \sync_reset_flop[7]_i_1 
       (.I0(m_aresetn),
        .I1(clk_locked),
        .O(\sync_reset_flop_reg[6] ));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_decoder" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_decoder
   (aw_ch_data_valid,
    ar_ch_data_valid,
    wd_ch_data_valid,
    E,
    \mux_by_2.pack_reg0_reg[0] ,
    \mux_by_2.pack_reg0_reg[0]_0 ,
    \mux_by_2.pack_reg0_reg[22] ,
    int_ch1_ready_reg,
    axi_lite_rx_data_valid,
    \intr_data_reg[3] ,
    rx_user_reset,
    clk_ph_out,
    ram_full_i,
    ram_full_i_reg,
    ram_full_i_reg_0,
    Q,
    rx_user_data_valid_flop,
    rx_phy_ready);
  output aw_ch_data_valid;
  output ar_ch_data_valid;
  output wd_ch_data_valid;
  output [0:0]E;
  output [0:0]\mux_by_2.pack_reg0_reg[0] ;
  output [0:0]\mux_by_2.pack_reg0_reg[0]_0 ;
  output [22:0]\mux_by_2.pack_reg0_reg[22] ;
  output [1:0]int_ch1_ready_reg;
  output axi_lite_rx_data_valid;
  output [0:0]\intr_data_reg[3] ;
  input rx_user_reset;
  input clk_ph_out;
  input ram_full_i;
  input ram_full_i_reg;
  input ram_full_i_reg_0;
  input [29:0]Q;
  input rx_user_data_valid_flop;
  input rx_phy_ready;

  wire [0:0]E;
  wire [29:0]Q;
  wire ar_ch_data_valid;
  wire aw_ch_data_valid;
  wire axi_lite_rx_data_valid;
  wire \axi_lite_rx_gen.axi_lite_rx_valid_i_2_n_0 ;
  wire \axi_lite_rx_gen.axi_lite_rx_valid_i_3_n_0 ;
  wire \axi_lite_rx_gen.axi_lite_rx_valid_i_4_n_0 ;
  wire \axi_lite_rx_gen.axi_lite_rx_valid_i_5_n_0 ;
  wire ch0_valid0;
  wire ch1_valid0;
  wire ch2_valid0;
  wire ch3_valid0;
  wire clk_ph_out;
  wire [1:0]int_ch1_ready_reg;
  wire \intr_data[3]_i_2_n_0 ;
  wire \intr_data[3]_i_3_n_0 ;
  wire \intr_data[3]_i_4_n_0 ;
  wire [0:0]\intr_data_reg[3] ;
  wire [0:0]\mux_by_2.pack_reg0_reg[0] ;
  wire [0:0]\mux_by_2.pack_reg0_reg[0]_0 ;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire ram_full_i;
  wire ram_full_i_reg;
  wire ram_full_i_reg_0;
  wire rx_ch0_valid;
  wire [24:23]rx_dec_data;
  wire rx_phy_ready;
  wire rx_user_data_valid_flop;
  wire rx_user_reset;
  wire wd_ch_data_valid;

  LUT6 #(
    .INIT(64'h00FEFFFE00000000)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_1 
       (.I0(rx_dec_data[24]),
        .I1(\axi_lite_rx_gen.axi_lite_rx_valid_i_2_n_0 ),
        .I2(rx_dec_data[23]),
        .I3(\mux_by_2.pack_reg0_reg[22] [19]),
        .I4(\mux_by_2.pack_reg0_reg[22] [18]),
        .I5(rx_ch0_valid),
        .O(axi_lite_rx_data_valid));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_2 
       (.I0(\mux_by_2.pack_reg0_reg[22] [21]),
        .I1(\mux_by_2.pack_reg0_reg[22] [18]),
        .I2(\axi_lite_rx_gen.axi_lite_rx_valid_i_3_n_0 ),
        .I3(\mux_by_2.pack_reg0_reg[22] [17]),
        .I4(\mux_by_2.pack_reg0_reg[22] [20]),
        .I5(\mux_by_2.pack_reg0_reg[22] [22]),
        .O(\axi_lite_rx_gen.axi_lite_rx_valid_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_3 
       (.I0(\mux_by_2.pack_reg0_reg[22] [15]),
        .I1(\mux_by_2.pack_reg0_reg[22] [13]),
        .I2(\axi_lite_rx_gen.axi_lite_rx_valid_i_4_n_0 ),
        .I3(\mux_by_2.pack_reg0_reg[22] [12]),
        .I4(\mux_by_2.pack_reg0_reg[22] [14]),
        .I5(\mux_by_2.pack_reg0_reg[22] [16]),
        .O(\axi_lite_rx_gen.axi_lite_rx_valid_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_4 
       (.I0(\mux_by_2.pack_reg0_reg[22] [10]),
        .I1(\mux_by_2.pack_reg0_reg[22] [8]),
        .I2(\axi_lite_rx_gen.axi_lite_rx_valid_i_5_n_0 ),
        .I3(\mux_by_2.pack_reg0_reg[22] [7]),
        .I4(\mux_by_2.pack_reg0_reg[22] [9]),
        .I5(\mux_by_2.pack_reg0_reg[22] [11]),
        .O(\axi_lite_rx_gen.axi_lite_rx_valid_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_5 
       (.I0(\mux_by_2.pack_reg0_reg[22] [6]),
        .I1(\mux_by_2.pack_reg0_reg[22] [4]),
        .I2(\mux_by_2.pack_reg0_reg[22] [2]),
        .I3(\mux_by_2.pack_reg0_reg[22] [1]),
        .I4(\mux_by_2.pack_reg0_reg[22] [3]),
        .I5(\mux_by_2.pack_reg0_reg[22] [5]),
        .O(\axi_lite_rx_gen.axi_lite_rx_valid_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    ch0_valid_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rx_user_data_valid_flop),
        .I3(rx_phy_ready),
        .I4(Q[4]),
        .O(ch0_valid0));
  FDRE ch0_valid_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ch0_valid0),
        .Q(rx_ch0_valid),
        .R(rx_user_reset));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'h20000000)) 
    ch1_valid_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rx_user_data_valid_flop),
        .I3(rx_phy_ready),
        .I4(Q[4]),
        .O(ch1_valid0));
  FDRE ch1_valid_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ch1_valid0),
        .Q(aw_ch_data_valid),
        .R(rx_user_reset));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'h20000000)) 
    ch2_valid_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rx_user_data_valid_flop),
        .I3(rx_phy_ready),
        .I4(Q[4]),
        .O(ch2_valid0));
  FDRE ch2_valid_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ch2_valid0),
        .Q(ar_ch_data_valid),
        .R(rx_user_reset));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    ch3_valid_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rx_user_data_valid_flop),
        .I3(rx_phy_ready),
        .I4(Q[4]),
        .O(ch3_valid0));
  FDRE ch3_valid_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ch3_valid0),
        .Q(wd_ch_data_valid),
        .R(rx_user_reset));
  FDRE \ctrl_info_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[2]),
        .Q(int_ch1_ready_reg[0]),
        .R(rx_user_reset));
  FDRE \ctrl_info_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[3]),
        .Q(int_ch1_ready_reg[1]),
        .R(rx_user_reset));
  FDRE \data_out_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[5]),
        .Q(\mux_by_2.pack_reg0_reg[22] [0]),
        .R(rx_user_reset));
  FDRE \data_out_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[15]),
        .Q(\mux_by_2.pack_reg0_reg[22] [10]),
        .R(rx_user_reset));
  FDRE \data_out_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[16]),
        .Q(\mux_by_2.pack_reg0_reg[22] [11]),
        .R(rx_user_reset));
  FDRE \data_out_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[17]),
        .Q(\mux_by_2.pack_reg0_reg[22] [12]),
        .R(rx_user_reset));
  FDRE \data_out_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[18]),
        .Q(\mux_by_2.pack_reg0_reg[22] [13]),
        .R(rx_user_reset));
  FDRE \data_out_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[19]),
        .Q(\mux_by_2.pack_reg0_reg[22] [14]),
        .R(rx_user_reset));
  FDRE \data_out_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[20]),
        .Q(\mux_by_2.pack_reg0_reg[22] [15]),
        .R(rx_user_reset));
  FDRE \data_out_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[21]),
        .Q(\mux_by_2.pack_reg0_reg[22] [16]),
        .R(rx_user_reset));
  FDRE \data_out_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[22]),
        .Q(\mux_by_2.pack_reg0_reg[22] [17]),
        .R(rx_user_reset));
  FDRE \data_out_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[23]),
        .Q(\mux_by_2.pack_reg0_reg[22] [18]),
        .R(rx_user_reset));
  FDRE \data_out_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[24]),
        .Q(\mux_by_2.pack_reg0_reg[22] [19]),
        .R(rx_user_reset));
  FDRE \data_out_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[6]),
        .Q(\mux_by_2.pack_reg0_reg[22] [1]),
        .R(rx_user_reset));
  FDRE \data_out_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[25]),
        .Q(\mux_by_2.pack_reg0_reg[22] [20]),
        .R(rx_user_reset));
  FDRE \data_out_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[26]),
        .Q(\mux_by_2.pack_reg0_reg[22] [21]),
        .R(rx_user_reset));
  FDRE \data_out_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[27]),
        .Q(\mux_by_2.pack_reg0_reg[22] [22]),
        .R(rx_user_reset));
  FDRE \data_out_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[28]),
        .Q(rx_dec_data[23]),
        .R(rx_user_reset));
  FDRE \data_out_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[29]),
        .Q(rx_dec_data[24]),
        .R(rx_user_reset));
  FDRE \data_out_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[7]),
        .Q(\mux_by_2.pack_reg0_reg[22] [2]),
        .R(rx_user_reset));
  FDRE \data_out_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[8]),
        .Q(\mux_by_2.pack_reg0_reg[22] [3]),
        .R(rx_user_reset));
  FDRE \data_out_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[9]),
        .Q(\mux_by_2.pack_reg0_reg[22] [4]),
        .R(rx_user_reset));
  FDRE \data_out_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[10]),
        .Q(\mux_by_2.pack_reg0_reg[22] [5]),
        .R(rx_user_reset));
  FDRE \data_out_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[11]),
        .Q(\mux_by_2.pack_reg0_reg[22] [6]),
        .R(rx_user_reset));
  FDRE \data_out_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[12]),
        .Q(\mux_by_2.pack_reg0_reg[22] [7]),
        .R(rx_user_reset));
  FDRE \data_out_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[13]),
        .Q(\mux_by_2.pack_reg0_reg[22] [8]),
        .R(rx_user_reset));
  FDRE \data_out_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[14]),
        .Q(\mux_by_2.pack_reg0_reg[22] [9]),
        .R(rx_user_reset));
  LUT4 #(
    .INIT(16'h8000)) 
    \intr_data[3]_i_1 
       (.I0(\mux_by_2.pack_reg0_reg[22] [19]),
        .I1(\intr_data[3]_i_2_n_0 ),
        .I2(rx_dec_data[24]),
        .I3(rx_ch0_valid),
        .O(\intr_data_reg[3] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \intr_data[3]_i_2 
       (.I0(\mux_by_2.pack_reg0_reg[22] [22]),
        .I1(\mux_by_2.pack_reg0_reg[22] [20]),
        .I2(\intr_data[3]_i_3_n_0 ),
        .I3(\mux_by_2.pack_reg0_reg[22] [18]),
        .I4(\mux_by_2.pack_reg0_reg[22] [21]),
        .I5(rx_dec_data[23]),
        .O(\intr_data[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \intr_data[3]_i_3 
       (.I0(\mux_by_2.pack_reg0_reg[22] [16]),
        .I1(\mux_by_2.pack_reg0_reg[22] [14]),
        .I2(\intr_data[3]_i_4_n_0 ),
        .I3(\mux_by_2.pack_reg0_reg[22] [13]),
        .I4(\mux_by_2.pack_reg0_reg[22] [15]),
        .I5(\mux_by_2.pack_reg0_reg[22] [17]),
        .O(\intr_data[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \intr_data[3]_i_4 
       (.I0(\mux_by_2.pack_reg0_reg[22] [11]),
        .I1(\mux_by_2.pack_reg0_reg[22] [9]),
        .I2(\mux_by_2.pack_reg0_reg[22] [7]),
        .I3(\mux_by_2.pack_reg0_reg[22] [8]),
        .I4(\mux_by_2.pack_reg0_reg[22] [10]),
        .I5(\mux_by_2.pack_reg0_reg[22] [12]),
        .O(\intr_data[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mux_by_2.pack_reg0[18]_i_1 
       (.I0(wd_ch_data_valid),
        .I1(ram_full_i_reg_0),
        .O(\mux_by_2.pack_reg0_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mux_by_2.pack_reg0[22]_i_1 
       (.I0(aw_ch_data_valid),
        .I1(ram_full_i),
        .O(E));
  LUT2 #(
    .INIT(4'h2)) 
    \mux_by_2.pack_reg0[22]_i_1__0 
       (.I0(ar_ch_data_valid),
        .I1(ram_full_i_reg),
        .O(\mux_by_2.pack_reg0_reg[0] ));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_lite_decoder" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_lite_decoder
   (axi_awvalid_rs,
    axi_arvalid_rs,
    axi_wvalid_rs,
    rx_fifo_re,
    Q,
    E,
    \storage_data2_reg[33] ,
    \storage_data2_reg[35] ,
    \storage_data2_reg[35]_0 ,
    sync_reset_out,
    m_axi_lite_aclk,
    empty_fwft_i_reg,
    axi_awready_rs,
    axi_arready_rs,
    axi_wready_rs,
    D,
    \goreg_dm.dout_i_reg[19] ,
    \goreg_dm.dout_i_reg[19]_0 ,
    empty_fwft_i_reg_0,
    empty_fwft_i_reg_1);
  output axi_awvalid_rs;
  output axi_arvalid_rs;
  output axi_wvalid_rs;
  output rx_fifo_re;
  output [3:0]Q;
  output [0:0]E;
  output [0:0]\storage_data2_reg[33] ;
  output [0:0]\storage_data2_reg[35] ;
  output [35:0]\storage_data2_reg[35]_0 ;
  input sync_reset_out;
  input m_axi_lite_aclk;
  input empty_fwft_i_reg;
  input axi_awready_rs;
  input axi_arready_rs;
  input axi_wready_rs;
  input [2:0]D;
  input [19:0]\goreg_dm.dout_i_reg[19] ;
  input \goreg_dm.dout_i_reg[19]_0 ;
  input empty_fwft_i_reg_0;
  input empty_fwft_i_reg_1;

  wire [2:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire axi_arready_rs;
  wire axi_arvalid_rs;
  wire axi_awready_rs;
  wire axi_awvalid_rs;
  wire axi_wready_rs;
  wire axi_wvalid_rs;
  wire empty_fwft_i_reg;
  wire empty_fwft_i_reg_0;
  wire empty_fwft_i_reg_1;
  wire [19:0]\goreg_dm.dout_i_reg[19] ;
  wire \goreg_dm.dout_i_reg[19]_0 ;
  wire m_axi_lite_aclk;
  wire next_ch0_valid_out;
  wire next_ch1_valid_out;
  wire [18:0]next_ch2_data_out;
  wire next_ch2_valid_out;
  wire next_rx_fifo_re;
  wire [2:0]next_state;
  wire rx_fifo_re;
  wire rx_fifo_re_i_2_n_0;
  wire [1:0]state;
  wire \state[0]_i_2__2_n_0 ;
  wire \state[1]_i_1__4_n_0 ;
  wire \state[5]_i_1__0_n_0 ;
  wire [0:0]\storage_data2_reg[33] ;
  wire [0:0]\storage_data2_reg[35] ;
  wire [35:0]\storage_data2_reg[35]_0 ;
  wire sync_reset_out;

  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \ch0_data_out[17]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(Q[0]),
        .O(next_ch2_data_out[0]));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \ch0_data_out[35]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(state[0]),
        .I5(state[1]),
        .O(next_ch2_data_out[18]));
  FDRE \ch0_data_out_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [0]),
        .Q(\storage_data2_reg[35]_0 [0]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[10] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [10]),
        .Q(\storage_data2_reg[35]_0 [10]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[11] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [11]),
        .Q(\storage_data2_reg[35]_0 [11]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[12] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [12]),
        .Q(\storage_data2_reg[35]_0 [12]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[13] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [13]),
        .Q(\storage_data2_reg[35]_0 [13]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[14] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [14]),
        .Q(\storage_data2_reg[35]_0 [14]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[15] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [15]),
        .Q(\storage_data2_reg[35]_0 [15]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[16] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [16]),
        .Q(\storage_data2_reg[35]_0 [16]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[17] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [17]),
        .Q(\storage_data2_reg[35]_0 [17]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[18] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [0]),
        .Q(\storage_data2_reg[35]_0 [18]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[19] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [1]),
        .Q(\storage_data2_reg[35]_0 [19]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [1]),
        .Q(\storage_data2_reg[35]_0 [1]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[20] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [2]),
        .Q(\storage_data2_reg[35]_0 [20]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[21] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [3]),
        .Q(\storage_data2_reg[35]_0 [21]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[22] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [4]),
        .Q(\storage_data2_reg[35]_0 [22]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[23] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [5]),
        .Q(\storage_data2_reg[35]_0 [23]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[24] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [6]),
        .Q(\storage_data2_reg[35]_0 [24]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[25] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [7]),
        .Q(\storage_data2_reg[35]_0 [25]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[26] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [8]),
        .Q(\storage_data2_reg[35]_0 [26]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[27] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [9]),
        .Q(\storage_data2_reg[35]_0 [27]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[28] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [10]),
        .Q(\storage_data2_reg[35]_0 [28]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[29] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [11]),
        .Q(\storage_data2_reg[35]_0 [29]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [2]),
        .Q(\storage_data2_reg[35]_0 [2]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[30] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [12]),
        .Q(\storage_data2_reg[35]_0 [30]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[31] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [13]),
        .Q(\storage_data2_reg[35]_0 [31]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[32] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [14]),
        .Q(\storage_data2_reg[35]_0 [32]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[33] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [15]),
        .Q(\storage_data2_reg[35]_0 [33]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[34] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [16]),
        .Q(\storage_data2_reg[35]_0 [34]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[35] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[18]),
        .D(\goreg_dm.dout_i_reg[19] [17]),
        .Q(\storage_data2_reg[35]_0 [35]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [3]),
        .Q(\storage_data2_reg[35]_0 [3]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [4]),
        .Q(\storage_data2_reg[35]_0 [4]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [5]),
        .Q(\storage_data2_reg[35]_0 [5]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[6] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [6]),
        .Q(\storage_data2_reg[35]_0 [6]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[7] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [7]),
        .Q(\storage_data2_reg[35]_0 [7]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[8] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [8]),
        .Q(\storage_data2_reg[35]_0 [8]),
        .R(sync_reset_out));
  FDRE \ch0_data_out_reg[9] 
       (.C(m_axi_lite_aclk),
        .CE(next_ch2_data_out[0]),
        .D(\goreg_dm.dout_i_reg[19] [9]),
        .Q(\storage_data2_reg[35]_0 [9]),
        .R(sync_reset_out));
  LUT5 #(
    .INIT(32'h00010000)) 
    ch0_valid_out_i_1
       (.I0(state[1]),
        .I1(state[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\goreg_dm.dout_i_reg[19]_0 ),
        .O(next_ch0_valid_out));
  FDRE ch0_valid_out_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(next_ch0_valid_out),
        .Q(axi_awvalid_rs),
        .R(sync_reset_out));
  LUT5 #(
    .INIT(32'h00010000)) 
    ch1_valid_out_i_1
       (.I0(state[1]),
        .I1(state[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(empty_fwft_i_reg_0),
        .O(next_ch1_valid_out));
  FDRE ch1_valid_out_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(next_ch1_valid_out),
        .Q(axi_arvalid_rs),
        .R(sync_reset_out));
  LUT5 #(
    .INIT(32'h00010000)) 
    ch2_valid_out_i_1
       (.I0(state[1]),
        .I1(state[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(empty_fwft_i_reg_1),
        .O(next_ch2_valid_out));
  FDRE ch2_valid_out_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(next_ch2_valid_out),
        .Q(axi_wvalid_rs),
        .R(sync_reset_out));
  LUT3 #(
    .INIT(8'h01)) 
    rx_fifo_re_i_1
       (.I0(empty_fwft_i_reg),
        .I1(Q[3]),
        .I2(rx_fifo_re_i_2_n_0),
        .O(next_rx_fifo_re));
  LUT5 #(
    .INIT(32'hFFFFFEEF)) 
    rx_fifo_re_i_2
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(state[0]),
        .I3(Q[0]),
        .I4(state[1]),
        .O(rx_fifo_re_i_2_n_0));
  FDRE rx_fifo_re_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(next_rx_fifo_re),
        .Q(rx_fifo_re),
        .R(sync_reset_out));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF800080)) 
    \state[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\goreg_dm.dout_i_reg[19] [18]),
        .I2(\goreg_dm.dout_i_reg[19] [19]),
        .I3(empty_fwft_i_reg),
        .I4(state[0]),
        .I5(\state[0]_i_2__2_n_0 ),
        .O(next_state[0]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \state[0]_i_2__2 
       (.I0(axi_awready_rs),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(axi_wready_rs),
        .I4(Q[2]),
        .I5(axi_arready_rs),
        .O(\state[0]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \state[1]_i_1__4 
       (.I0(state[0]),
        .I1(empty_fwft_i_reg),
        .O(\state[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \state[2]_i_1__0 
       (.I0(state[1]),
        .I1(empty_fwft_i_reg),
        .I2(Q[0]),
        .O(next_state[2]));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    \state[5]_i_1__0 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\state[5]_i_1__0_n_0 ));
  FDSE \state_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(next_state[0]),
        .Q(state[0]),
        .S(sync_reset_out));
  FDRE \state_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(\state[1]_i_1__4_n_0 ),
        .Q(state[1]),
        .R(sync_reset_out));
  FDRE \state_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(next_state[2]),
        .Q(Q[0]),
        .R(sync_reset_out));
  FDRE \state_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(D[0]),
        .Q(Q[1]),
        .R(sync_reset_out));
  FDRE \state_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(D[1]),
        .Q(Q[2]),
        .R(sync_reset_out));
  FDRE \state_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(D[2]),
        .Q(Q[3]),
        .R(sync_reset_out));
  LUT2 #(
    .INIT(4'h8)) 
    \storage_data2[33]_i_1 
       (.I0(axi_awvalid_rs),
        .I1(axi_awready_rs),
        .O(E));
  LUT2 #(
    .INIT(4'h8)) 
    \storage_data2[33]_i_1__0 
       (.I0(axi_arvalid_rs),
        .I1(axi_arready_rs),
        .O(\storage_data2_reg[33] ));
  LUT2 #(
    .INIT(4'h8)) 
    \storage_data2[35]_i_1 
       (.I0(axi_wvalid_rs),
        .I1(axi_wready_rs),
        .O(\storage_data2_reg[35] ));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_lite_slave" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_lite_slave
   (m_axi_lite_rready,
    m_axi_lite_bready,
    empty_fwft_i,
    \calib_intr_gen.tx_ch0_data_reg[19] ,
    Q,
    \calib_intr_gen.tx_ch0_data_reg[18] ,
    \calib_intr_gen.tx_ch0_data_reg[17] ,
    \calib_intr_gen.tx_ch0_data_reg[16] ,
    \calib_intr_gen.tx_ch0_data_reg[15] ,
    \calib_intr_gen.tx_ch0_data_reg[14] ,
    \calib_intr_gen.tx_ch0_data_reg[13] ,
    \calib_intr_gen.tx_ch0_data_reg[12] ,
    \calib_intr_gen.tx_ch0_data_reg[11] ,
    \calib_intr_gen.tx_ch0_data_reg[10] ,
    \calib_intr_gen.tx_ch0_data_reg[9] ,
    \calib_intr_gen.tx_ch0_data_reg[8] ,
    \calib_intr_gen.tx_ch0_data_reg[7] ,
    \calib_intr_gen.tx_ch0_data_reg[6] ,
    \calib_intr_gen.tx_ch0_data_reg[5] ,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    \m_axi_lite_awprot[1] ,
    m_axi_lite_awvalid,
    \m_axi_lite_arprot[1] ,
    m_axi_lite_arvalid,
    \m_axi_lite_wstrb[3] ,
    m_axi_lite_wvalid,
    sync_reset_out,
    m_axi_lite_aclk,
    rx_phy_ready_reg,
    clk_ph_out,
    rx_user_reset,
    axi_lite_tx_ready,
    axi_lite_rx_valid,
    m_axi_lite_rvalid,
    m_axi_lite_bvalid,
    m_axi_lite_awready,
    \axi_lite_rx_gen.axi_lite_rx_data_reg[19] ,
    m_axi_lite_arready,
    m_axi_lite_wready,
    m_axi_lite_rdata,
    m_axi_lite_rresp,
    m_axi_lite_bresp);
  output m_axi_lite_rready;
  output m_axi_lite_bready;
  output empty_fwft_i;
  output \calib_intr_gen.tx_ch0_data_reg[19] ;
  output [3:0]Q;
  output \calib_intr_gen.tx_ch0_data_reg[18] ;
  output \calib_intr_gen.tx_ch0_data_reg[17] ;
  output \calib_intr_gen.tx_ch0_data_reg[16] ;
  output \calib_intr_gen.tx_ch0_data_reg[15] ;
  output \calib_intr_gen.tx_ch0_data_reg[14] ;
  output \calib_intr_gen.tx_ch0_data_reg[13] ;
  output \calib_intr_gen.tx_ch0_data_reg[12] ;
  output \calib_intr_gen.tx_ch0_data_reg[11] ;
  output \calib_intr_gen.tx_ch0_data_reg[10] ;
  output \calib_intr_gen.tx_ch0_data_reg[9] ;
  output \calib_intr_gen.tx_ch0_data_reg[8] ;
  output \calib_intr_gen.tx_ch0_data_reg[7] ;
  output \calib_intr_gen.tx_ch0_data_reg[6] ;
  output \calib_intr_gen.tx_ch0_data_reg[5] ;
  output \calib_intr_gen.tx_ch0_data_reg[4] ;
  output [33:0]\m_axi_lite_awprot[1] ;
  output m_axi_lite_awvalid;
  output [33:0]\m_axi_lite_arprot[1] ;
  output m_axi_lite_arvalid;
  output [35:0]\m_axi_lite_wstrb[3] ;
  output m_axi_lite_wvalid;
  input sync_reset_out;
  input m_axi_lite_aclk;
  input rx_phy_ready_reg;
  input clk_ph_out;
  input rx_user_reset;
  input axi_lite_tx_ready;
  input axi_lite_rx_valid;
  input m_axi_lite_rvalid;
  input m_axi_lite_bvalid;
  input m_axi_lite_awready;
  input [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  input m_axi_lite_arready;
  input m_axi_lite_wready;
  input [31:0]m_axi_lite_rdata;
  input [1:0]m_axi_lite_rresp;
  input [1:0]m_axi_lite_bresp;

  wire [3:0]Q;
  wire axi_arready_rs;
  wire axi_arvalid_rs;
  wire axi_awready_rs;
  wire axi_awvalid_rs;
  wire axi_chip2chip_lite_slave_rx_fifo_n_0;
  wire axi_chip2chip_lite_slave_rx_fifo_n_10;
  wire axi_chip2chip_lite_slave_rx_fifo_n_11;
  wire axi_chip2chip_lite_slave_rx_fifo_n_12;
  wire axi_chip2chip_lite_slave_rx_fifo_n_13;
  wire axi_chip2chip_lite_slave_rx_fifo_n_14;
  wire axi_chip2chip_lite_slave_rx_fifo_n_15;
  wire axi_chip2chip_lite_slave_rx_fifo_n_16;
  wire axi_chip2chip_lite_slave_rx_fifo_n_17;
  wire axi_chip2chip_lite_slave_rx_fifo_n_18;
  wire axi_chip2chip_lite_slave_rx_fifo_n_19;
  wire axi_chip2chip_lite_slave_rx_fifo_n_20;
  wire axi_chip2chip_lite_slave_rx_fifo_n_21;
  wire axi_chip2chip_lite_slave_rx_fifo_n_22;
  wire axi_chip2chip_lite_slave_rx_fifo_n_23;
  wire axi_chip2chip_lite_slave_rx_fifo_n_24;
  wire axi_chip2chip_lite_slave_rx_fifo_n_25;
  wire axi_chip2chip_lite_slave_rx_fifo_n_26;
  wire axi_chip2chip_lite_slave_rx_fifo_n_6;
  wire axi_chip2chip_lite_slave_rx_fifo_n_7;
  wire axi_chip2chip_lite_slave_rx_fifo_n_8;
  wire axi_chip2chip_lite_slave_rx_fifo_n_9;
  wire [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  wire axi_lite_rx_valid;
  wire axi_lite_tx_ready;
  wire axi_wready_rs;
  wire axi_wvalid_rs;
  wire \calib_intr_gen.tx_ch0_data_reg[10] ;
  wire \calib_intr_gen.tx_ch0_data_reg[11] ;
  wire \calib_intr_gen.tx_ch0_data_reg[12] ;
  wire \calib_intr_gen.tx_ch0_data_reg[13] ;
  wire \calib_intr_gen.tx_ch0_data_reg[14] ;
  wire \calib_intr_gen.tx_ch0_data_reg[15] ;
  wire \calib_intr_gen.tx_ch0_data_reg[16] ;
  wire \calib_intr_gen.tx_ch0_data_reg[17] ;
  wire \calib_intr_gen.tx_ch0_data_reg[18] ;
  wire \calib_intr_gen.tx_ch0_data_reg[19] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire \calib_intr_gen.tx_ch0_data_reg[5] ;
  wire \calib_intr_gen.tx_ch0_data_reg[6] ;
  wire \calib_intr_gen.tx_ch0_data_reg[7] ;
  wire \calib_intr_gen.tx_ch0_data_reg[8] ;
  wire \calib_intr_gen.tx_ch0_data_reg[9] ;
  wire [35:0]ch2_data_out;
  wire clk_ph_out;
  wire empty_fwft_i;
  wire fifo_reset;
  wire m_axi_lite_aclk;
  wire [33:0]\m_axi_lite_arprot[1] ;
  wire m_axi_lite_arready;
  wire m_axi_lite_arvalid;
  wire [33:0]\m_axi_lite_awprot[1] ;
  wire m_axi_lite_awready;
  wire m_axi_lite_awvalid;
  wire m_axi_lite_bready;
  wire [1:0]m_axi_lite_bresp;
  wire m_axi_lite_bvalid;
  wire [31:0]m_axi_lite_rdata;
  wire m_axi_lite_rready;
  wire [1:0]m_axi_lite_rresp;
  wire m_axi_lite_rvalid;
  wire m_axi_lite_wready;
  wire [35:0]\m_axi_lite_wstrb[3] ;
  wire m_axi_lite_wvalid;
  wire [5:3]next_state;
  wire prog_full_i;
  wire [19:18]rx_data;
  wire rx_fifo_re;
  wire rx_phy_ready_reg;
  wire rx_user_reset;
  wire [5:2]state;
  wire storage_data2;
  wire storage_data2_0;
  wire storage_data2_1;
  wire sync_reset_out;
  wire [18:0]tx_data;
  wire tx_fifo_we;

  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_asitv10_axisc_register_slice arch_reg_slice_inst
       (.E(storage_data2_0),
        .axi_arready_rs(axi_arready_rs),
        .axi_arvalid_rs(axi_arvalid_rs),
        .ch2_data_out(ch2_data_out[33:0]),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\m_axi_lite_arprot[1] (\m_axi_lite_arprot[1] ),
        .m_axi_lite_arready(m_axi_lite_arready),
        .m_axi_lite_arvalid(m_axi_lite_arvalid),
        .sync_reset_out(sync_reset_out));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_asitv10_axisc_register_slice_68 awch_reg_slice_inst
       (.E(storage_data2_1),
        .axi_awready_rs(axi_awready_rs),
        .axi_awvalid_rs(axi_awvalid_rs),
        .ch2_data_out(ch2_data_out[33:0]),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\m_axi_lite_awprot[1] (\m_axi_lite_awprot[1] ),
        .m_axi_lite_awready(m_axi_lite_awready),
        .m_axi_lite_awvalid(m_axi_lite_awvalid),
        .sync_reset_out(sync_reset_out));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_lite_decoder axi_chip2chip_lite_decoder_inst
       (.D(next_state),
        .E(storage_data2_1),
        .Q(state),
        .axi_arready_rs(axi_arready_rs),
        .axi_arvalid_rs(axi_arvalid_rs),
        .axi_awready_rs(axi_awready_rs),
        .axi_awvalid_rs(axi_awvalid_rs),
        .axi_wready_rs(axi_wready_rs),
        .axi_wvalid_rs(axi_wvalid_rs),
        .empty_fwft_i_reg(axi_chip2chip_lite_slave_rx_fifo_n_0),
        .empty_fwft_i_reg_0(axi_chip2chip_lite_slave_rx_fifo_n_25),
        .empty_fwft_i_reg_1(axi_chip2chip_lite_slave_rx_fifo_n_26),
        .\goreg_dm.dout_i_reg[19] ({rx_data,axi_chip2chip_lite_slave_rx_fifo_n_6,axi_chip2chip_lite_slave_rx_fifo_n_7,axi_chip2chip_lite_slave_rx_fifo_n_8,axi_chip2chip_lite_slave_rx_fifo_n_9,axi_chip2chip_lite_slave_rx_fifo_n_10,axi_chip2chip_lite_slave_rx_fifo_n_11,axi_chip2chip_lite_slave_rx_fifo_n_12,axi_chip2chip_lite_slave_rx_fifo_n_13,axi_chip2chip_lite_slave_rx_fifo_n_14,axi_chip2chip_lite_slave_rx_fifo_n_15,axi_chip2chip_lite_slave_rx_fifo_n_16,axi_chip2chip_lite_slave_rx_fifo_n_17,axi_chip2chip_lite_slave_rx_fifo_n_18,axi_chip2chip_lite_slave_rx_fifo_n_19,axi_chip2chip_lite_slave_rx_fifo_n_20,axi_chip2chip_lite_slave_rx_fifo_n_21,axi_chip2chip_lite_slave_rx_fifo_n_22,axi_chip2chip_lite_slave_rx_fifo_n_23}),
        .\goreg_dm.dout_i_reg[19]_0 (axi_chip2chip_lite_slave_rx_fifo_n_24),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .rx_fifo_re(rx_fifo_re),
        .\storage_data2_reg[33] (storage_data2_0),
        .\storage_data2_reg[35] (storage_data2),
        .\storage_data2_reg[35]_0 (ch2_data_out),
        .sync_reset_out(sync_reset_out));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_b_fifo__parameterized1 axi_chip2chip_lite_slave_rx_fifo
       (.D(next_state),
        .Q({rx_data,axi_chip2chip_lite_slave_rx_fifo_n_6,axi_chip2chip_lite_slave_rx_fifo_n_7,axi_chip2chip_lite_slave_rx_fifo_n_8,axi_chip2chip_lite_slave_rx_fifo_n_9,axi_chip2chip_lite_slave_rx_fifo_n_10,axi_chip2chip_lite_slave_rx_fifo_n_11,axi_chip2chip_lite_slave_rx_fifo_n_12,axi_chip2chip_lite_slave_rx_fifo_n_13,axi_chip2chip_lite_slave_rx_fifo_n_14,axi_chip2chip_lite_slave_rx_fifo_n_15,axi_chip2chip_lite_slave_rx_fifo_n_16,axi_chip2chip_lite_slave_rx_fifo_n_17,axi_chip2chip_lite_slave_rx_fifo_n_18,axi_chip2chip_lite_slave_rx_fifo_n_19,axi_chip2chip_lite_slave_rx_fifo_n_20,axi_chip2chip_lite_slave_rx_fifo_n_21,axi_chip2chip_lite_slave_rx_fifo_n_22,axi_chip2chip_lite_slave_rx_fifo_n_23}),
        .axi_arready_rs(axi_arready_rs),
        .axi_awready_rs(axi_awready_rs),
        .\axi_lite_rx_gen.axi_lite_rx_data_reg[19] (\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .axi_wready_rs(axi_wready_rs),
        .ch0_valid_out_reg(axi_chip2chip_lite_slave_rx_fifo_n_24),
        .ch1_valid_out_reg(axi_chip2chip_lite_slave_rx_fifo_n_25),
        .ch2_valid_out_reg(axi_chip2chip_lite_slave_rx_fifo_n_26),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpregsm1.curr_fwft_state_reg[0] (axi_chip2chip_lite_slave_rx_fifo_n_0),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .rx_fifo_re(rx_fifo_re),
        .\state_reg[5] (state));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_b_fifo__parameterized0 axi_chip2chip_lite_slave_tx_fifo
       (.Q(tx_data),
        .axi_lite_tx_ready(axi_lite_tx_ready),
        .\calib_intr_gen.tx_ch0_data_reg[10] (\calib_intr_gen.tx_ch0_data_reg[10] ),
        .\calib_intr_gen.tx_ch0_data_reg[11] (\calib_intr_gen.tx_ch0_data_reg[11] ),
        .\calib_intr_gen.tx_ch0_data_reg[12] (\calib_intr_gen.tx_ch0_data_reg[12] ),
        .\calib_intr_gen.tx_ch0_data_reg[13] (\calib_intr_gen.tx_ch0_data_reg[13] ),
        .\calib_intr_gen.tx_ch0_data_reg[14] (\calib_intr_gen.tx_ch0_data_reg[14] ),
        .\calib_intr_gen.tx_ch0_data_reg[15] (\calib_intr_gen.tx_ch0_data_reg[15] ),
        .\calib_intr_gen.tx_ch0_data_reg[16] (\calib_intr_gen.tx_ch0_data_reg[16] ),
        .\calib_intr_gen.tx_ch0_data_reg[17] (\calib_intr_gen.tx_ch0_data_reg[17] ),
        .\calib_intr_gen.tx_ch0_data_reg[18] (\calib_intr_gen.tx_ch0_data_reg[18] ),
        .\calib_intr_gen.tx_ch0_data_reg[19] (\calib_intr_gen.tx_ch0_data_reg[19] ),
        .\calib_intr_gen.tx_ch0_data_reg[3] (Q),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\calib_intr_gen.tx_ch0_data_reg[4] ),
        .\calib_intr_gen.tx_ch0_data_reg[5] (\calib_intr_gen.tx_ch0_data_reg[5] ),
        .\calib_intr_gen.tx_ch0_data_reg[6] (\calib_intr_gen.tx_ch0_data_reg[6] ),
        .\calib_intr_gen.tx_ch0_data_reg[7] (\calib_intr_gen.tx_ch0_data_reg[7] ),
        .\calib_intr_gen.tx_ch0_data_reg[8] (\calib_intr_gen.tx_ch0_data_reg[8] ),
        .\calib_intr_gen.tx_ch0_data_reg[9] (\calib_intr_gen.tx_ch0_data_reg[9] ),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpr1.dout_i_reg[0] (empty_fwft_i),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .prog_full_i(prog_full_i),
        .rx_user_reset(rx_user_reset),
        .tx_fifo_we(tx_fifo_we));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_lite_tdm axi_chip2chip_lite_tx_tdm_inst
       (.Q(tx_data),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .m_axi_lite_bready(m_axi_lite_bready),
        .m_axi_lite_bresp(m_axi_lite_bresp),
        .m_axi_lite_bvalid(m_axi_lite_bvalid),
        .m_axi_lite_rdata(m_axi_lite_rdata),
        .m_axi_lite_rready(m_axi_lite_rready),
        .m_axi_lite_rresp(m_axi_lite_rresp),
        .m_axi_lite_rvalid(m_axi_lite_rvalid),
        .prog_full_i(prog_full_i),
        .sync_reset_out(sync_reset_out),
        .tx_fifo_we(tx_fifo_we));
  FDPE fifo_reset_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rx_phy_ready_reg),
        .PRE(sync_reset_out),
        .Q(fifo_reset));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_asitv10_axisc_register_slice__parameterized0 wch_reg_slice_inst
       (.D(ch2_data_out),
        .E(storage_data2),
        .axi_wready_rs(axi_wready_rs),
        .axi_wvalid_rs(axi_wvalid_rs),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .m_axi_lite_wready(m_axi_lite_wready),
        .\m_axi_lite_wstrb[3] (\m_axi_lite_wstrb[3] ),
        .m_axi_lite_wvalid(m_axi_lite_wvalid),
        .sync_reset_out(sync_reset_out));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_lite_tdm" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_lite_tdm
   (m_axi_lite_rready,
    m_axi_lite_bready,
    tx_fifo_we,
    Q,
    sync_reset_out,
    m_axi_lite_aclk,
    prog_full_i,
    m_axi_lite_rvalid,
    m_axi_lite_bvalid,
    m_axi_lite_rdata,
    m_axi_lite_rresp,
    m_axi_lite_bresp);
  output m_axi_lite_rready;
  output m_axi_lite_bready;
  output tx_fifo_we;
  output [18:0]Q;
  input sync_reset_out;
  input m_axi_lite_aclk;
  input prog_full_i;
  input m_axi_lite_rvalid;
  input m_axi_lite_bvalid;
  input [31:0]m_axi_lite_rdata;
  input [1:0]m_axi_lite_rresp;
  input [1:0]m_axi_lite_bresp;

  wire [18:0]Q;
  wire m_axi_lite_aclk;
  wire m_axi_lite_bready;
  wire [1:0]m_axi_lite_bresp;
  wire m_axi_lite_bvalid;
  wire [31:0]m_axi_lite_rdata;
  wire m_axi_lite_rready;
  wire [1:0]m_axi_lite_rresp;
  wire m_axi_lite_rvalid;
  wire next_ch0_ready_out;
  wire next_ch1_ready_out;
  wire next_send_ready;
  wire next_state;
  wire [18:0]next_tx_data;
  wire next_tx_fifo_we;
  wire prog_full_i;
  wire send_ready;
  wire send_ready_i_2_n_0;
  wire [3:0]state;
  wire \state[1]_i_1__3_n_0 ;
  wire sync_reset_out;
  wire tx_fifo_we;
  wire tx_fifo_we_i_2_n_0;

  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'h00000040)) 
    ch0_ready_out_i_1
       (.I0(state[0]),
        .I1(send_ready),
        .I2(state[1]),
        .I3(state[2]),
        .I4(state[3]),
        .O(next_ch0_ready_out));
  FDRE ch0_ready_out_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(next_ch0_ready_out),
        .Q(m_axi_lite_rready),
        .R(sync_reset_out));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'h00000040)) 
    ch1_ready_out_i_1
       (.I0(state[0]),
        .I1(send_ready),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[1]),
        .O(next_ch1_ready_out));
  FDRE ch1_ready_out_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(next_ch1_ready_out),
        .Q(m_axi_lite_bready),
        .R(sync_reset_out));
  LUT6 #(
    .INIT(64'h2222200020002000)) 
    send_ready_i_1
       (.I0(send_ready_i_2_n_0),
        .I1(prog_full_i),
        .I2(state[0]),
        .I3(m_axi_lite_rvalid),
        .I4(state[2]),
        .I5(m_axi_lite_bvalid),
        .O(next_send_ready));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    send_ready_i_2
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .O(send_ready_i_2_n_0));
  FDRE send_ready_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(next_send_ready),
        .Q(send_ready),
        .R(sync_reset_out));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \state[1]_i_1__3 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[2]),
        .O(\state[1]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'h0116)) 
    \state[3]_i_1__1 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[0]),
        .O(next_state));
  FDSE \state_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(state[3]),
        .Q(state[0]),
        .S(sync_reset_out));
  FDRE \state_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(\state[1]_i_1__3_n_0 ),
        .Q(state[1]),
        .R(sync_reset_out));
  FDRE \state_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(state[1]),
        .Q(state[2]),
        .R(sync_reset_out));
  FDRE \state_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(state[2]),
        .Q(state[3]),
        .R(sync_reset_out));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_data[0]_i_1 
       (.I0(m_axi_lite_bresp[0]),
        .I1(state[2]),
        .I2(state[0]),
        .I3(m_axi_lite_rdata[0]),
        .I4(state[1]),
        .I5(m_axi_lite_rdata[18]),
        .O(next_tx_data[0]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[10]_i_1 
       (.I0(m_axi_lite_rdata[28]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[10]),
        .I3(state[0]),
        .O(next_tx_data[10]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[11]_i_1 
       (.I0(m_axi_lite_rdata[29]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[11]),
        .I3(state[0]),
        .O(next_tx_data[11]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[12]_i_1 
       (.I0(m_axi_lite_rdata[30]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[12]),
        .I3(state[0]),
        .O(next_tx_data[12]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[13]_i_1 
       (.I0(m_axi_lite_rdata[31]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[13]),
        .I3(state[0]),
        .O(next_tx_data[13]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[14]_i_1 
       (.I0(m_axi_lite_rresp[0]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[14]),
        .I3(state[0]),
        .O(next_tx_data[14]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[15]_i_1 
       (.I0(m_axi_lite_rresp[1]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[15]),
        .I3(state[0]),
        .O(next_tx_data[15]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tx_data[16]_i_1 
       (.I0(state[0]),
        .I1(m_axi_lite_rdata[16]),
        .O(next_tx_data[16]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tx_data[17]_i_1 
       (.I0(state[0]),
        .I1(m_axi_lite_rdata[17]),
        .O(next_tx_data[17]));
  LUT2 #(
    .INIT(4'hE)) 
    \tx_data[18]_i_1 
       (.I0(state[2]),
        .I1(state[3]),
        .O(next_tx_data[18]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_data[1]_i_1 
       (.I0(m_axi_lite_bresp[1]),
        .I1(state[2]),
        .I2(state[0]),
        .I3(m_axi_lite_rdata[1]),
        .I4(state[1]),
        .I5(m_axi_lite_rdata[19]),
        .O(next_tx_data[1]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[2]_i_1 
       (.I0(m_axi_lite_rdata[20]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[2]),
        .I3(state[0]),
        .O(next_tx_data[2]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[3]_i_1 
       (.I0(m_axi_lite_rdata[21]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[3]),
        .I3(state[0]),
        .O(next_tx_data[3]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[4]_i_1 
       (.I0(m_axi_lite_rdata[22]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[4]),
        .I3(state[0]),
        .O(next_tx_data[4]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[5]_i_1 
       (.I0(m_axi_lite_rdata[23]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[5]),
        .I3(state[0]),
        .O(next_tx_data[5]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[6]_i_1 
       (.I0(m_axi_lite_rdata[24]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[6]),
        .I3(state[0]),
        .O(next_tx_data[6]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[7]_i_1 
       (.I0(m_axi_lite_rdata[25]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[7]),
        .I3(state[0]),
        .O(next_tx_data[7]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[8]_i_1 
       (.I0(m_axi_lite_rdata[26]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[8]),
        .I3(state[0]),
        .O(next_tx_data[8]));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[9]_i_1 
       (.I0(m_axi_lite_rdata[27]),
        .I1(state[1]),
        .I2(m_axi_lite_rdata[9]),
        .I3(state[0]),
        .O(next_tx_data[9]));
  FDRE \tx_data_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[0]),
        .Q(Q[0]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[10] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[10]),
        .Q(Q[10]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[11] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[11]),
        .Q(Q[11]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[12] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[12]),
        .Q(Q[12]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[13] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[13]),
        .Q(Q[13]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[14] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[14]),
        .Q(Q[14]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[15] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[15]),
        .Q(Q[15]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[16] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[16]),
        .Q(Q[16]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[17] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[17]),
        .Q(Q[17]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[18] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[18]),
        .Q(Q[18]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[1]),
        .Q(Q[1]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[2]),
        .Q(Q[2]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[3]),
        .Q(Q[3]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[4]),
        .Q(Q[4]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[5]),
        .Q(Q[5]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[6] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[6]),
        .Q(Q[6]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[7] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[7]),
        .Q(Q[7]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[8] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[8]),
        .Q(Q[8]),
        .R(sync_reset_out));
  FDRE \tx_data_reg[9] 
       (.C(m_axi_lite_aclk),
        .CE(next_state),
        .D(next_tx_data[9]),
        .Q(Q[9]),
        .R(sync_reset_out));
  LUT6 #(
    .INIT(64'h0116011601040000)) 
    tx_fifo_we_i_1
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(send_ready),
        .I5(tx_fifo_we_i_2_n_0),
        .O(next_tx_fifo_we));
  LUT5 #(
    .INIT(32'h0000F888)) 
    tx_fifo_we_i_2
       (.I0(m_axi_lite_bvalid),
        .I1(state[2]),
        .I2(m_axi_lite_rvalid),
        .I3(state[0]),
        .I4(prog_full_i),
        .O(tx_fifo_we_i_2_n_0));
  FDRE tx_fifo_we_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(next_tx_fifo_we),
        .Q(tx_fifo_we),
        .R(sync_reset_out));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_packer" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_packer
   (Q,
    p_0_in,
    E,
    \data_out_reg[22] ,
    clk_ph_out,
    aw_ch_data_valid,
    ram_full_i,
    rx_user_reset);
  output [22:0]Q;
  output p_0_in;
  input [0:0]E;
  input [22:0]\data_out_reg[22] ;
  input clk_ph_out;
  input aw_ch_data_valid;
  input ram_full_i;
  input rx_user_reset;

  wire [0:0]E;
  wire [22:0]Q;
  wire aw_ch_data_valid;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \mux_by_2.data_count[0]_i_1_n_0 ;
  wire \mux_by_2.data_count[1]_i_1_n_0 ;
  wire \mux_by_2.data_count_reg_n_0_[0] ;
  wire p_0_in;
  wire ram_full_i;
  wire rx_user_reset;

  LUT4 #(
    .INIT(16'hFB08)) 
    \mux_by_2.data_count[0]_i_1 
       (.I0(p_0_in),
        .I1(aw_ch_data_valid),
        .I2(ram_full_i),
        .I3(\mux_by_2.data_count_reg_n_0_[0] ),
        .O(\mux_by_2.data_count[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mux_by_2.data_count[1]_i_1 
       (.I0(\mux_by_2.data_count_reg_n_0_[0] ),
        .I1(aw_ch_data_valid),
        .I2(ram_full_i),
        .I3(p_0_in),
        .O(\mux_by_2.data_count[1]_i_1_n_0 ));
  FDSE \mux_by_2.data_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[0]_i_1_n_0 ),
        .Q(\mux_by_2.data_count_reg_n_0_[0] ),
        .S(rx_user_reset));
  FDRE \mux_by_2.data_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[1]_i_1_n_0 ),
        .Q(p_0_in),
        .R(rx_user_reset));
  FDRE \mux_by_2.pack_reg0_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[10] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[11] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[12] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[13] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[14] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[15] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[16] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[17] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[18] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[19] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[20] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[21] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[22] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[9] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [9]),
        .Q(Q[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_packer" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_packer_35
   (Q,
    p_0_in,
    E,
    \data_out_reg[22] ,
    clk_ph_out,
    ar_ch_data_valid,
    ram_full_i_reg,
    rx_user_reset);
  output [22:0]Q;
  output p_0_in;
  input [0:0]E;
  input [22:0]\data_out_reg[22] ;
  input clk_ph_out;
  input ar_ch_data_valid;
  input ram_full_i_reg;
  input rx_user_reset;

  wire [0:0]E;
  wire [22:0]Q;
  wire ar_ch_data_valid;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \mux_by_2.data_count[0]_i_1_n_0 ;
  wire \mux_by_2.data_count[1]_i_1_n_0 ;
  wire \mux_by_2.data_count_reg_n_0_[0] ;
  wire p_0_in;
  wire ram_full_i_reg;
  wire rx_user_reset;

  LUT4 #(
    .INIT(16'hFB08)) 
    \mux_by_2.data_count[0]_i_1 
       (.I0(p_0_in),
        .I1(ar_ch_data_valid),
        .I2(ram_full_i_reg),
        .I3(\mux_by_2.data_count_reg_n_0_[0] ),
        .O(\mux_by_2.data_count[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mux_by_2.data_count[1]_i_1 
       (.I0(\mux_by_2.data_count_reg_n_0_[0] ),
        .I1(ar_ch_data_valid),
        .I2(ram_full_i_reg),
        .I3(p_0_in),
        .O(\mux_by_2.data_count[1]_i_1_n_0 ));
  FDSE \mux_by_2.data_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[0]_i_1_n_0 ),
        .Q(\mux_by_2.data_count_reg_n_0_[0] ),
        .S(rx_user_reset));
  FDRE \mux_by_2.data_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[1]_i_1_n_0 ),
        .Q(p_0_in),
        .R(rx_user_reset));
  FDRE \mux_by_2.pack_reg0_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[10] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[11] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[12] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[13] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[14] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[15] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[16] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[17] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[18] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[19] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[20] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[21] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[22] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[9] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[22] [9]),
        .Q(Q[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_packer" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_packer__parameterized0
   (Q,
    p_0_in,
    E,
    \data_out_reg[18] ,
    clk_ph_out,
    wd_ch_data_valid,
    ram_full_i_reg,
    rx_user_reset);
  output [18:0]Q;
  output p_0_in;
  input [0:0]E;
  input [18:0]\data_out_reg[18] ;
  input clk_ph_out;
  input wd_ch_data_valid;
  input ram_full_i_reg;
  input rx_user_reset;

  wire [0:0]E;
  wire [18:0]Q;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire \mux_by_2.data_count[0]_i_1_n_0 ;
  wire \mux_by_2.data_count[1]_i_1_n_0 ;
  wire \mux_by_2.data_count_reg_n_0_[0] ;
  wire p_0_in;
  wire ram_full_i_reg;
  wire rx_user_reset;
  wire wd_ch_data_valid;

  LUT4 #(
    .INIT(16'hFB08)) 
    \mux_by_2.data_count[0]_i_1 
       (.I0(p_0_in),
        .I1(wd_ch_data_valid),
        .I2(ram_full_i_reg),
        .I3(\mux_by_2.data_count_reg_n_0_[0] ),
        .O(\mux_by_2.data_count[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mux_by_2.data_count[1]_i_1 
       (.I0(\mux_by_2.data_count_reg_n_0_[0] ),
        .I1(wd_ch_data_valid),
        .I2(ram_full_i_reg),
        .I3(p_0_in),
        .O(\mux_by_2.data_count[1]_i_1_n_0 ));
  FDSE \mux_by_2.data_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[0]_i_1_n_0 ),
        .Q(\mux_by_2.data_count_reg_n_0_[0] ),
        .S(rx_user_reset));
  FDRE \mux_by_2.data_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[1]_i_1_n_0 ),
        .Q(p_0_in),
        .R(rx_user_reset));
  FDRE \mux_by_2.pack_reg0_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[10] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[11] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[12] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[13] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[14] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[15] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[16] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[17] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[18] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[9] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\data_out_reg[18] [9]),
        .Q(Q[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_phy_calib" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_phy_calib
   (calib_done,
    calib_error,
    \state_reg[2] ,
    \state_reg[7] ,
    \deskew_enable_gen.delay_load_reg[22]_0 ,
    \deskew_enable_gen.max_value_0_reg[4]_0 ,
    \deskew_enable_gen.data_flip_sel_reg[24]_0 ,
    \deskew_enable_gen.data_flip_sel_reg[25]_0 ,
    \deskew_enable_gen.data_flip_sel_reg[26]_0 ,
    \deskew_enable_gen.p1_val_reg[0]_0 ,
    \deskew_enable_gen.data_flip_sel_reg[16]_0 ,
    \deskew_enable_gen.grp_p0_val_reg_0 ,
    \deskew_enable_gen.p1_val_reg[0]_1 ,
    \deskew_enable_gen.grp_p0_val_reg_1 ,
    \deskew_enable_gen.grp_p0_val_reg_2 ,
    \deskew_enable_gen.grp_p0_val_reg_3 ,
    \deskew_enable_gen.p1_val_reg[0]_2 ,
    \deskew_enable_gen.p1_val_reg[0]_3 ,
    \deskew_enable_gen.p3_val_reg[0]_0 ,
    \deskew_enable_gen.p1_val_reg[0]_4 ,
    \deskew_enable_gen.p3_val_reg[0]_1 ,
    \deskew_enable_gen.p1_val_reg[0]_5 ,
    \deskew_enable_gen.p1_val_reg[0]_6 ,
    \deskew_enable_gen.p3_val_reg[0]_2 ,
    \deskew_enable_gen.data_flip_sel_reg[29]_0 ,
    \deskew_enable_gen.p2_val_reg[0]_0 ,
    \deskew_enable_gen.data_flip_sel_reg[27]_0 ,
    \deskew_enable_gen.data_flip_sel_reg[28]_0 ,
    \deskew_enable_gen.p0_val_reg[0]_0 ,
    \deskew_enable_gen.p1_val_reg[0]_7 ,
    \deskew_enable_gen.p1_val_reg[0]_8 ,
    \deskew_enable_gen.p0_val_reg[0]_1 ,
    \deskew_enable_gen.f0_val_reg[0]_0 ,
    \deskew_enable_gen.f0_val_reg[0]_1 ,
    \deskew_enable_gen.f0_val_reg[0]_2 ,
    \sio_io_stage.rx_user_data_flop_reg[29] ,
    \data_out_reg[28] ,
    \sio_slav_calib_fsm.master_ack_reg ,
    \sio_slav_calib_fsm.master_init_reg ,
    \sio_slav_calib_fsm.master_nack_reg ,
    clk_ph_out,
    CO,
    reset_in,
    Q,
    \state_reg[1] ,
    \data_out_reg[29] ,
    S,
    \data_out_reg[13] ,
    \data_out_reg[0] ,
    \data_out_reg[12] ,
    \data_out_reg[24] ,
    \data_out_reg[7] ,
    \data_out_reg[12]_0 ,
    \data_out_reg[24]_0 ,
    calib_start,
    D);
  output calib_done;
  output calib_error;
  output [0:0]\state_reg[2] ;
  output \state_reg[7] ;
  output [0:0]\deskew_enable_gen.delay_load_reg[22]_0 ;
  output [4:0]\deskew_enable_gen.max_value_0_reg[4]_0 ;
  output \deskew_enable_gen.data_flip_sel_reg[24]_0 ;
  output \deskew_enable_gen.data_flip_sel_reg[25]_0 ;
  output \deskew_enable_gen.data_flip_sel_reg[26]_0 ;
  output \deskew_enable_gen.p1_val_reg[0]_0 ;
  output \deskew_enable_gen.data_flip_sel_reg[16]_0 ;
  output \deskew_enable_gen.grp_p0_val_reg_0 ;
  output \deskew_enable_gen.p1_val_reg[0]_1 ;
  output \deskew_enable_gen.grp_p0_val_reg_1 ;
  output \deskew_enable_gen.grp_p0_val_reg_2 ;
  output \deskew_enable_gen.grp_p0_val_reg_3 ;
  output \deskew_enable_gen.p1_val_reg[0]_2 ;
  output \deskew_enable_gen.p1_val_reg[0]_3 ;
  output \deskew_enable_gen.p3_val_reg[0]_0 ;
  output \deskew_enable_gen.p1_val_reg[0]_4 ;
  output \deskew_enable_gen.p3_val_reg[0]_1 ;
  output \deskew_enable_gen.p1_val_reg[0]_5 ;
  output \deskew_enable_gen.p1_val_reg[0]_6 ;
  output \deskew_enable_gen.p3_val_reg[0]_2 ;
  output \deskew_enable_gen.data_flip_sel_reg[29]_0 ;
  output [0:0]\deskew_enable_gen.p2_val_reg[0]_0 ;
  output \deskew_enable_gen.data_flip_sel_reg[27]_0 ;
  output \deskew_enable_gen.data_flip_sel_reg[28]_0 ;
  output [1:0]\deskew_enable_gen.p0_val_reg[0]_0 ;
  output \deskew_enable_gen.p1_val_reg[0]_7 ;
  output \deskew_enable_gen.p1_val_reg[0]_8 ;
  output [0:0]\deskew_enable_gen.p0_val_reg[0]_1 ;
  output \deskew_enable_gen.f0_val_reg[0]_0 ;
  output \deskew_enable_gen.f0_val_reg[0]_1 ;
  output \deskew_enable_gen.f0_val_reg[0]_2 ;
  output [29:0]\sio_io_stage.rx_user_data_flop_reg[29] ;
  output [14:0]\data_out_reg[28] ;
  output \sio_slav_calib_fsm.master_ack_reg ;
  output \sio_slav_calib_fsm.master_init_reg ;
  output \sio_slav_calib_fsm.master_nack_reg ;
  input clk_ph_out;
  input [0:0]CO;
  input reset_in;
  input [1:0]Q;
  input \state_reg[1] ;
  input [29:0]\data_out_reg[29] ;
  input [1:0]S;
  input [0:0]\data_out_reg[13] ;
  input [0:0]\data_out_reg[0] ;
  input [0:0]\data_out_reg[12] ;
  input [0:0]\data_out_reg[24] ;
  input [1:0]\data_out_reg[7] ;
  input [0:0]\data_out_reg[12]_0 ;
  input [0:0]\data_out_reg[24]_0 ;
  input calib_start;
  input [0:0]D;

  wire [0:0]CO;
  wire [0:0]D;
  wire [1:0]Q;
  wire [1:0]S;
  wire calib_done;
  wire calib_error;
  wire calib_start;
  wire clk_ph_out;
  wire [2:0]count;
  wire [29:0]data_flip_sel;
  wire [29:0]data_flip_sel0;
  wire [0:0]\data_out_reg[0] ;
  wire [0:0]\data_out_reg[12] ;
  wire [0:0]\data_out_reg[12]_0 ;
  wire [0:0]\data_out_reg[13] ;
  wire [0:0]\data_out_reg[24] ;
  wire [0:0]\data_out_reg[24]_0 ;
  wire [14:0]\data_out_reg[28] ;
  wire [29:0]\data_out_reg[29] ;
  wire [1:0]\data_out_reg[7] ;
  wire [29:0]data_stage0;
  wire [29:0]data_stage1;
  wire [29:0]data_stage2;
  wire [29:0]data_stage_sel0;
  wire [29:0]data_stage_sel00;
  wire [29:0]data_stage_sel1;
  wire [29:0]data_stage_sel10;
  wire \ddr_data_gen.data_dly_reg_n_0_[0] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[10] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[12] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[14] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[16] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[18] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[20] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[22] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[24] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[26] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[28] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[2] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[4] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[6] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[8] ;
  wire [28:0]delay_load0;
  wire \deskew_enable_gen.calib_done_i_1_n_0 ;
  wire \deskew_enable_gen.calib_error_i_1_n_0 ;
  wire \deskew_enable_gen.count[0]_i_1_n_0 ;
  wire \deskew_enable_gen.count[0]_i_2_n_0 ;
  wire \deskew_enable_gen.count[1]_i_1_n_0 ;
  wire \deskew_enable_gen.count[1]_i_2_n_0 ;
  wire \deskew_enable_gen.count[2]_i_1_n_0 ;
  wire \deskew_enable_gen.count[2]_i_2_n_0 ;
  wire \deskew_enable_gen.count[2]_i_4_n_0 ;
  wire \deskew_enable_gen.count[2]_i_5_n_0 ;
  wire \deskew_enable_gen.count[2]_i_6_n_0 ;
  wire \deskew_enable_gen.data_flip_sel_reg[16]_0 ;
  wire \deskew_enable_gen.data_flip_sel_reg[24]_0 ;
  wire \deskew_enable_gen.data_flip_sel_reg[25]_0 ;
  wire \deskew_enable_gen.data_flip_sel_reg[26]_0 ;
  wire \deskew_enable_gen.data_flip_sel_reg[27]_0 ;
  wire \deskew_enable_gen.data_flip_sel_reg[28]_0 ;
  wire \deskew_enable_gen.data_flip_sel_reg[29]_0 ;
  wire \deskew_enable_gen.data_stage_sel0[29]_i_3_n_0 ;
  wire \deskew_enable_gen.data_stage_sel0[29]_i_4_n_0 ;
  wire \deskew_enable_gen.delay_load[22]_i_1_n_0 ;
  wire \deskew_enable_gen.delay_load[28]_i_2_n_0 ;
  wire \deskew_enable_gen.delay_load[28]_i_3_n_0 ;
  wire \deskew_enable_gen.delay_load[28]_i_4_n_0 ;
  wire \deskew_enable_gen.delay_load[28]_i_5_n_0 ;
  wire [0:0]\deskew_enable_gen.delay_load_reg[22]_0 ;
  wire \deskew_enable_gen.delay_tap[0]_i_1_n_0 ;
  wire \deskew_enable_gen.delay_tap[0]_i_2_n_0 ;
  wire \deskew_enable_gen.delay_tap[0]_i_3_n_0 ;
  wire \deskew_enable_gen.delay_tap[1]_i_1_n_0 ;
  wire \deskew_enable_gen.delay_tap[1]_i_2_n_0 ;
  wire \deskew_enable_gen.delay_tap[1]_i_3_n_0 ;
  wire \deskew_enable_gen.delay_tap[1]_i_4_n_0 ;
  wire \deskew_enable_gen.delay_tap[2]_i_1_n_0 ;
  wire \deskew_enable_gen.delay_tap[2]_i_2_n_0 ;
  wire \deskew_enable_gen.delay_tap[2]_i_3_n_0 ;
  wire \deskew_enable_gen.delay_tap[2]_i_4_n_0 ;
  wire \deskew_enable_gen.delay_tap[2]_i_5_n_0 ;
  wire \deskew_enable_gen.delay_tap[3]_i_1_n_0 ;
  wire \deskew_enable_gen.delay_tap[3]_i_2_n_0 ;
  wire \deskew_enable_gen.delay_tap[3]_i_3_n_0 ;
  wire \deskew_enable_gen.delay_tap[3]_i_4_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_10_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_11_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_12_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_13_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_14_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_15_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_16_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_17_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_18_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_19_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_20_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_21_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_22_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_23_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_24_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_25_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_2_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_3_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_4_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_5_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_6_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_7_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_8_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_9_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_10_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_11_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_12_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_13_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_14_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_15_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_16_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_17_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_18_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_19_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_3_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_4_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_6_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_7_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_8_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_i_9_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_reg_i_1_n_3 ;
  wire \deskew_enable_gen.dout_p0_val_reg_i_2_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_reg_i_2_n_1 ;
  wire \deskew_enable_gen.dout_p0_val_reg_i_2_n_2 ;
  wire \deskew_enable_gen.dout_p0_val_reg_i_2_n_3 ;
  wire \deskew_enable_gen.dout_p0_val_reg_i_5_n_0 ;
  wire \deskew_enable_gen.dout_p0_val_reg_i_5_n_1 ;
  wire \deskew_enable_gen.dout_p0_val_reg_i_5_n_2 ;
  wire \deskew_enable_gen.dout_p0_val_reg_i_5_n_3 ;
  wire \deskew_enable_gen.f0_val[0]_i_10_n_0 ;
  wire \deskew_enable_gen.f0_val[0]_i_11_n_0 ;
  wire \deskew_enable_gen.f0_val[0]_i_12_n_0 ;
  wire \deskew_enable_gen.f0_val[0]_i_13_n_0 ;
  wire \deskew_enable_gen.f0_val[0]_i_3_n_0 ;
  wire \deskew_enable_gen.f0_val[0]_i_4_n_0 ;
  wire \deskew_enable_gen.f0_val[0]_i_6_n_0 ;
  wire \deskew_enable_gen.f0_val[0]_i_7_n_0 ;
  wire \deskew_enable_gen.f0_val[0]_i_8_n_0 ;
  wire \deskew_enable_gen.f0_val[0]_i_9_n_0 ;
  wire \deskew_enable_gen.f0_val_reg[0]_0 ;
  wire \deskew_enable_gen.f0_val_reg[0]_1 ;
  wire \deskew_enable_gen.f0_val_reg[0]_2 ;
  wire \deskew_enable_gen.f0_val_reg[0]_i_1_n_3 ;
  wire \deskew_enable_gen.f0_val_reg[0]_i_2_n_0 ;
  wire \deskew_enable_gen.f0_val_reg[0]_i_2_n_1 ;
  wire \deskew_enable_gen.f0_val_reg[0]_i_2_n_2 ;
  wire \deskew_enable_gen.f0_val_reg[0]_i_2_n_3 ;
  wire \deskew_enable_gen.f0_val_reg[0]_i_5_n_0 ;
  wire \deskew_enable_gen.f0_val_reg[0]_i_5_n_1 ;
  wire \deskew_enable_gen.f0_val_reg[0]_i_5_n_2 ;
  wire \deskew_enable_gen.f0_val_reg[0]_i_5_n_3 ;
  wire \deskew_enable_gen.f0_val_reg[2]_srl2_n_0 ;
  wire \deskew_enable_gen.f0_val_reg_n_0_[0] ;
  wire \deskew_enable_gen.f1_val[0]_i_10_n_0 ;
  wire \deskew_enable_gen.f1_val[0]_i_11_n_0 ;
  wire \deskew_enable_gen.f1_val[0]_i_12_n_0 ;
  wire \deskew_enable_gen.f1_val[0]_i_13_n_0 ;
  wire \deskew_enable_gen.f1_val[0]_i_3_n_0 ;
  wire \deskew_enable_gen.f1_val[0]_i_4_n_0 ;
  wire \deskew_enable_gen.f1_val[0]_i_6_n_0 ;
  wire \deskew_enable_gen.f1_val[0]_i_7_n_0 ;
  wire \deskew_enable_gen.f1_val[0]_i_8_n_0 ;
  wire \deskew_enable_gen.f1_val[0]_i_9_n_0 ;
  wire \deskew_enable_gen.f1_val_reg[0]_i_1_n_3 ;
  wire \deskew_enable_gen.f1_val_reg[0]_i_2_n_0 ;
  wire \deskew_enable_gen.f1_val_reg[0]_i_2_n_1 ;
  wire \deskew_enable_gen.f1_val_reg[0]_i_2_n_2 ;
  wire \deskew_enable_gen.f1_val_reg[0]_i_2_n_3 ;
  wire \deskew_enable_gen.f1_val_reg[0]_i_5_n_0 ;
  wire \deskew_enable_gen.f1_val_reg[0]_i_5_n_1 ;
  wire \deskew_enable_gen.f1_val_reg[0]_i_5_n_2 ;
  wire \deskew_enable_gen.f1_val_reg[0]_i_5_n_3 ;
  wire \deskew_enable_gen.f1_val_reg_n_0_[0] ;
  wire \deskew_enable_gen.f1_val_reg_n_0_[1] ;
  wire \deskew_enable_gen.f2_val[0]_i_10_n_0 ;
  wire \deskew_enable_gen.f2_val[0]_i_11_n_0 ;
  wire \deskew_enable_gen.f2_val[0]_i_12_n_0 ;
  wire \deskew_enable_gen.f2_val[0]_i_13_n_0 ;
  wire \deskew_enable_gen.f2_val[0]_i_16_n_0 ;
  wire \deskew_enable_gen.f2_val[0]_i_17_n_0 ;
  wire \deskew_enable_gen.f2_val[0]_i_3_n_0 ;
  wire \deskew_enable_gen.f2_val[0]_i_4_n_0 ;
  wire \deskew_enable_gen.f2_val[0]_i_6_n_0 ;
  wire \deskew_enable_gen.f2_val[0]_i_7_n_0 ;
  wire \deskew_enable_gen.f2_val[0]_i_8_n_0 ;
  wire \deskew_enable_gen.f2_val[0]_i_9_n_0 ;
  wire \deskew_enable_gen.f2_val_reg[0]_i_1_n_3 ;
  wire \deskew_enable_gen.f2_val_reg[0]_i_2_n_0 ;
  wire \deskew_enable_gen.f2_val_reg[0]_i_2_n_1 ;
  wire \deskew_enable_gen.f2_val_reg[0]_i_2_n_2 ;
  wire \deskew_enable_gen.f2_val_reg[0]_i_2_n_3 ;
  wire \deskew_enable_gen.f2_val_reg[0]_i_5_n_0 ;
  wire \deskew_enable_gen.f2_val_reg[0]_i_5_n_1 ;
  wire \deskew_enable_gen.f2_val_reg[0]_i_5_n_2 ;
  wire \deskew_enable_gen.f2_val_reg[0]_i_5_n_3 ;
  wire \deskew_enable_gen.f2_val_reg_n_0_[0] ;
  wire \deskew_enable_gen.f3_val[0]_i_10_n_0 ;
  wire \deskew_enable_gen.f3_val[0]_i_11_n_0 ;
  wire \deskew_enable_gen.f3_val[0]_i_12_n_0 ;
  wire \deskew_enable_gen.f3_val[0]_i_13_n_0 ;
  wire \deskew_enable_gen.f3_val[0]_i_3_n_0 ;
  wire \deskew_enable_gen.f3_val[0]_i_4_n_0 ;
  wire \deskew_enable_gen.f3_val[0]_i_6_n_0 ;
  wire \deskew_enable_gen.f3_val[0]_i_7_n_0 ;
  wire \deskew_enable_gen.f3_val[0]_i_8_n_0 ;
  wire \deskew_enable_gen.f3_val[0]_i_9_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0 ;
  wire \deskew_enable_gen.f3_val_reg[0]_i_1_n_3 ;
  wire \deskew_enable_gen.f3_val_reg[0]_i_2_n_0 ;
  wire \deskew_enable_gen.f3_val_reg[0]_i_2_n_1 ;
  wire \deskew_enable_gen.f3_val_reg[0]_i_2_n_2 ;
  wire \deskew_enable_gen.f3_val_reg[0]_i_2_n_3 ;
  wire \deskew_enable_gen.f3_val_reg[0]_i_5_n_0 ;
  wire \deskew_enable_gen.f3_val_reg[0]_i_5_n_1 ;
  wire \deskew_enable_gen.f3_val_reg[0]_i_5_n_2 ;
  wire \deskew_enable_gen.f3_val_reg[0]_i_5_n_3 ;
  wire \deskew_enable_gen.flip_type_i_1_n_0 ;
  wire \deskew_enable_gen.flip_type_i_2_n_0 ;
  wire \deskew_enable_gen.flip_type_i_3_n_0 ;
  wire \deskew_enable_gen.flip_type_i_4_n_0 ;
  wire \deskew_enable_gen.flip_type_i_5_n_0 ;
  wire \deskew_enable_gen.flip_type_i_6_n_0 ;
  wire \deskew_enable_gen.grp_count[0]_i_1_n_0 ;
  wire \deskew_enable_gen.grp_count[1]_i_1_n_0 ;
  wire \deskew_enable_gen.grp_count[2]_i_1_n_0 ;
  wire \deskew_enable_gen.grp_count[3]_i_1_n_0 ;
  wire \deskew_enable_gen.grp_count[4]_i_2_n_0 ;
  wire \deskew_enable_gen.grp_count[4]_i_3_n_0 ;
  wire \deskew_enable_gen.grp_count[4]_i_4_n_0 ;
  wire \deskew_enable_gen.grp_flip_i_2_n_0 ;
  wire \deskew_enable_gen.grp_flip_i_3_n_0 ;
  wire \deskew_enable_gen.grp_flip_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_i_10_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_i_11_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_i_12_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_i_13_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_i_6_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_i_7_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_i_8_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_i_9_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_reg_0 ;
  wire \deskew_enable_gen.grp_p0_val_reg_1 ;
  wire \deskew_enable_gen.grp_p0_val_reg_2 ;
  wire \deskew_enable_gen.grp_p0_val_reg_3 ;
  wire \deskew_enable_gen.grp_p0_val_reg_i_1_n_3 ;
  wire \deskew_enable_gen.grp_p0_val_reg_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_reg_i_2_n_1 ;
  wire \deskew_enable_gen.grp_p0_val_reg_i_2_n_2 ;
  wire \deskew_enable_gen.grp_p0_val_reg_i_2_n_3 ;
  wire \deskew_enable_gen.grp_p0_val_reg_i_5_n_0 ;
  wire \deskew_enable_gen.grp_p0_val_reg_i_5_n_1 ;
  wire \deskew_enable_gen.grp_p0_val_reg_i_5_n_2 ;
  wire \deskew_enable_gen.grp_p0_val_reg_i_5_n_3 ;
  wire \deskew_enable_gen.grp_p1_val_i_10_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_i_11_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_i_12_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_i_13_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_i_6_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_i_7_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_i_8_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_i_9_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_reg_i_1_n_3 ;
  wire \deskew_enable_gen.grp_p1_val_reg_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_reg_i_2_n_1 ;
  wire \deskew_enable_gen.grp_p1_val_reg_i_2_n_2 ;
  wire \deskew_enable_gen.grp_p1_val_reg_i_2_n_3 ;
  wire \deskew_enable_gen.grp_p1_val_reg_i_5_n_0 ;
  wire \deskew_enable_gen.grp_p1_val_reg_i_5_n_1 ;
  wire \deskew_enable_gen.grp_p1_val_reg_i_5_n_2 ;
  wire \deskew_enable_gen.grp_p1_val_reg_i_5_n_3 ;
  wire \deskew_enable_gen.grp_p3_val_i_11_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_12_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_13_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_14_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_17_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_18_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_20_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_24_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_27_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_28_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_34_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_6_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_7_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_8_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_i_9_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_reg_i_1_n_3 ;
  wire \deskew_enable_gen.grp_p3_val_reg_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_reg_i_2_n_1 ;
  wire \deskew_enable_gen.grp_p3_val_reg_i_2_n_2 ;
  wire \deskew_enable_gen.grp_p3_val_reg_i_2_n_3 ;
  wire \deskew_enable_gen.grp_p3_val_reg_i_5_n_0 ;
  wire \deskew_enable_gen.grp_p3_val_reg_i_5_n_1 ;
  wire \deskew_enable_gen.grp_p3_val_reg_i_5_n_2 ;
  wire \deskew_enable_gen.grp_p3_val_reg_i_5_n_3 ;
  wire \deskew_enable_gen.max_value_0[4]_i_2_n_0 ;
  wire [4:0]\deskew_enable_gen.max_value_0_reg[4]_0 ;
  wire \deskew_enable_gen.max_value_1[4]_i_2_n_0 ;
  wire \deskew_enable_gen.min_flip_0_i_1_n_0 ;
  wire \deskew_enable_gen.min_flip_0_i_2_n_0 ;
  wire \deskew_enable_gen.min_flip_0_i_3_n_0 ;
  wire \deskew_enable_gen.min_flip_0_i_4_n_0 ;
  wire \deskew_enable_gen.min_flip_1_i_1_n_0 ;
  wire \deskew_enable_gen.min_value_0[4]_i_1_n_0 ;
  wire \deskew_enable_gen.min_value_1[4]_i_3_n_0 ;
  wire \deskew_enable_gen.min_value_1[4]_i_4_n_0 ;
  wire [1:0]\deskew_enable_gen.p0_val_reg[0]_0 ;
  wire [0:0]\deskew_enable_gen.p0_val_reg[0]_1 ;
  wire \deskew_enable_gen.p0_val_reg[2]_srl2_n_0 ;
  wire \deskew_enable_gen.p0_val_reg_n_0_[0] ;
  wire \deskew_enable_gen.p1_val[0]_i_10_n_0 ;
  wire \deskew_enable_gen.p1_val[0]_i_11_n_0 ;
  wire \deskew_enable_gen.p1_val[0]_i_12_n_0 ;
  wire \deskew_enable_gen.p1_val[0]_i_3_n_0 ;
  wire \deskew_enable_gen.p1_val[0]_i_6_n_0 ;
  wire \deskew_enable_gen.p1_val[0]_i_7_n_0 ;
  wire \deskew_enable_gen.p1_val[0]_i_8_n_0 ;
  wire \deskew_enable_gen.p1_val_reg[0]_0 ;
  wire \deskew_enable_gen.p1_val_reg[0]_1 ;
  wire \deskew_enable_gen.p1_val_reg[0]_2 ;
  wire \deskew_enable_gen.p1_val_reg[0]_3 ;
  wire \deskew_enable_gen.p1_val_reg[0]_4 ;
  wire \deskew_enable_gen.p1_val_reg[0]_5 ;
  wire \deskew_enable_gen.p1_val_reg[0]_6 ;
  wire \deskew_enable_gen.p1_val_reg[0]_7 ;
  wire \deskew_enable_gen.p1_val_reg[0]_8 ;
  wire \deskew_enable_gen.p1_val_reg[0]_i_1_n_3 ;
  wire \deskew_enable_gen.p1_val_reg[0]_i_2_n_0 ;
  wire \deskew_enable_gen.p1_val_reg[0]_i_2_n_1 ;
  wire \deskew_enable_gen.p1_val_reg[0]_i_2_n_2 ;
  wire \deskew_enable_gen.p1_val_reg[0]_i_2_n_3 ;
  wire \deskew_enable_gen.p1_val_reg[0]_i_5_n_0 ;
  wire \deskew_enable_gen.p1_val_reg[0]_i_5_n_1 ;
  wire \deskew_enable_gen.p1_val_reg[0]_i_5_n_2 ;
  wire \deskew_enable_gen.p1_val_reg[0]_i_5_n_3 ;
  wire \deskew_enable_gen.p1_val_reg_n_0_[0] ;
  wire \deskew_enable_gen.p1_val_reg_n_0_[1] ;
  wire \deskew_enable_gen.p2_val[0]_i_10_n_0 ;
  wire \deskew_enable_gen.p2_val[0]_i_11_n_0 ;
  wire \deskew_enable_gen.p2_val[0]_i_6_n_0 ;
  wire \deskew_enable_gen.p2_val[0]_i_7_n_0 ;
  wire \deskew_enable_gen.p2_val[0]_i_8_n_0 ;
  wire [0:0]\deskew_enable_gen.p2_val_reg[0]_0 ;
  wire \deskew_enable_gen.p2_val_reg[0]_i_2_n_1 ;
  wire \deskew_enable_gen.p2_val_reg[0]_i_2_n_2 ;
  wire \deskew_enable_gen.p2_val_reg[0]_i_2_n_3 ;
  wire \deskew_enable_gen.p2_val_reg[0]_i_5_n_0 ;
  wire \deskew_enable_gen.p2_val_reg[0]_i_5_n_1 ;
  wire \deskew_enable_gen.p2_val_reg[0]_i_5_n_2 ;
  wire \deskew_enable_gen.p2_val_reg[0]_i_5_n_3 ;
  wire \deskew_enable_gen.p2_val_reg_n_0_[0] ;
  wire \deskew_enable_gen.p3_val[0]_i_10_n_0 ;
  wire \deskew_enable_gen.p3_val[0]_i_12_n_0 ;
  wire \deskew_enable_gen.p3_val[0]_i_3_n_0 ;
  wire \deskew_enable_gen.p3_val[0]_i_6_n_0 ;
  wire \deskew_enable_gen.p3_val[0]_i_7_n_0 ;
  wire \deskew_enable_gen.p3_val[0]_i_8_n_0 ;
  wire \deskew_enable_gen.p3_val_reg0 ;
  wire \deskew_enable_gen.p3_val_reg[0]_0 ;
  wire \deskew_enable_gen.p3_val_reg[0]_1 ;
  wire \deskew_enable_gen.p3_val_reg[0]_2 ;
  wire \deskew_enable_gen.p3_val_reg[0]_i_1_n_3 ;
  wire \deskew_enable_gen.p3_val_reg[0]_i_2_n_0 ;
  wire \deskew_enable_gen.p3_val_reg[0]_i_2_n_1 ;
  wire \deskew_enable_gen.p3_val_reg[0]_i_2_n_2 ;
  wire \deskew_enable_gen.p3_val_reg[0]_i_2_n_3 ;
  wire \deskew_enable_gen.p3_val_reg[0]_i_5_n_0 ;
  wire \deskew_enable_gen.p3_val_reg[0]_i_5_n_1 ;
  wire \deskew_enable_gen.p3_val_reg[0]_i_5_n_2 ;
  wire \deskew_enable_gen.p3_val_reg[0]_i_5_n_3 ;
  wire \deskew_enable_gen.pat_count[0]_i_1_n_0 ;
  wire \deskew_enable_gen.pat_count[1]_i_1_n_0 ;
  wire \deskew_enable_gen.pat_count[2]_i_1_n_0 ;
  wire \deskew_enable_gen.pat_count[2]_i_2_n_0 ;
  wire \deskew_enable_gen.pat_count[2]_i_4_n_0 ;
  wire \deskew_enable_gen.pat_count[2]_i_5_n_0 ;
  wire \deskew_enable_gen.pat_count[2]_i_6_n_0 ;
  wire \deskew_enable_gen.state[0]_i_1_n_0 ;
  wire \deskew_enable_gen.state[10]_i_1_n_0 ;
  wire \deskew_enable_gen.state[10]_i_2_n_0 ;
  wire \deskew_enable_gen.state[10]_i_3_n_0 ;
  wire \deskew_enable_gen.state[10]_i_4_n_0 ;
  wire \deskew_enable_gen.state[11]_i_2_n_0 ;
  wire \deskew_enable_gen.state[11]_i_3_n_0 ;
  wire \deskew_enable_gen.state[11]_i_4_n_0 ;
  wire \deskew_enable_gen.state[11]_i_5_n_0 ;
  wire \deskew_enable_gen.state[11]_i_6_n_0 ;
  wire \deskew_enable_gen.state[11]_i_7_n_0 ;
  wire \deskew_enable_gen.state[11]_i_8_n_0 ;
  wire \deskew_enable_gen.state[11]_i_9_n_0 ;
  wire \deskew_enable_gen.state[1]_i_1_n_0 ;
  wire \deskew_enable_gen.state[1]_i_2_n_0 ;
  wire \deskew_enable_gen.state[2]_i_1_n_0 ;
  wire \deskew_enable_gen.state[3]_i_1_n_0 ;
  wire \deskew_enable_gen.state[3]_i_2_n_0 ;
  wire \deskew_enable_gen.state[4]_i_1_n_0 ;
  wire \deskew_enable_gen.state[5]_i_1_n_0 ;
  wire \deskew_enable_gen.state[6]_i_1_n_0 ;
  wire \deskew_enable_gen.state[6]_i_2_n_0 ;
  wire \deskew_enable_gen.state[6]_i_3_n_0 ;
  wire \deskew_enable_gen.state[6]_i_4_n_0 ;
  wire \deskew_enable_gen.state[7]_i_1_n_0 ;
  wire \deskew_enable_gen.state[8]_i_1_n_0 ;
  wire \deskew_enable_gen.state[8]_i_2_n_0 ;
  wire \deskew_enable_gen.state[9]_i_1_n_0 ;
  wire \deskew_enable_gen.state[9]_i_2_n_0 ;
  wire \deskew_enable_gen.step_count[0]_i_1_n_0 ;
  wire \deskew_enable_gen.step_count[0]_i_2_n_0 ;
  wire \deskew_enable_gen.step_count[1]_i_1_n_0 ;
  wire \deskew_enable_gen.step_count[1]_i_2_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_1_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_2_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_4_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_5_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_6_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_7_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_8_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_9_n_0 ;
  wire dout_p0_val;
  wire dout_p0_val0;
  wire f0_val0;
  wire f1_val0;
  wire f2_val0;
  (* RTL_KEEP = "true" *) wire [3:0]f3_val;
  wire flip_type;
  wire [6:3]grp_count_mul;
  wire grp_flip;
  wire grp_p0_val;
  wire grp_p0_val0;
  wire grp_p1_val;
  wire grp_p1_val0;
  wire grp_p3_val;
  wire grp_p3_val0;
  wire [27:3]masked_dout;
  wire [4:0]max_value_0;
  wire [4:0]max_value_1;
  wire min_flip_0;
  wire min_flip_1;
  wire [4:0]min_value_0;
  wire [4:0]min_value_1;
  wire next_calib_done;
  wire next_count;
  wire next_data_stage_sel0;
  wire next_data_stage_sel1;
  wire next_delay_tap;
  wire next_grp_count;
  wire next_grp_flip;
  wire next_max_value_0;
  wire next_max_value_1;
  wire [4:0]next_min_value_0;
  wire next_min_value_1;
  wire next_pat_count;
  wire next_state;
  wire next_step_count;
  wire p1_val0;
  (* RTL_KEEP = "true" *) wire [3:0]p3_val;
  wire p_0_in4_in;
  wire p_0_in7_in;
  wire p_2_in5_in;
  wire p_2_in8_in;
  wire p_3_in;
  wire p_3_in9_in;
  wire [2:0]pat_count;
  wire reset_in;
  wire [29:0]selected_data;
  wire [29:0]\sio_io_stage.rx_user_data_flop_reg[29] ;
  wire \sio_slav_calib_fsm.master_ack_i_2_n_0 ;
  wire \sio_slav_calib_fsm.master_ack_i_3_n_0 ;
  wire \sio_slav_calib_fsm.master_ack_i_4_n_0 ;
  wire \sio_slav_calib_fsm.master_ack_i_5_n_0 ;
  wire \sio_slav_calib_fsm.master_ack_i_6_n_0 ;
  wire \sio_slav_calib_fsm.master_ack_reg ;
  wire \sio_slav_calib_fsm.master_init_i_2_n_0 ;
  wire \sio_slav_calib_fsm.master_init_i_3_n_0 ;
  wire \sio_slav_calib_fsm.master_init_i_4_n_0 ;
  wire \sio_slav_calib_fsm.master_init_i_5_n_0 ;
  wire \sio_slav_calib_fsm.master_init_i_6_n_0 ;
  wire \sio_slav_calib_fsm.master_init_reg ;
  wire \sio_slav_calib_fsm.master_nack_i_2_n_0 ;
  wire \sio_slav_calib_fsm.master_nack_i_3_n_0 ;
  wire \sio_slav_calib_fsm.master_nack_i_4_n_0 ;
  wire \sio_slav_calib_fsm.master_nack_i_5_n_0 ;
  wire \sio_slav_calib_fsm.master_nack_i_6_n_0 ;
  wire \sio_slav_calib_fsm.master_nack_reg ;
  wire [11:0]state;
  wire \state_reg[1] ;
  wire [0:0]\state_reg[2] ;
  wire \state_reg[7] ;
  wire [2:0]step_count;
  wire [28:0]unalign_data;
  wire [3:2]\NLW_deskew_enable_gen.dout_p0_val_reg_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.dout_p0_val_reg_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.dout_p0_val_reg_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.dout_p0_val_reg_i_5_O_UNCONNECTED ;
  wire [3:2]\NLW_deskew_enable_gen.f0_val_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f0_val_reg[0]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f0_val_reg[0]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f0_val_reg[0]_i_5_O_UNCONNECTED ;
  wire [3:2]\NLW_deskew_enable_gen.f1_val_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f1_val_reg[0]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f1_val_reg[0]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f1_val_reg[0]_i_5_O_UNCONNECTED ;
  wire [3:2]\NLW_deskew_enable_gen.f2_val_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f2_val_reg[0]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f2_val_reg[0]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f2_val_reg[0]_i_5_O_UNCONNECTED ;
  wire [3:2]\NLW_deskew_enable_gen.f3_val_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f3_val_reg[0]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f3_val_reg[0]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f3_val_reg[0]_i_5_O_UNCONNECTED ;
  wire [3:2]\NLW_deskew_enable_gen.grp_p0_val_reg_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p0_val_reg_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p0_val_reg_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p0_val_reg_i_5_O_UNCONNECTED ;
  wire [3:2]\NLW_deskew_enable_gen.grp_p1_val_reg_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p1_val_reg_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p1_val_reg_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p1_val_reg_i_5_O_UNCONNECTED ;
  wire [3:2]\NLW_deskew_enable_gen.grp_p3_val_reg_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p3_val_reg_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p3_val_reg_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p3_val_reg_i_5_O_UNCONNECTED ;
  wire [3:2]\NLW_deskew_enable_gen.p1_val_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p1_val_reg[0]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p1_val_reg[0]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p1_val_reg[0]_i_5_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p2_val_reg[0]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p2_val_reg[0]_i_5_O_UNCONNECTED ;
  wire [3:2]\NLW_deskew_enable_gen.p3_val_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p3_val_reg[0]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p3_val_reg[0]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p3_val_reg[0]_i_5_O_UNCONNECTED ;

  FDRE \ddr_data_gen.data_dly_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [0]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [10]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [11]),
        .Q(unalign_data[10]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [12]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [13]),
        .Q(unalign_data[12]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [14]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [15]),
        .Q(unalign_data[14]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [16]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [17]),
        .Q(unalign_data[16]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [18]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [19]),
        .Q(unalign_data[18]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [1]),
        .Q(unalign_data[0]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [20]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [21]),
        .Q(unalign_data[20]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [22]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [23]),
        .Q(unalign_data[22]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [24]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [25]),
        .Q(unalign_data[24]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [26]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [27]),
        .Q(unalign_data[26]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [28]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [29]),
        .Q(unalign_data[28]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [2]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [3]),
        .Q(unalign_data[2]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [4]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [5]),
        .Q(unalign_data[4]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [6]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [7]),
        .Q(unalign_data[6]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [8]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\data_out_reg[29] [9]),
        .Q(unalign_data[8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'h08FF0800)) 
    \deskew_enable_gen.calib_done_i_1 
       (.I0(step_count[1]),
        .I1(step_count[2]),
        .I2(step_count[0]),
        .I3(next_calib_done),
        .I4(calib_done),
        .O(\deskew_enable_gen.calib_done_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    \deskew_enable_gen.calib_done_i_2 
       (.I0(state[7]),
        .I1(state[11]),
        .I2(state[10]),
        .I3(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ),
        .I4(\deskew_enable_gen.step_count[2]_i_9_n_0 ),
        .I5(\deskew_enable_gen.flip_type_i_6_n_0 ),
        .O(next_calib_done));
  FDRE \deskew_enable_gen.calib_done_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.calib_done_i_1_n_0 ),
        .Q(calib_done),
        .R(reset_in));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \deskew_enable_gen.calib_error_i_1 
       (.I0(step_count[0]),
        .I1(step_count[1]),
        .I2(step_count[2]),
        .I3(next_calib_done),
        .I4(calib_error),
        .O(\deskew_enable_gen.calib_error_i_1_n_0 ));
  FDRE \deskew_enable_gen.calib_error_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.calib_error_i_1_n_0 ),
        .Q(calib_error),
        .R(reset_in));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    \deskew_enable_gen.count[0]_i_1 
       (.I0(\deskew_enable_gen.count[0]_i_2_n_0 ),
        .I1(state[9]),
        .I2(next_count),
        .I3(count[0]),
        .O(\deskew_enable_gen.count[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000055545504)) 
    \deskew_enable_gen.count[0]_i_2 
       (.I0(count[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(\deskew_enable_gen.state[6]_i_4_n_0 ),
        .I5(state[4]),
        .O(\deskew_enable_gen.count[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    \deskew_enable_gen.count[1]_i_1 
       (.I0(state[4]),
        .I1(\deskew_enable_gen.count[1]_i_2_n_0 ),
        .I2(state[9]),
        .I3(next_count),
        .I4(count[1]),
        .O(\deskew_enable_gen.count[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000EFECEFEC0000)) 
    \deskew_enable_gen.count[1]_i_2 
       (.I0(\deskew_enable_gen.state[6]_i_4_n_0 ),
        .I1(state[3]),
        .I2(state[2]),
        .I3(state[1]),
        .I4(count[1]),
        .I5(count[0]),
        .O(\deskew_enable_gen.count[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    \deskew_enable_gen.count[2]_i_1 
       (.I0(state[4]),
        .I1(\deskew_enable_gen.count[2]_i_2_n_0 ),
        .I2(state[9]),
        .I3(next_count),
        .I4(count[2]),
        .O(\deskew_enable_gen.count[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00F2F2F2F2000000)) 
    \deskew_enable_gen.count[2]_i_2 
       (.I0(\deskew_enable_gen.state[6]_i_4_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_11_n_0 ),
        .I2(\deskew_enable_gen.count[2]_i_4_n_0 ),
        .I3(count[0]),
        .I4(count[1]),
        .I5(count[2]),
        .O(\deskew_enable_gen.count[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \deskew_enable_gen.count[2]_i_3 
       (.I0(\deskew_enable_gen.count[2]_i_5_n_0 ),
        .I1(state[10]),
        .I2(state[11]),
        .I3(\deskew_enable_gen.count[2]_i_6_n_0 ),
        .I4(state[6]),
        .I5(state[5]),
        .O(next_count));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \deskew_enable_gen.count[2]_i_4 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(state[1]),
        .O(\deskew_enable_gen.count[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    \deskew_enable_gen.count[2]_i_5 
       (.I0(state[4]),
        .I1(state[9]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(state[0]),
        .O(\deskew_enable_gen.count[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.count[2]_i_6 
       (.I0(state[8]),
        .I1(state[7]),
        .O(\deskew_enable_gen.count[2]_i_6_n_0 ));
  FDRE \deskew_enable_gen.count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.count[0]_i_1_n_0 ),
        .Q(count[0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.count[1]_i_1_n_0 ),
        .Q(count[1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.count_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.count[2]_i_1_n_0 ),
        .Q(count[2]),
        .R(reset_in));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAEAA)) 
    \deskew_enable_gen.data_flip_sel[0]_i_1 
       (.I0(data_flip_sel[0]),
        .I1(grp_flip),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I4(grp_count_mul[4]),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[0]));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[10]_i_1 
       (.I0(data_flip_sel[10]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[3]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .O(data_flip_sel0[10]));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[11]_i_1 
       (.I0(data_flip_sel[11]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[11]));
  LUT6 #(
    .INIT(64'hAAAAEAAAAAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[12]_i_1 
       (.I0(data_flip_sel[12]),
        .I1(grp_flip),
        .I2(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[4]),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[12]));
  LUT6 #(
    .INIT(64'hAEAAAAAAAAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[13]_i_1 
       (.I0(data_flip_sel[13]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[13]));
  LUT6 #(
    .INIT(64'hBAAAAAAAAAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[14]_i_1 
       (.I0(data_flip_sel[14]),
        .I1(grp_count_mul[4]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I4(grp_count_mul[3]),
        .I5(grp_flip),
        .O(data_flip_sel0[14]));
  LUT6 #(
    .INIT(64'hAEAAAAAAAAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[15]_i_1 
       (.I0(data_flip_sel[15]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[3]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .O(data_flip_sel0[15]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAEAAAAA)) 
    \deskew_enable_gen.data_flip_sel[16]_i_1 
       (.I0(data_flip_sel[16]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[3]),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(data_flip_sel0[16]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAEAAAAA)) 
    \deskew_enable_gen.data_flip_sel[17]_i_1 
       (.I0(data_flip_sel[17]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[3]),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(data_flip_sel0[17]));
  LUT6 #(
    .INIT(64'hAAAAAAEAAAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[18]_i_1 
       (.I0(data_flip_sel[18]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[3]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .O(data_flip_sel0[18]));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[19]_i_1 
       (.I0(data_flip_sel[19]),
        .I1(grp_flip),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I4(grp_count_mul[3]),
        .I5(grp_count_mul[4]),
        .O(data_flip_sel0[19]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAEAA)) 
    \deskew_enable_gen.data_flip_sel[1]_i_1 
       (.I0(data_flip_sel[1]),
        .I1(grp_flip),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I4(grp_count_mul[4]),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[1]));
  LUT6 #(
    .INIT(64'hAAAAEAAAAAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[20]_i_1 
       (.I0(data_flip_sel[20]),
        .I1(grp_flip),
        .I2(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[3]),
        .I5(grp_count_mul[4]),
        .O(data_flip_sel0[20]));
  LUT6 #(
    .INIT(64'hAAAAAAAAEAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[21]_i_1 
       (.I0(data_flip_sel[21]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[21]));
  LUT6 #(
    .INIT(64'hAAAAAAAAEAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[22]_i_1 
       (.I0(data_flip_sel[22]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[22]));
  LUT6 #(
    .INIT(64'hAAAAAAAAEAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[23]_i_1 
       (.I0(data_flip_sel[23]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[23]));
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.data_flip_sel[23]_i_2 
       (.I0(grp_count_mul[6]),
        .I1(grp_count_mul[5]),
        .O(\deskew_enable_gen.data_flip_sel_reg[16]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[24]_i_1 
       (.I0(data_flip_sel[24]),
        .I1(grp_flip),
        .I2(\deskew_enable_gen.data_flip_sel_reg[24]_0 ),
        .O(data_flip_sel0[24]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'h00000008)) 
    \deskew_enable_gen.data_flip_sel[24]_i_2 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(\deskew_enable_gen.data_flip_sel_reg[24]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[25]_i_1 
       (.I0(data_flip_sel[25]),
        .I1(grp_flip),
        .I2(\deskew_enable_gen.data_flip_sel_reg[25]_0 ),
        .O(data_flip_sel0[25]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'h01000000)) 
    \deskew_enable_gen.data_flip_sel[25]_i_2 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[3]),
        .I4(grp_count_mul[4]),
        .O(\deskew_enable_gen.data_flip_sel_reg[25]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \deskew_enable_gen.data_flip_sel[26]_i_1 
       (.I0(data_flip_sel[26]),
        .I1(\deskew_enable_gen.data_flip_sel_reg[26]_0 ),
        .I2(grp_flip),
        .O(data_flip_sel0[26]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    \deskew_enable_gen.data_flip_sel[26]_i_2 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[3]),
        .I4(grp_count_mul[4]),
        .O(\deskew_enable_gen.data_flip_sel_reg[26]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \deskew_enable_gen.data_flip_sel[27]_i_1 
       (.I0(data_flip_sel[27]),
        .I1(\deskew_enable_gen.data_flip_sel_reg[27]_0 ),
        .I2(grp_flip),
        .O(data_flip_sel0[27]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'hFFFFFFF7)) 
    \deskew_enable_gen.data_flip_sel[27]_i_2 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(\deskew_enable_gen.data_flip_sel_reg[27]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[28]_i_1 
       (.I0(data_flip_sel[28]),
        .I1(grp_flip),
        .I2(\deskew_enable_gen.data_flip_sel_reg[28]_0 ),
        .O(data_flip_sel0[28]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \deskew_enable_gen.data_flip_sel[28]_i_2 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .O(\deskew_enable_gen.data_flip_sel_reg[28]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \deskew_enable_gen.data_flip_sel[29]_i_1 
       (.I0(data_flip_sel[29]),
        .I1(\deskew_enable_gen.data_flip_sel_reg[29]_0 ),
        .I2(grp_flip),
        .O(data_flip_sel0[29]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    \deskew_enable_gen.data_flip_sel[29]_i_2 
       (.I0(grp_count_mul[6]),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[4]),
        .O(\deskew_enable_gen.data_flip_sel_reg[29]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAEAAAA)) 
    \deskew_enable_gen.data_flip_sel[2]_i_1 
       (.I0(data_flip_sel[2]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[3]),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(data_flip_sel0[2]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAEAA)) 
    \deskew_enable_gen.data_flip_sel[3]_i_1 
       (.I0(data_flip_sel[3]),
        .I1(grp_flip),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I4(grp_count_mul[4]),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[3]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAEAAA)) 
    \deskew_enable_gen.data_flip_sel[4]_i_1 
       (.I0(data_flip_sel[4]),
        .I1(grp_flip),
        .I2(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[4]),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[4]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAEAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[5]_i_1 
       (.I0(data_flip_sel[5]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[5]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAEAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[6]_i_1 
       (.I0(data_flip_sel[6]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[6]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAEAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[7]_i_1 
       (.I0(data_flip_sel[7]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[7]));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
    \deskew_enable_gen.data_flip_sel[8]_i_1 
       (.I0(data_flip_sel[8]),
        .I1(grp_flip),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(grp_count_mul[3]),
        .O(data_flip_sel0[8]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAEAAA)) 
    \deskew_enable_gen.data_flip_sel[9]_i_1 
       (.I0(data_flip_sel[9]),
        .I1(grp_flip),
        .I2(grp_count_mul[3]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(grp_count_mul[4]),
        .O(data_flip_sel0[9]));
  FDRE \deskew_enable_gen.data_flip_sel_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[0]),
        .Q(data_flip_sel[0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[10]),
        .Q(data_flip_sel[10]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[11]),
        .Q(data_flip_sel[11]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[12]),
        .Q(data_flip_sel[12]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[13]),
        .Q(data_flip_sel[13]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[14]),
        .Q(data_flip_sel[14]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[15]),
        .Q(data_flip_sel[15]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[16]),
        .Q(data_flip_sel[16]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[17]),
        .Q(data_flip_sel[17]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[18]),
        .Q(data_flip_sel[18]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[19]),
        .Q(data_flip_sel[19]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[1]),
        .Q(data_flip_sel[1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[20]),
        .Q(data_flip_sel[20]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[21]),
        .Q(data_flip_sel[21]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[22]),
        .Q(data_flip_sel[22]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[23]),
        .Q(data_flip_sel[23]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[24]),
        .Q(data_flip_sel[24]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[25]),
        .Q(data_flip_sel[25]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[26]),
        .Q(data_flip_sel[26]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[27]),
        .Q(data_flip_sel[27]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[28]),
        .Q(data_flip_sel[28]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[29]),
        .Q(data_flip_sel[29]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[2]),
        .Q(data_flip_sel[2]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[3]),
        .Q(data_flip_sel[3]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[4]),
        .Q(data_flip_sel[4]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[5]),
        .Q(data_flip_sel[5]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[6]),
        .Q(data_flip_sel[6]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[7]),
        .Q(data_flip_sel[7]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[8]),
        .Q(data_flip_sel[8]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_flip_sel_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_flip_sel0[9]),
        .Q(data_flip_sel[9]),
        .R(reset_in));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[0]_i_1 
       (.I0(data_stage2[0]),
        .I1(data_stage0[0]),
        .I2(data_stage_sel1[0]),
        .I3(data_stage1[0]),
        .I4(data_stage_sel0[0]),
        .O(selected_data[0]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[10]_i_1 
       (.I0(data_stage2[10]),
        .I1(data_stage0[10]),
        .I2(data_stage_sel1[10]),
        .I3(data_stage1[10]),
        .I4(data_stage_sel0[10]),
        .O(selected_data[10]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[11]_i_1 
       (.I0(data_stage2[11]),
        .I1(data_stage0[11]),
        .I2(data_stage_sel1[11]),
        .I3(data_stage1[11]),
        .I4(data_stage_sel0[11]),
        .O(selected_data[11]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[12]_i_1 
       (.I0(data_stage2[12]),
        .I1(data_stage0[12]),
        .I2(data_stage_sel1[12]),
        .I3(data_stage1[12]),
        .I4(data_stage_sel0[12]),
        .O(selected_data[12]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[13]_i_1 
       (.I0(data_stage2[13]),
        .I1(data_stage0[13]),
        .I2(data_stage_sel1[13]),
        .I3(data_stage1[13]),
        .I4(data_stage_sel0[13]),
        .O(selected_data[13]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[14]_i_1 
       (.I0(data_stage2[14]),
        .I1(data_stage0[14]),
        .I2(data_stage_sel1[14]),
        .I3(data_stage1[14]),
        .I4(data_stage_sel0[14]),
        .O(selected_data[14]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[15]_i_1 
       (.I0(data_stage2[15]),
        .I1(data_stage0[15]),
        .I2(data_stage_sel1[15]),
        .I3(data_stage1[15]),
        .I4(data_stage_sel0[15]),
        .O(selected_data[15]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[16]_i_1 
       (.I0(data_stage2[16]),
        .I1(data_stage0[16]),
        .I2(data_stage_sel1[16]),
        .I3(data_stage1[16]),
        .I4(data_stage_sel0[16]),
        .O(selected_data[16]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[17]_i_1 
       (.I0(data_stage2[17]),
        .I1(data_stage0[17]),
        .I2(data_stage_sel1[17]),
        .I3(data_stage1[17]),
        .I4(data_stage_sel0[17]),
        .O(selected_data[17]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[18]_i_1 
       (.I0(data_stage2[18]),
        .I1(data_stage0[18]),
        .I2(data_stage_sel1[18]),
        .I3(data_stage1[18]),
        .I4(data_stage_sel0[18]),
        .O(selected_data[18]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[19]_i_1 
       (.I0(data_stage2[19]),
        .I1(data_stage0[19]),
        .I2(data_stage_sel1[19]),
        .I3(data_stage1[19]),
        .I4(data_stage_sel0[19]),
        .O(selected_data[19]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[1]_i_1 
       (.I0(data_stage2[1]),
        .I1(data_stage0[1]),
        .I2(data_stage_sel1[1]),
        .I3(data_stage1[1]),
        .I4(data_stage_sel0[1]),
        .O(selected_data[1]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[20]_i_1 
       (.I0(data_stage2[20]),
        .I1(data_stage0[20]),
        .I2(data_stage_sel1[20]),
        .I3(data_stage1[20]),
        .I4(data_stage_sel0[20]),
        .O(selected_data[20]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[21]_i_1 
       (.I0(data_stage2[21]),
        .I1(data_stage0[21]),
        .I2(data_stage_sel1[21]),
        .I3(data_stage1[21]),
        .I4(data_stage_sel0[21]),
        .O(selected_data[21]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[22]_i_1 
       (.I0(data_stage2[22]),
        .I1(data_stage0[22]),
        .I2(data_stage_sel1[22]),
        .I3(data_stage1[22]),
        .I4(data_stage_sel0[22]),
        .O(selected_data[22]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[23]_i_1 
       (.I0(data_stage2[23]),
        .I1(data_stage0[23]),
        .I2(data_stage_sel1[23]),
        .I3(data_stage1[23]),
        .I4(data_stage_sel0[23]),
        .O(selected_data[23]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[24]_i_1 
       (.I0(data_stage2[24]),
        .I1(data_stage0[24]),
        .I2(data_stage_sel1[24]),
        .I3(data_stage1[24]),
        .I4(data_stage_sel0[24]),
        .O(selected_data[24]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[25]_i_1 
       (.I0(data_stage2[25]),
        .I1(data_stage0[25]),
        .I2(data_stage_sel1[25]),
        .I3(data_stage1[25]),
        .I4(data_stage_sel0[25]),
        .O(selected_data[25]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[26]_i_1 
       (.I0(data_stage2[26]),
        .I1(data_stage0[26]),
        .I2(data_stage_sel1[26]),
        .I3(data_stage1[26]),
        .I4(data_stage_sel0[26]),
        .O(selected_data[26]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[27]_i_1 
       (.I0(data_stage2[27]),
        .I1(data_stage0[27]),
        .I2(data_stage_sel1[27]),
        .I3(data_stage1[27]),
        .I4(data_stage_sel0[27]),
        .O(selected_data[27]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[28]_i_1 
       (.I0(data_stage2[28]),
        .I1(data_stage0[28]),
        .I2(data_stage_sel1[28]),
        .I3(data_stage1[28]),
        .I4(data_stage_sel0[28]),
        .O(selected_data[28]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[29]_i_1 
       (.I0(data_stage2[29]),
        .I1(data_stage0[29]),
        .I2(data_stage_sel1[29]),
        .I3(data_stage1[29]),
        .I4(data_stage_sel0[29]),
        .O(selected_data[29]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[2]_i_1 
       (.I0(data_stage2[2]),
        .I1(data_stage0[2]),
        .I2(data_stage_sel1[2]),
        .I3(data_stage1[2]),
        .I4(data_stage_sel0[2]),
        .O(selected_data[2]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[3]_i_1 
       (.I0(data_stage2[3]),
        .I1(data_stage0[3]),
        .I2(data_stage_sel1[3]),
        .I3(data_stage1[3]),
        .I4(data_stage_sel0[3]),
        .O(selected_data[3]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[4]_i_1 
       (.I0(data_stage2[4]),
        .I1(data_stage0[4]),
        .I2(data_stage_sel1[4]),
        .I3(data_stage1[4]),
        .I4(data_stage_sel0[4]),
        .O(selected_data[4]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[5]_i_1 
       (.I0(data_stage2[5]),
        .I1(data_stage0[5]),
        .I2(data_stage_sel1[5]),
        .I3(data_stage1[5]),
        .I4(data_stage_sel0[5]),
        .O(selected_data[5]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[6]_i_1 
       (.I0(data_stage2[6]),
        .I1(data_stage0[6]),
        .I2(data_stage_sel1[6]),
        .I3(data_stage1[6]),
        .I4(data_stage_sel0[6]),
        .O(selected_data[6]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[7]_i_1 
       (.I0(data_stage2[7]),
        .I1(data_stage0[7]),
        .I2(data_stage_sel1[7]),
        .I3(data_stage1[7]),
        .I4(data_stage_sel0[7]),
        .O(selected_data[7]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[8]_i_1 
       (.I0(data_stage2[8]),
        .I1(data_stage0[8]),
        .I2(data_stage_sel1[8]),
        .I3(data_stage1[8]),
        .I4(data_stage_sel0[8]),
        .O(selected_data[8]));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \deskew_enable_gen.data_out[9]_i_1 
       (.I0(data_stage2[9]),
        .I1(data_stage0[9]),
        .I2(data_stage_sel1[9]),
        .I3(data_stage1[9]),
        .I4(data_stage_sel0[9]),
        .O(selected_data[9]));
  FDRE \deskew_enable_gen.data_out_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[0]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [0]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[10]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [10]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[11]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [11]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[12]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [12]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[13]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [13]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[14]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [14]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[15]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [15]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[16]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [16]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[17]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [17]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[18]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [18]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[19]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [19]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[1]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [1]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[20]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [20]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[21]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [21]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[22]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [22]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[23]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [23]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[24]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [24]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[25]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [25]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[26]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [26]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[27]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [27]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[28]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [28]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[29]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [29]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[2]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [2]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[3]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [3]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[4]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [4]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[5]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [5]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[6]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [6]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[7]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [7]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[8]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [8]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(selected_data[9]),
        .Q(\sio_io_stage.rx_user_data_flop_reg[29] [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[0]_i_1 
       (.I0(unalign_data[0]),
        .I1(data_flip_sel[0]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[0] ),
        .O(data_stage0[0]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[10]_i_1 
       (.I0(unalign_data[10]),
        .I1(data_flip_sel[10]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[10] ),
        .O(data_stage0[10]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[11]_i_1 
       (.I0(\data_out_reg[29] [10]),
        .I1(data_flip_sel[11]),
        .I2(unalign_data[10]),
        .O(data_stage0[11]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[12]_i_1 
       (.I0(unalign_data[12]),
        .I1(data_flip_sel[12]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[12] ),
        .O(data_stage0[12]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[13]_i_1 
       (.I0(\data_out_reg[29] [12]),
        .I1(data_flip_sel[13]),
        .I2(unalign_data[12]),
        .O(data_stage0[13]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[14]_i_1 
       (.I0(unalign_data[14]),
        .I1(data_flip_sel[14]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[14] ),
        .O(data_stage0[14]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[15]_i_1 
       (.I0(\data_out_reg[29] [14]),
        .I1(data_flip_sel[15]),
        .I2(unalign_data[14]),
        .O(data_stage0[15]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[16]_i_1 
       (.I0(unalign_data[16]),
        .I1(data_flip_sel[16]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[16] ),
        .O(data_stage0[16]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[17]_i_1 
       (.I0(\data_out_reg[29] [16]),
        .I1(data_flip_sel[17]),
        .I2(unalign_data[16]),
        .O(data_stage0[17]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[18]_i_1 
       (.I0(unalign_data[18]),
        .I1(data_flip_sel[18]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[18] ),
        .O(data_stage0[18]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[19]_i_1 
       (.I0(\data_out_reg[29] [18]),
        .I1(data_flip_sel[19]),
        .I2(unalign_data[18]),
        .O(data_stage0[19]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[1]_i_1 
       (.I0(\data_out_reg[29] [0]),
        .I1(data_flip_sel[1]),
        .I2(unalign_data[0]),
        .O(data_stage0[1]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[20]_i_1 
       (.I0(unalign_data[20]),
        .I1(data_flip_sel[20]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[20] ),
        .O(data_stage0[20]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[21]_i_1 
       (.I0(\data_out_reg[29] [20]),
        .I1(data_flip_sel[21]),
        .I2(unalign_data[20]),
        .O(data_stage0[21]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[22]_i_1 
       (.I0(unalign_data[22]),
        .I1(data_flip_sel[22]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[22] ),
        .O(data_stage0[22]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[23]_i_1 
       (.I0(\data_out_reg[29] [22]),
        .I1(data_flip_sel[23]),
        .I2(unalign_data[22]),
        .O(data_stage0[23]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[24]_i_1 
       (.I0(unalign_data[24]),
        .I1(data_flip_sel[24]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[24] ),
        .O(data_stage0[24]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[25]_i_1 
       (.I0(\data_out_reg[29] [24]),
        .I1(data_flip_sel[25]),
        .I2(unalign_data[24]),
        .O(data_stage0[25]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[26]_i_1 
       (.I0(unalign_data[26]),
        .I1(data_flip_sel[26]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[26] ),
        .O(data_stage0[26]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[27]_i_1 
       (.I0(\data_out_reg[29] [26]),
        .I1(data_flip_sel[27]),
        .I2(unalign_data[26]),
        .O(data_stage0[27]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[28]_i_1 
       (.I0(unalign_data[28]),
        .I1(data_flip_sel[28]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[28] ),
        .O(data_stage0[28]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[29]_i_1 
       (.I0(\data_out_reg[29] [28]),
        .I1(data_flip_sel[29]),
        .I2(unalign_data[28]),
        .O(data_stage0[29]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[2]_i_1 
       (.I0(unalign_data[2]),
        .I1(data_flip_sel[2]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[2] ),
        .O(data_stage0[2]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[3]_i_1 
       (.I0(\data_out_reg[29] [2]),
        .I1(data_flip_sel[3]),
        .I2(unalign_data[2]),
        .O(data_stage0[3]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[4]_i_1 
       (.I0(unalign_data[4]),
        .I1(data_flip_sel[4]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[4] ),
        .O(data_stage0[4]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[5]_i_1 
       (.I0(\data_out_reg[29] [4]),
        .I1(data_flip_sel[5]),
        .I2(unalign_data[4]),
        .O(data_stage0[5]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[6]_i_1 
       (.I0(unalign_data[6]),
        .I1(data_flip_sel[6]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[6] ),
        .O(data_stage0[6]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[7]_i_1 
       (.I0(\data_out_reg[29] [6]),
        .I1(data_flip_sel[7]),
        .I2(unalign_data[6]),
        .O(data_stage0[7]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[8]_i_1 
       (.I0(unalign_data[8]),
        .I1(data_flip_sel[8]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[8] ),
        .O(data_stage0[8]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[9]_i_1 
       (.I0(\data_out_reg[29] [8]),
        .I1(data_flip_sel[9]),
        .I2(unalign_data[8]),
        .O(data_stage0[9]));
  FDRE \deskew_enable_gen.data_stage1_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[0]),
        .Q(data_stage1[0]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[10]),
        .Q(data_stage1[10]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[11]),
        .Q(data_stage1[11]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[12]),
        .Q(data_stage1[12]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[13]),
        .Q(data_stage1[13]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[14]),
        .Q(data_stage1[14]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[15]),
        .Q(data_stage1[15]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[16]),
        .Q(data_stage1[16]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[17]),
        .Q(data_stage1[17]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[18]),
        .Q(data_stage1[18]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[19]),
        .Q(data_stage1[19]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[1]),
        .Q(data_stage1[1]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[20]),
        .Q(data_stage1[20]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[21]),
        .Q(data_stage1[21]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[22]),
        .Q(data_stage1[22]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[23]),
        .Q(data_stage1[23]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[24]),
        .Q(data_stage1[24]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[25]),
        .Q(data_stage1[25]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[26]),
        .Q(data_stage1[26]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[27]),
        .Q(data_stage1[27]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[28]),
        .Q(data_stage1[28]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[29]),
        .Q(data_stage1[29]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[2]),
        .Q(data_stage1[2]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[3]),
        .Q(data_stage1[3]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[4]),
        .Q(data_stage1[4]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[5]),
        .Q(data_stage1[5]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[6]),
        .Q(data_stage1[6]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[7]),
        .Q(data_stage1[7]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[8]),
        .Q(data_stage1[8]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage0[9]),
        .Q(data_stage1[9]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[0]),
        .Q(data_stage2[0]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[10]),
        .Q(data_stage2[10]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[11]),
        .Q(data_stage2[11]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[12]),
        .Q(data_stage2[12]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[13]),
        .Q(data_stage2[13]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[14]),
        .Q(data_stage2[14]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[15]),
        .Q(data_stage2[15]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[16]),
        .Q(data_stage2[16]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[17]),
        .Q(data_stage2[17]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[18]),
        .Q(data_stage2[18]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[19]),
        .Q(data_stage2[19]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[1]),
        .Q(data_stage2[1]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[20]),
        .Q(data_stage2[20]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[21]),
        .Q(data_stage2[21]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[22]),
        .Q(data_stage2[22]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[23]),
        .Q(data_stage2[23]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[24]),
        .Q(data_stage2[24]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[25]),
        .Q(data_stage2[25]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[26]),
        .Q(data_stage2[26]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[27]),
        .Q(data_stage2[27]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[28]),
        .Q(data_stage2[28]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[29]),
        .Q(data_stage2[29]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[2]),
        .Q(data_stage2[2]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[3]),
        .Q(data_stage2[3]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[4]),
        .Q(data_stage2[4]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[5]),
        .Q(data_stage2[5]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[6]),
        .Q(data_stage2[6]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[7]),
        .Q(data_stage2[7]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[8]),
        .Q(data_stage2[8]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_stage1[9]),
        .Q(data_stage2[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \deskew_enable_gen.data_stage_sel0[0]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel0[0]),
        .O(data_stage_sel00[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFA00000002)) 
    \deskew_enable_gen.data_stage_sel0[10]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel0[10]),
        .O(data_stage_sel00[10]));
  LUT6 #(
    .INIT(64'hFFFFFFFA00000002)) 
    \deskew_enable_gen.data_stage_sel0[11]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel0[11]),
        .O(data_stage_sel00[11]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel0[12]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel0[12]),
        .O(data_stage_sel00[12]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel0[13]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel0[13]),
        .O(data_stage_sel00[13]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAACAAA0)) 
    \deskew_enable_gen.data_stage_sel0[14]_i_1 
       (.I0(data_stage_sel0[14]),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(grp_count_mul[4]),
        .O(data_stage_sel00[14]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel0[15]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel0[15]),
        .O(data_stage_sel00[15]));
  LUT6 #(
    .INIT(64'hFFFFFFAA00000002)) 
    \deskew_enable_gen.data_stage_sel0[16]_i_1 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel0[16]),
        .O(data_stage_sel00[16]));
  LUT6 #(
    .INIT(64'hFFFFFFAA00000002)) 
    \deskew_enable_gen.data_stage_sel0[17]_i_1 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel0[17]),
        .O(data_stage_sel00[17]));
  LUT6 #(
    .INIT(64'hFFFFFFAA00000002)) 
    \deskew_enable_gen.data_stage_sel0[18]_i_1 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel0[18]),
        .O(data_stage_sel00[18]));
  LUT6 #(
    .INIT(64'hFFFFFFAA00000002)) 
    \deskew_enable_gen.data_stage_sel0[19]_i_1 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel0[19]),
        .O(data_stage_sel00[19]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \deskew_enable_gen.data_stage_sel0[1]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel0[1]),
        .O(data_stage_sel00[1]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel0[20]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel0[20]),
        .O(data_stage_sel00[20]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel0[21]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel0[21]),
        .O(data_stage_sel00[21]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel0[22]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel0[22]),
        .O(data_stage_sel00[22]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel0[23]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel0[23]),
        .O(data_stage_sel00[23]));
  LUT6 #(
    .INIT(64'hFFF8FFF800000008)) 
    \deskew_enable_gen.data_stage_sel0[24]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(data_stage_sel0[24]),
        .O(data_stage_sel00[24]));
  LUT6 #(
    .INIT(64'hFFF8FFF800000008)) 
    \deskew_enable_gen.data_stage_sel0[25]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(data_stage_sel0[25]),
        .O(data_stage_sel00[25]));
  LUT6 #(
    .INIT(64'hAAAAAA80AAAAAAC0)) 
    \deskew_enable_gen.data_stage_sel0[26]_i_1 
       (.I0(data_stage_sel0[26]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(data_stage_sel00[26]));
  LUT6 #(
    .INIT(64'hAAABAAA0AAA0AAA0)) 
    \deskew_enable_gen.data_stage_sel0[27]_i_1 
       (.I0(data_stage_sel0[27]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[3]),
        .I5(grp_count_mul[4]),
        .O(data_stage_sel00[27]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT5 #(
    .INIT(32'hFFF80008)) 
    \deskew_enable_gen.data_stage_sel0[28]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(data_stage_sel0[28]),
        .O(data_stage_sel00[28]));
  LUT3 #(
    .INIT(8'h08)) 
    \deskew_enable_gen.data_stage_sel0[29]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel0[29]_i_3_n_0 ),
        .I1(grp_p1_val),
        .I2(grp_p3_val),
        .O(next_data_stage_sel0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT5 #(
    .INIT(32'hAAAAAAC0)) 
    \deskew_enable_gen.data_stage_sel0[29]_i_2 
       (.I0(data_stage_sel0[29]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[6]),
        .O(data_stage_sel00[29]));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \deskew_enable_gen.data_stage_sel0[29]_i_3 
       (.I0(\deskew_enable_gen.grp_flip_i_2_n_0 ),
        .I1(\deskew_enable_gen.data_stage_sel0[29]_i_4_n_0 ),
        .I2(state[11]),
        .I3(state[9]),
        .I4(state[0]),
        .I5(grp_p0_val),
        .O(\deskew_enable_gen.data_stage_sel0[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFFF)) 
    \deskew_enable_gen.data_stage_sel0[29]_i_4 
       (.I0(state[5]),
        .I1(state[6]),
        .I2(dout_p0_val),
        .I3(state[10]),
        .I4(state[8]),
        .I5(state[7]),
        .O(\deskew_enable_gen.data_stage_sel0[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \deskew_enable_gen.data_stage_sel0[2]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel0[2]),
        .O(data_stage_sel00[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \deskew_enable_gen.data_stage_sel0[3]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel0[3]),
        .O(data_stage_sel00[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[4]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel0[4]),
        .O(data_stage_sel00[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[5]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel0[5]),
        .O(data_stage_sel00[5]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[6]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel0[6]),
        .O(data_stage_sel00[6]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[7]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel0[7]),
        .O(data_stage_sel00[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFA00000002)) 
    \deskew_enable_gen.data_stage_sel0[8]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel0[8]),
        .O(data_stage_sel00[8]));
  LUT6 #(
    .INIT(64'hFFFFFFFA00000002)) 
    \deskew_enable_gen.data_stage_sel0[9]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel0[9]),
        .O(data_stage_sel00[9]));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[0] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[0]),
        .Q(data_stage_sel0[0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[10] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[10]),
        .Q(data_stage_sel0[10]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[11] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[11]),
        .Q(data_stage_sel0[11]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[12] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[12]),
        .Q(data_stage_sel0[12]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[13] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[13]),
        .Q(data_stage_sel0[13]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[14] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[14]),
        .Q(data_stage_sel0[14]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[15] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[15]),
        .Q(data_stage_sel0[15]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[16] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[16]),
        .Q(data_stage_sel0[16]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[17] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[17]),
        .Q(data_stage_sel0[17]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[18] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[18]),
        .Q(data_stage_sel0[18]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[19] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[19]),
        .Q(data_stage_sel0[19]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[1] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[1]),
        .Q(data_stage_sel0[1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[20] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[20]),
        .Q(data_stage_sel0[20]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[21] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[21]),
        .Q(data_stage_sel0[21]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[22] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[22]),
        .Q(data_stage_sel0[22]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[23] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[23]),
        .Q(data_stage_sel0[23]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[24] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[24]),
        .Q(data_stage_sel0[24]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[25] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[25]),
        .Q(data_stage_sel0[25]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[26] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[26]),
        .Q(data_stage_sel0[26]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[27] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[27]),
        .Q(data_stage_sel0[27]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[28] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[28]),
        .Q(data_stage_sel0[28]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[29] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[29]),
        .Q(data_stage_sel0[29]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[2] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[2]),
        .Q(data_stage_sel0[2]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[3] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[3]),
        .Q(data_stage_sel0[3]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[4] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[4]),
        .Q(data_stage_sel0[4]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[5] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[5]),
        .Q(data_stage_sel0[5]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[6] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[6]),
        .Q(data_stage_sel0[6]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[7] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[7]),
        .Q(data_stage_sel0[7]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[8] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[8]),
        .Q(data_stage_sel0[8]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[9] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel0),
        .D(data_stage_sel00[9]),
        .Q(data_stage_sel0[9]),
        .R(reset_in));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \deskew_enable_gen.data_stage_sel1[0]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel1[0]),
        .O(data_stage_sel10[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFA00000002)) 
    \deskew_enable_gen.data_stage_sel1[10]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel1[10]),
        .O(data_stage_sel10[10]));
  LUT6 #(
    .INIT(64'hFFFFFFFA00000002)) 
    \deskew_enable_gen.data_stage_sel1[11]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel1[11]),
        .O(data_stage_sel10[11]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel1[12]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel1[12]),
        .O(data_stage_sel10[12]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel1[13]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel1[13]),
        .O(data_stage_sel10[13]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAACAAA0)) 
    \deskew_enable_gen.data_stage_sel1[14]_i_1 
       (.I0(data_stage_sel1[14]),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(grp_count_mul[4]),
        .O(data_stage_sel10[14]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel1[15]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel1[15]),
        .O(data_stage_sel10[15]));
  LUT6 #(
    .INIT(64'hFFFFFFAA00000002)) 
    \deskew_enable_gen.data_stage_sel1[16]_i_1 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel1[16]),
        .O(data_stage_sel10[16]));
  LUT6 #(
    .INIT(64'hFFFFFFAA00000002)) 
    \deskew_enable_gen.data_stage_sel1[17]_i_1 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel1[17]),
        .O(data_stage_sel10[17]));
  LUT6 #(
    .INIT(64'hFFFFFFAA00000002)) 
    \deskew_enable_gen.data_stage_sel1[18]_i_1 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel1[18]),
        .O(data_stage_sel10[18]));
  LUT6 #(
    .INIT(64'hFFFFFFAA00000002)) 
    \deskew_enable_gen.data_stage_sel1[19]_i_1 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel1[19]),
        .O(data_stage_sel10[19]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \deskew_enable_gen.data_stage_sel1[1]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel1[1]),
        .O(data_stage_sel10[1]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel1[20]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel1[20]),
        .O(data_stage_sel10[20]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel1[21]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel1[21]),
        .O(data_stage_sel10[21]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel1[22]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel1[22]),
        .O(data_stage_sel10[22]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel1[23]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel1[23]),
        .O(data_stage_sel10[23]));
  LUT6 #(
    .INIT(64'hFFF8FFF800000008)) 
    \deskew_enable_gen.data_stage_sel1[24]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(data_stage_sel1[24]),
        .O(data_stage_sel10[24]));
  LUT6 #(
    .INIT(64'hFFF8FFF800000008)) 
    \deskew_enable_gen.data_stage_sel1[25]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(data_stage_sel1[25]),
        .O(data_stage_sel10[25]));
  LUT6 #(
    .INIT(64'hAAAAAA80AAAAAAC0)) 
    \deskew_enable_gen.data_stage_sel1[26]_i_1 
       (.I0(data_stage_sel1[26]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(data_stage_sel10[26]));
  LUT6 #(
    .INIT(64'hAAABAAA0AAA0AAA0)) 
    \deskew_enable_gen.data_stage_sel1[27]_i_1 
       (.I0(data_stage_sel1[27]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[3]),
        .I5(grp_count_mul[4]),
        .O(data_stage_sel10[27]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'hFFF80008)) 
    \deskew_enable_gen.data_stage_sel1[28]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(data_stage_sel1[28]),
        .O(data_stage_sel10[28]));
  LUT3 #(
    .INIT(8'h28)) 
    \deskew_enable_gen.data_stage_sel1[29]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel0[29]_i_3_n_0 ),
        .I1(grp_p1_val),
        .I2(grp_p3_val),
        .O(next_data_stage_sel1));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'hAAAAAAC0)) 
    \deskew_enable_gen.data_stage_sel1[29]_i_2 
       (.I0(data_stage_sel1[29]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[6]),
        .O(data_stage_sel10[29]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \deskew_enable_gen.data_stage_sel1[2]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel1[2]),
        .O(data_stage_sel10[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \deskew_enable_gen.data_stage_sel1[3]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[4]),
        .I5(data_stage_sel1[3]),
        .O(data_stage_sel10[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[4]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel1[4]),
        .O(data_stage_sel10[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[5]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel1[5]),
        .O(data_stage_sel10[5]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[6]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel1[6]),
        .O(data_stage_sel10[6]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[7]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(data_stage_sel1[7]),
        .O(data_stage_sel10[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFA00000002)) 
    \deskew_enable_gen.data_stage_sel1[8]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel1[8]),
        .O(data_stage_sel10[8]));
  LUT6 #(
    .INIT(64'hFFFFFFFA00000002)) 
    \deskew_enable_gen.data_stage_sel1[9]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(data_stage_sel1[9]),
        .O(data_stage_sel10[9]));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[0] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[0]),
        .Q(data_stage_sel1[0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[10] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[10]),
        .Q(data_stage_sel1[10]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[11] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[11]),
        .Q(data_stage_sel1[11]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[12] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[12]),
        .Q(data_stage_sel1[12]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[13] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[13]),
        .Q(data_stage_sel1[13]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[14] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[14]),
        .Q(data_stage_sel1[14]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[15] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[15]),
        .Q(data_stage_sel1[15]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[16] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[16]),
        .Q(data_stage_sel1[16]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[17] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[17]),
        .Q(data_stage_sel1[17]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[18] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[18]),
        .Q(data_stage_sel1[18]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[19] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[19]),
        .Q(data_stage_sel1[19]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[1] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[1]),
        .Q(data_stage_sel1[1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[20] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[20]),
        .Q(data_stage_sel1[20]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[21] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[21]),
        .Q(data_stage_sel1[21]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[22] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[22]),
        .Q(data_stage_sel1[22]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[23] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[23]),
        .Q(data_stage_sel1[23]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[24] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[24]),
        .Q(data_stage_sel1[24]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[25] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[25]),
        .Q(data_stage_sel1[25]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[26] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[26]),
        .Q(data_stage_sel1[26]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[27] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[27]),
        .Q(data_stage_sel1[27]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[28] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[28]),
        .Q(data_stage_sel1[28]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[29] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[29]),
        .Q(data_stage_sel1[29]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[2] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[2]),
        .Q(data_stage_sel1[2]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[3] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[3]),
        .Q(data_stage_sel1[3]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[4] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[4]),
        .Q(data_stage_sel1[4]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[5] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[5]),
        .Q(data_stage_sel1[5]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[6] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[6]),
        .Q(data_stage_sel1[6]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[7] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[7]),
        .Q(data_stage_sel1[7]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[8] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[8]),
        .Q(data_stage_sel1[8]),
        .R(reset_in));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[9] 
       (.C(clk_ph_out),
        .CE(next_data_stage_sel1),
        .D(data_stage_sel10[9]),
        .Q(data_stage_sel1[9]),
        .R(reset_in));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \deskew_enable_gen.delay_load[0]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[0]));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \deskew_enable_gen.delay_load[10]_i_1 
       (.I0(grp_count_mul[6]),
        .I1(grp_count_mul[5]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[3]),
        .I4(grp_count_mul[4]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[10]));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \deskew_enable_gen.delay_load[12]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[12]));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \deskew_enable_gen.delay_load[14]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[5]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[4]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[14]));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \deskew_enable_gen.delay_load[16]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[3]),
        .I4(grp_count_mul[4]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[16]));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \deskew_enable_gen.delay_load[18]_i_1 
       (.I0(grp_count_mul[5]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[3]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[4]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[18]));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \deskew_enable_gen.delay_load[20]_i_1 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[3]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[20]));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \deskew_enable_gen.delay_load[22]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[5]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[4]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(\deskew_enable_gen.delay_load[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \deskew_enable_gen.delay_load[24]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[3]),
        .I4(grp_count_mul[4]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[24]));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \deskew_enable_gen.delay_load[26]_i_1 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[26]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT5 #(
    .INIT(32'h00001000)) 
    \deskew_enable_gen.delay_load[28]_i_1 
       (.I0(grp_count_mul[5]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[4]),
        .I4(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[28]));
  LUT6 #(
    .INIT(64'hBFBBAAAABFBBBFBB)) 
    \deskew_enable_gen.delay_load[28]_i_2 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .I1(\deskew_enable_gen.delay_load[28]_i_3_n_0 ),
        .I2(\deskew_enable_gen.state[11]_i_5_n_0 ),
        .I3(state[9]),
        .I4(\deskew_enable_gen.delay_load[28]_i_4_n_0 ),
        .I5(calib_start),
        .O(\deskew_enable_gen.delay_load[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0014001400140114)) 
    \deskew_enable_gen.delay_load[28]_i_3 
       (.I0(state[0]),
        .I1(state[8]),
        .I2(state[9]),
        .I3(state[7]),
        .I4(\deskew_enable_gen.delay_load[28]_i_5_n_0 ),
        .I5(\deskew_enable_gen.state[8]_i_2_n_0 ),
        .O(\deskew_enable_gen.delay_load[28]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    \deskew_enable_gen.delay_load[28]_i_4 
       (.I0(state[7]),
        .I1(state[8]),
        .I2(state[9]),
        .I3(state[0]),
        .O(\deskew_enable_gen.delay_load[28]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \deskew_enable_gen.delay_load[28]_i_5 
       (.I0(step_count[2]),
        .I1(step_count[1]),
        .O(\deskew_enable_gen.delay_load[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \deskew_enable_gen.delay_load[2]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[3]),
        .I4(grp_count_mul[4]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[2]));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \deskew_enable_gen.delay_load[4]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[4]));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \deskew_enable_gen.delay_load[6]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[5]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[4]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[6]));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \deskew_enable_gen.delay_load[8]_i_1 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[4]),
        .I5(\deskew_enable_gen.delay_load[28]_i_2_n_0 ),
        .O(delay_load0[8]));
  FDRE \deskew_enable_gen.delay_load_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[0]),
        .Q(\data_out_reg[28] [0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[10]),
        .Q(\data_out_reg[28] [5]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[12]),
        .Q(\data_out_reg[28] [6]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[14]),
        .Q(\data_out_reg[28] [7]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[16]),
        .Q(\data_out_reg[28] [8]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[18]),
        .Q(\data_out_reg[28] [9]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[20]),
        .Q(\data_out_reg[28] [10]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.delay_load[22]_i_1_n_0 ),
        .Q(\data_out_reg[28] [11]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[24]),
        .Q(\data_out_reg[28] [12]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[26]),
        .Q(\data_out_reg[28] [13]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[28]),
        .Q(\data_out_reg[28] [14]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[2]),
        .Q(\data_out_reg[28] [1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[4]),
        .Q(\data_out_reg[28] [2]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[6]),
        .Q(\data_out_reg[28] [3]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_load_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[8]),
        .Q(\data_out_reg[28] [4]),
        .R(reset_in));
  LUT6 #(
    .INIT(64'h4444444433300030)) 
    \deskew_enable_gen.delay_tap[0]_i_1 
       (.I0(\deskew_enable_gen.max_value_0_reg[4]_0 [0]),
        .I1(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[0]_i_2_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[4]_i_8_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[0]_i_3_n_0 ),
        .I5(\deskew_enable_gen.delay_tap[4]_i_10_n_0 ),
        .O(\deskew_enable_gen.delay_tap[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'h8778)) 
    \deskew_enable_gen.delay_tap[0]_i_2 
       (.I0(max_value_0[0]),
        .I1(min_value_0[0]),
        .I2(max_value_0[1]),
        .I3(min_value_0[1]),
        .O(\deskew_enable_gen.delay_tap[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'h9666)) 
    \deskew_enable_gen.delay_tap[0]_i_3 
       (.I0(max_value_1[1]),
        .I1(min_value_1[1]),
        .I2(max_value_1[0]),
        .I3(min_value_1[0]),
        .O(\deskew_enable_gen.delay_tap[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h88888888BBB888B8)) 
    \deskew_enable_gen.delay_tap[1]_i_1 
       (.I0(\deskew_enable_gen.delay_tap[1]_i_2_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[1]_i_3_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[4]_i_8_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[1]_i_4_n_0 ),
        .I5(\deskew_enable_gen.delay_tap[4]_i_10_n_0 ),
        .O(\deskew_enable_gen.delay_tap[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h00F2F200)) 
    \deskew_enable_gen.delay_tap[1]_i_2 
       (.I0(state[7]),
        .I1(state[8]),
        .I2(state[9]),
        .I3(\deskew_enable_gen.max_value_0_reg[4]_0 [1]),
        .I4(\deskew_enable_gen.max_value_0_reg[4]_0 [0]),
        .O(\deskew_enable_gen.delay_tap[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9999966696666666)) 
    \deskew_enable_gen.delay_tap[1]_i_3 
       (.I0(min_value_0[2]),
        .I1(max_value_0[2]),
        .I2(max_value_0[0]),
        .I3(min_value_0[0]),
        .I4(max_value_0[1]),
        .I5(min_value_0[1]),
        .O(\deskew_enable_gen.delay_tap[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9996966696669666)) 
    \deskew_enable_gen.delay_tap[1]_i_4 
       (.I0(min_value_1[2]),
        .I1(max_value_1[2]),
        .I2(max_value_1[1]),
        .I3(min_value_1[1]),
        .I4(max_value_1[0]),
        .I5(min_value_1[0]),
        .O(\deskew_enable_gen.delay_tap[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88888888BBB888B8)) 
    \deskew_enable_gen.delay_tap[2]_i_1 
       (.I0(\deskew_enable_gen.delay_tap[2]_i_2_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[2]_i_3_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[4]_i_8_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[2]_i_4_n_0 ),
        .I5(\deskew_enable_gen.delay_tap[4]_i_10_n_0 ),
        .O(\deskew_enable_gen.delay_tap[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00F2F2F2F2000000)) 
    \deskew_enable_gen.delay_tap[2]_i_2 
       (.I0(state[7]),
        .I1(state[8]),
        .I2(state[9]),
        .I3(\deskew_enable_gen.max_value_0_reg[4]_0 [1]),
        .I4(\deskew_enable_gen.max_value_0_reg[4]_0 [0]),
        .I5(\deskew_enable_gen.max_value_0_reg[4]_0 [2]),
        .O(\deskew_enable_gen.delay_tap[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \deskew_enable_gen.delay_tap[2]_i_3 
       (.I0(max_value_0[3]),
        .I1(min_value_0[3]),
        .I2(\deskew_enable_gen.delay_tap[4]_i_12_n_0 ),
        .O(\deskew_enable_gen.delay_tap[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'h66669996)) 
    \deskew_enable_gen.delay_tap[2]_i_4 
       (.I0(max_value_1[3]),
        .I1(min_value_1[3]),
        .I2(min_value_1[2]),
        .I3(max_value_1[2]),
        .I4(\deskew_enable_gen.delay_tap[2]_i_5_n_0 ),
        .O(\deskew_enable_gen.delay_tap[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0007077707770777)) 
    \deskew_enable_gen.delay_tap[2]_i_5 
       (.I0(max_value_1[2]),
        .I1(min_value_1[2]),
        .I2(max_value_1[1]),
        .I3(min_value_1[1]),
        .I4(max_value_1[0]),
        .I5(min_value_1[0]),
        .O(\deskew_enable_gen.delay_tap[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8888888833300030)) 
    \deskew_enable_gen.delay_tap[3]_i_1 
       (.I0(\deskew_enable_gen.delay_tap[3]_i_2_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[3]_i_3_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[4]_i_8_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[3]_i_4_n_0 ),
        .I5(\deskew_enable_gen.delay_tap[4]_i_10_n_0 ),
        .O(\deskew_enable_gen.delay_tap[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \deskew_enable_gen.delay_tap[3]_i_2 
       (.I0(\deskew_enable_gen.max_value_0_reg[4]_0 [3]),
        .I1(\deskew_enable_gen.max_value_0_reg[4]_0 [1]),
        .I2(\deskew_enable_gen.max_value_0_reg[4]_0 [0]),
        .I3(\deskew_enable_gen.max_value_0_reg[4]_0 [2]),
        .O(\deskew_enable_gen.delay_tap[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'h99969666)) 
    \deskew_enable_gen.delay_tap[3]_i_3 
       (.I0(max_value_0[4]),
        .I1(min_value_0[4]),
        .I2(max_value_0[3]),
        .I3(min_value_0[3]),
        .I4(\deskew_enable_gen.delay_tap[4]_i_12_n_0 ),
        .O(\deskew_enable_gen.delay_tap[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \deskew_enable_gen.delay_tap[3]_i_4 
       (.I0(max_value_1[4]),
        .I1(min_value_1[4]),
        .I2(\deskew_enable_gen.delay_tap[4]_i_16_n_0 ),
        .O(\deskew_enable_gen.delay_tap[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000011400010115)) 
    \deskew_enable_gen.delay_tap[4]_i_1 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .I1(state[0]),
        .I2(state[8]),
        .I3(state[9]),
        .I4(state[7]),
        .I5(\deskew_enable_gen.delay_tap[4]_i_4_n_0 ),
        .O(next_delay_tap));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \deskew_enable_gen.delay_tap[4]_i_10 
       (.I0(state[9]),
        .I1(state[8]),
        .I2(state[7]),
        .O(\deskew_enable_gen.delay_tap[4]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.delay_tap[4]_i_11 
       (.I0(state[3]),
        .I1(state[2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFE888E8880000)) 
    \deskew_enable_gen.delay_tap[4]_i_12 
       (.I0(min_value_0[1]),
        .I1(max_value_0[1]),
        .I2(min_value_0[0]),
        .I3(max_value_0[0]),
        .I4(min_value_0[2]),
        .I5(max_value_0[2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hD400FFD4)) 
    \deskew_enable_gen.delay_tap[4]_i_13 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_17_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_18_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[4]_i_19_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[4]_i_20_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_21_n_0 ),
        .O(\deskew_enable_gen.delay_tap[4]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'h99696966)) 
    \deskew_enable_gen.delay_tap[4]_i_14 
       (.I0(max_value_0[4]),
        .I1(min_value_0[4]),
        .I2(max_value_0[3]),
        .I3(min_value_0[3]),
        .I4(\deskew_enable_gen.delay_tap[4]_i_22_n_0 ),
        .O(\deskew_enable_gen.delay_tap[4]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT5 #(
    .INIT(32'h99696966)) 
    \deskew_enable_gen.delay_tap[4]_i_15 
       (.I0(max_value_1[4]),
        .I1(min_value_1[4]),
        .I2(max_value_1[3]),
        .I3(min_value_1[3]),
        .I4(\deskew_enable_gen.delay_tap[4]_i_23_n_0 ),
        .O(\deskew_enable_gen.delay_tap[4]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'h00F1F1FF)) 
    \deskew_enable_gen.delay_tap[4]_i_16 
       (.I0(max_value_1[2]),
        .I1(min_value_1[2]),
        .I2(\deskew_enable_gen.delay_tap[2]_i_5_n_0 ),
        .I3(min_value_1[3]),
        .I4(max_value_1[3]),
        .O(\deskew_enable_gen.delay_tap[4]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hBB2B44D444D4BB2B)) 
    \deskew_enable_gen.delay_tap[4]_i_17 
       (.I0(max_value_0[1]),
        .I1(min_value_0[1]),
        .I2(min_value_0[0]),
        .I3(max_value_0[0]),
        .I4(min_value_0[2]),
        .I5(max_value_0[2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hBB2B44D444D4BB2B)) 
    \deskew_enable_gen.delay_tap[4]_i_18 
       (.I0(max_value_1[1]),
        .I1(min_value_1[1]),
        .I2(min_value_1[0]),
        .I3(max_value_1[0]),
        .I4(min_value_1[2]),
        .I5(max_value_1[2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hBBBB2BB22BB2BBBB)) 
    \deskew_enable_gen.delay_tap[4]_i_19 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_24_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_25_n_0 ),
        .I2(max_value_0[0]),
        .I3(min_value_0[0]),
        .I4(max_value_1[0]),
        .I5(min_value_1[0]),
        .O(\deskew_enable_gen.delay_tap[4]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h8888888833300030)) 
    \deskew_enable_gen.delay_tap[4]_i_2 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_5_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[4]_i_7_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[4]_i_8_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_9_n_0 ),
        .I5(\deskew_enable_gen.delay_tap[4]_i_10_n_0 ),
        .O(\deskew_enable_gen.delay_tap[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \deskew_enable_gen.delay_tap[4]_i_20 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_23_n_0 ),
        .I1(max_value_1[3]),
        .I2(min_value_1[3]),
        .O(\deskew_enable_gen.delay_tap[4]_i_20_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \deskew_enable_gen.delay_tap[4]_i_21 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_22_n_0 ),
        .I1(max_value_0[3]),
        .I2(min_value_0[3]),
        .O(\deskew_enable_gen.delay_tap[4]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h40F40000FFFF40F4)) 
    \deskew_enable_gen.delay_tap[4]_i_22 
       (.I0(max_value_0[0]),
        .I1(min_value_0[0]),
        .I2(min_value_0[1]),
        .I3(max_value_0[1]),
        .I4(min_value_0[2]),
        .I5(max_value_0[2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h40F40000FFFF40F4)) 
    \deskew_enable_gen.delay_tap[4]_i_23 
       (.I0(max_value_1[0]),
        .I1(min_value_1[0]),
        .I2(min_value_1[1]),
        .I3(max_value_1[1]),
        .I4(min_value_1[2]),
        .I5(max_value_1[2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_23_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'hD22D)) 
    \deskew_enable_gen.delay_tap[4]_i_24 
       (.I0(min_value_1[0]),
        .I1(max_value_1[0]),
        .I2(max_value_1[1]),
        .I3(min_value_1[1]),
        .O(\deskew_enable_gen.delay_tap[4]_i_24_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'hD22D)) 
    \deskew_enable_gen.delay_tap[4]_i_25 
       (.I0(min_value_0[0]),
        .I1(max_value_0[0]),
        .I2(max_value_0[1]),
        .I3(min_value_0[1]),
        .O(\deskew_enable_gen.delay_tap[4]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \deskew_enable_gen.delay_tap[4]_i_3 
       (.I0(\deskew_enable_gen.state[7]_i_1_n_0 ),
        .I1(state[11]),
        .I2(state[10]),
        .I3(state[1]),
        .I4(\deskew_enable_gen.delay_tap[4]_i_11_n_0 ),
        .I5(state[4]),
        .O(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'hFBBB)) 
    \deskew_enable_gen.delay_tap[4]_i_4 
       (.I0(\deskew_enable_gen.state[8]_i_2_n_0 ),
        .I1(state[7]),
        .I2(step_count[2]),
        .I3(step_count[1]),
        .O(\deskew_enable_gen.delay_tap[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \deskew_enable_gen.delay_tap[4]_i_5 
       (.I0(\deskew_enable_gen.max_value_0_reg[4]_0 [2]),
        .I1(\deskew_enable_gen.max_value_0_reg[4]_0 [0]),
        .I2(\deskew_enable_gen.max_value_0_reg[4]_0 [1]),
        .I3(\deskew_enable_gen.max_value_0_reg[4]_0 [3]),
        .I4(\deskew_enable_gen.max_value_0_reg[4]_0 [4]),
        .O(\deskew_enable_gen.delay_tap[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.delay_tap[4]_i_6 
       (.I0(state[9]),
        .I1(state[8]),
        .O(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'hFFE8E800)) 
    \deskew_enable_gen.delay_tap[4]_i_7 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_12_n_0 ),
        .I1(min_value_0[3]),
        .I2(max_value_0[3]),
        .I3(min_value_0[4]),
        .I4(max_value_0[4]),
        .O(\deskew_enable_gen.delay_tap[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h7171710071007100)) 
    \deskew_enable_gen.delay_tap[4]_i_8 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_13_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_14_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[4]_i_15_n_0 ),
        .I3(step_count[2]),
        .I4(step_count[0]),
        .I5(step_count[1]),
        .O(\deskew_enable_gen.delay_tap[4]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \deskew_enable_gen.delay_tap[4]_i_9 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_16_n_0 ),
        .I1(min_value_1[4]),
        .I2(max_value_1[4]),
        .O(\deskew_enable_gen.delay_tap[4]_i_9_n_0 ));
  FDRE \deskew_enable_gen.delay_tap_reg[0] 
       (.C(clk_ph_out),
        .CE(next_delay_tap),
        .D(\deskew_enable_gen.delay_tap[0]_i_1_n_0 ),
        .Q(\deskew_enable_gen.max_value_0_reg[4]_0 [0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_tap_reg[1] 
       (.C(clk_ph_out),
        .CE(next_delay_tap),
        .D(\deskew_enable_gen.delay_tap[1]_i_1_n_0 ),
        .Q(\deskew_enable_gen.max_value_0_reg[4]_0 [1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_tap_reg[2] 
       (.C(clk_ph_out),
        .CE(next_delay_tap),
        .D(\deskew_enable_gen.delay_tap[2]_i_1_n_0 ),
        .Q(\deskew_enable_gen.max_value_0_reg[4]_0 [2]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_tap_reg[3] 
       (.C(clk_ph_out),
        .CE(next_delay_tap),
        .D(\deskew_enable_gen.delay_tap[3]_i_1_n_0 ),
        .Q(\deskew_enable_gen.max_value_0_reg[4]_0 [3]),
        .R(reset_in));
  FDRE \deskew_enable_gen.delay_tap_reg[4] 
       (.C(clk_ph_out),
        .CE(next_delay_tap),
        .D(\deskew_enable_gen.delay_tap[4]_i_2_n_0 ),
        .Q(\deskew_enable_gen.max_value_0_reg[4]_0 [4]),
        .R(reset_in));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT5 #(
    .INIT(32'h0007000F)) 
    \deskew_enable_gen.dout_p0_val_i_10 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(\deskew_enable_gen.dout_p0_val_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00F0F0F022F2F2F2)) 
    \deskew_enable_gen.dout_p0_val_i_11 
       (.I0(selected_data[10]),
        .I1(selected_data[9]),
        .I2(\deskew_enable_gen.dout_p0_val_i_17_n_0 ),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[3]),
        .I5(selected_data[11]),
        .O(\deskew_enable_gen.dout_p0_val_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hEE00EEE0)) 
    \deskew_enable_gen.dout_p0_val_i_12 
       (.I0(\deskew_enable_gen.dout_p0_val_i_18_n_0 ),
        .I1(selected_data[8]),
        .I2(selected_data[6]),
        .I3(\deskew_enable_gen.dout_p0_val_i_19_n_0 ),
        .I4(selected_data[7]),
        .O(\deskew_enable_gen.dout_p0_val_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hF3F300A2)) 
    \deskew_enable_gen.dout_p0_val_i_13 
       (.I0(selected_data[4]),
        .I1(selected_data[3]),
        .I2(\deskew_enable_gen.state[10]_i_4_n_0 ),
        .I3(selected_data[5]),
        .I4(\deskew_enable_gen.dout_p0_val_i_19_n_0 ),
        .O(\deskew_enable_gen.dout_p0_val_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hFF40)) 
    \deskew_enable_gen.dout_p0_val_i_14 
       (.I0(selected_data[1]),
        .I1(selected_data[0]),
        .I2(selected_data[2]),
        .I3(\deskew_enable_gen.state[10]_i_4_n_0 ),
        .O(\deskew_enable_gen.dout_p0_val_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT4 #(
    .INIT(16'h0111)) 
    \deskew_enable_gen.dout_p0_val_i_15 
       (.I0(grp_count_mul[5]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[3]),
        .O(\deskew_enable_gen.dout_p0_val_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT5 #(
    .INIT(32'h00000057)) 
    \deskew_enable_gen.dout_p0_val_i_16 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .O(\deskew_enable_gen.dout_p0_val_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \deskew_enable_gen.dout_p0_val_i_17 
       (.I0(grp_count_mul[5]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[4]),
        .O(\deskew_enable_gen.dout_p0_val_i_17_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'h00000007)) 
    \deskew_enable_gen.dout_p0_val_i_18 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .O(\deskew_enable_gen.dout_p0_val_i_18_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \deskew_enable_gen.dout_p0_val_i_19 
       (.I0(grp_count_mul[5]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[4]),
        .I3(grp_count_mul[3]),
        .O(\deskew_enable_gen.dout_p0_val_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h00A200A200A2F3F3)) 
    \deskew_enable_gen.dout_p0_val_i_3 
       (.I0(selected_data[28]),
        .I1(selected_data[27]),
        .I2(\deskew_enable_gen.dout_p0_val_i_10_n_0 ),
        .I3(selected_data[29]),
        .I4(grp_count_mul[5]),
        .I5(grp_count_mul[6]),
        .O(\deskew_enable_gen.dout_p0_val_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFF40)) 
    \deskew_enable_gen.dout_p0_val_i_4 
       (.I0(selected_data[25]),
        .I1(selected_data[24]),
        .I2(selected_data[26]),
        .I3(\deskew_enable_gen.dout_p0_val_i_10_n_0 ),
        .O(\deskew_enable_gen.dout_p0_val_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hF0F2)) 
    \deskew_enable_gen.dout_p0_val_i_6 
       (.I0(selected_data[22]),
        .I1(selected_data[21]),
        .I2(\deskew_enable_gen.dout_p0_val_i_15_n_0 ),
        .I3(selected_data[23]),
        .O(\deskew_enable_gen.dout_p0_val_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hEE00EEE0)) 
    \deskew_enable_gen.dout_p0_val_i_7 
       (.I0(\deskew_enable_gen.dout_p0_val_i_15_n_0 ),
        .I1(selected_data[20]),
        .I2(selected_data[18]),
        .I3(\deskew_enable_gen.dout_p0_val_i_16_n_0 ),
        .I4(selected_data[19]),
        .O(\deskew_enable_gen.dout_p0_val_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hF3F300A2)) 
    \deskew_enable_gen.dout_p0_val_i_8 
       (.I0(selected_data[16]),
        .I1(selected_data[15]),
        .I2(\deskew_enable_gen.dout_p0_val_i_17_n_0 ),
        .I3(selected_data[17]),
        .I4(\deskew_enable_gen.dout_p0_val_i_16_n_0 ),
        .O(\deskew_enable_gen.dout_p0_val_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h40404040404040FF)) 
    \deskew_enable_gen.dout_p0_val_i_9 
       (.I0(selected_data[13]),
        .I1(selected_data[12]),
        .I2(selected_data[14]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[6]),
        .I5(grp_count_mul[4]),
        .O(\deskew_enable_gen.dout_p0_val_i_9_n_0 ));
  FDRE \deskew_enable_gen.dout_p0_val_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(dout_p0_val0),
        .Q(dout_p0_val),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.dout_p0_val_reg_i_1 
       (.CI(\deskew_enable_gen.dout_p0_val_reg_i_2_n_0 ),
        .CO({\NLW_deskew_enable_gen.dout_p0_val_reg_i_1_CO_UNCONNECTED [3:2],dout_p0_val0,\deskew_enable_gen.dout_p0_val_reg_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.dout_p0_val_reg_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.dout_p0_val_i_3_n_0 ,\deskew_enable_gen.dout_p0_val_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.dout_p0_val_reg_i_2 
       (.CI(\deskew_enable_gen.dout_p0_val_reg_i_5_n_0 ),
        .CO({\deskew_enable_gen.dout_p0_val_reg_i_2_n_0 ,\deskew_enable_gen.dout_p0_val_reg_i_2_n_1 ,\deskew_enable_gen.dout_p0_val_reg_i_2_n_2 ,\deskew_enable_gen.dout_p0_val_reg_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.dout_p0_val_reg_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.dout_p0_val_i_6_n_0 ,\deskew_enable_gen.dout_p0_val_i_7_n_0 ,\deskew_enable_gen.dout_p0_val_i_8_n_0 ,\deskew_enable_gen.dout_p0_val_i_9_n_0 }));
  CARRY4 \deskew_enable_gen.dout_p0_val_reg_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.dout_p0_val_reg_i_5_n_0 ,\deskew_enable_gen.dout_p0_val_reg_i_5_n_1 ,\deskew_enable_gen.dout_p0_val_reg_i_5_n_2 ,\deskew_enable_gen.dout_p0_val_reg_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.dout_p0_val_reg_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.dout_p0_val_i_11_n_0 ,\deskew_enable_gen.dout_p0_val_i_12_n_0 ,\deskew_enable_gen.dout_p0_val_i_13_n_0 ,\deskew_enable_gen.dout_p0_val_i_14_n_0 }));
  LUT6 #(
    .INIT(64'h0777000007770777)) 
    \deskew_enable_gen.f0_val[0]_i_10 
       (.I0(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I1(\data_out_reg[29] [8]),
        .I2(\deskew_enable_gen.p3_val_reg[0]_2 ),
        .I3(\data_out_reg[29] [10]),
        .I4(unalign_data[10]),
        .I5(\deskew_enable_gen.p3_val_reg[0]_1 ),
        .O(\deskew_enable_gen.f0_val[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h7077000070777077)) 
    \deskew_enable_gen.f0_val[0]_i_11 
       (.I0(\data_out_reg[29] [6]),
        .I1(\deskew_enable_gen.p1_val_reg[0]_6 ),
        .I2(unalign_data[6]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_4 ),
        .I4(unalign_data[8]),
        .I5(\deskew_enable_gen.p1_val_reg[0]_1 ),
        .O(\deskew_enable_gen.f0_val[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0777000007770777)) 
    \deskew_enable_gen.f0_val[0]_i_12 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_7 ),
        .I1(\data_out_reg[29] [2]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_2 ),
        .I3(\data_out_reg[29] [4]),
        .I4(unalign_data[4]),
        .I5(\deskew_enable_gen.p1_val_reg[0]_8 ),
        .O(\deskew_enable_gen.f0_val[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20FFFFFF)) 
    \deskew_enable_gen.f0_val[0]_i_13 
       (.I0(unalign_data[0]),
        .I1(\data_out_reg[29] [0]),
        .I2(unalign_data[2]),
        .I3(\deskew_enable_gen.grp_p0_val_reg_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(\deskew_enable_gen.f0_val[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hDD0D0000DD0DDD0D)) 
    \deskew_enable_gen.f0_val[0]_i_3 
       (.I0(\data_out_reg[29] [26]),
        .I1(\deskew_enable_gen.data_flip_sel_reg[27]_0 ),
        .I2(\data_out_reg[29] [28]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[29]_0 ),
        .I4(unalign_data[28]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[28]_0 ),
        .O(\deskew_enable_gen.f0_val[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0EEE00000EEE0EEE)) 
    \deskew_enable_gen.f0_val[0]_i_4 
       (.I0(unalign_data[26]),
        .I1(\deskew_enable_gen.data_flip_sel_reg[26]_0 ),
        .I2(\deskew_enable_gen.data_flip_sel_reg[25]_0 ),
        .I3(\data_out_reg[29] [24]),
        .I4(unalign_data[24]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[24]_0 ),
        .O(\deskew_enable_gen.f0_val[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0777000007770777)) 
    \deskew_enable_gen.f0_val[0]_i_6 
       (.I0(\deskew_enable_gen.f0_val_reg[0]_0 ),
        .I1(\data_out_reg[29] [20]),
        .I2(\deskew_enable_gen.f0_val_reg[0]_1 ),
        .I3(\data_out_reg[29] [22]),
        .I4(unalign_data[22]),
        .I5(\deskew_enable_gen.f0_val_reg[0]_2 ),
        .O(\deskew_enable_gen.f0_val[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.f0_val[0]_i_7 
       (.I0(\deskew_enable_gen.f2_val[0]_i_16_n_0 ),
        .I1(unalign_data[18]),
        .I2(\deskew_enable_gen.f2_val[0]_i_17_n_0 ),
        .I3(\data_out_reg[29] [18]),
        .I4(\deskew_enable_gen.grp_p3_val_i_20_n_0 ),
        .I5(unalign_data[20]),
        .O(\deskew_enable_gen.f0_val[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0777000007770777)) 
    \deskew_enable_gen.f0_val[0]_i_8 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_5 ),
        .I1(\data_out_reg[29] [14]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_3 ),
        .I3(\data_out_reg[29] [16]),
        .I4(unalign_data[16]),
        .I5(\deskew_enable_gen.p1_val_reg[0]_0 ),
        .O(\deskew_enable_gen.f0_val[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD0DDD0000)) 
    \deskew_enable_gen.f0_val[0]_i_9 
       (.I0(\deskew_enable_gen.grp_p0_val_reg_1 ),
        .I1(unalign_data[12]),
        .I2(\deskew_enable_gen.grp_p0_val_reg_2 ),
        .I3(\data_out_reg[29] [12]),
        .I4(\deskew_enable_gen.grp_p0_val_reg_3 ),
        .I5(unalign_data[14]),
        .O(\deskew_enable_gen.f0_val[0]_i_9_n_0 ));
  FDRE \deskew_enable_gen.f0_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f0_val0),
        .Q(\deskew_enable_gen.f0_val_reg_n_0_[0] ),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.f0_val_reg[0]_i_1 
       (.CI(\deskew_enable_gen.f0_val_reg[0]_i_2_n_0 ),
        .CO({\NLW_deskew_enable_gen.f0_val_reg[0]_i_1_CO_UNCONNECTED [3:2],f0_val0,\deskew_enable_gen.f0_val_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f0_val_reg[0]_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.f0_val[0]_i_3_n_0 ,\deskew_enable_gen.f0_val[0]_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.f0_val_reg[0]_i_2 
       (.CI(\deskew_enable_gen.f0_val_reg[0]_i_5_n_0 ),
        .CO({\deskew_enable_gen.f0_val_reg[0]_i_2_n_0 ,\deskew_enable_gen.f0_val_reg[0]_i_2_n_1 ,\deskew_enable_gen.f0_val_reg[0]_i_2_n_2 ,\deskew_enable_gen.f0_val_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f0_val_reg[0]_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.f0_val[0]_i_6_n_0 ,\deskew_enable_gen.f0_val[0]_i_7_n_0 ,\deskew_enable_gen.f0_val[0]_i_8_n_0 ,\deskew_enable_gen.f0_val[0]_i_9_n_0 }));
  CARRY4 \deskew_enable_gen.f0_val_reg[0]_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.f0_val_reg[0]_i_5_n_0 ,\deskew_enable_gen.f0_val_reg[0]_i_5_n_1 ,\deskew_enable_gen.f0_val_reg[0]_i_5_n_2 ,\deskew_enable_gen.f0_val_reg[0]_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f0_val_reg[0]_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.f0_val[0]_i_10_n_0 ,\deskew_enable_gen.f0_val[0]_i_11_n_0 ,\deskew_enable_gen.f0_val[0]_i_12_n_0 ,\deskew_enable_gen.f0_val[0]_i_13_n_0 }));
  (* srl_bus_name = "inst/\slave_fpga_gen.axi_chip2chip_slave_phy_inst/slave_sio_phy.axi_chip2chip_phy_calib_inst/deskew_enable_gen.f0_val_reg " *) 
  (* srl_name = "inst/\slave_fpga_gen.axi_chip2chip_slave_phy_inst/slave_sio_phy.axi_chip2chip_phy_calib_inst/deskew_enable_gen.f0_val_reg[2]_srl2 " *) 
  SRL16E \deskew_enable_gen.f0_val_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk_ph_out),
        .D(\deskew_enable_gen.f0_val_reg_n_0_[0] ),
        .Q(\deskew_enable_gen.f0_val_reg[2]_srl2_n_0 ));
  FDRE \deskew_enable_gen.f0_val_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.f0_val_reg[2]_srl2_n_0 ),
        .Q(p_3_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0DDD00000DDD0DDD)) 
    \deskew_enable_gen.f1_val[0]_i_10 
       (.I0(\deskew_enable_gen.p3_val_reg[0]_1 ),
        .I1(unalign_data[10]),
        .I2(\deskew_enable_gen.p3_val_reg[0]_2 ),
        .I3(\data_out_reg[29] [10]),
        .I4(\data_out_reg[29] [8]),
        .I5(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .O(\deskew_enable_gen.f1_val[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.f1_val[0]_i_11 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_4 ),
        .I1(unalign_data[6]),
        .I2(\data_out_reg[29] [6]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_6 ),
        .I4(unalign_data[8]),
        .I5(\deskew_enable_gen.p1_val_reg[0]_1 ),
        .O(\deskew_enable_gen.f1_val[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.f1_val[0]_i_12 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_2 ),
        .I1(\data_out_reg[29] [4]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_7 ),
        .I3(\data_out_reg[29] [2]),
        .I4(unalign_data[4]),
        .I5(\deskew_enable_gen.p1_val_reg[0]_8 ),
        .O(\deskew_enable_gen.f1_val[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFF7FFF3FFF3FFF3F)) 
    \deskew_enable_gen.f1_val[0]_i_13 
       (.I0(unalign_data[0]),
        .I1(\deskew_enable_gen.grp_p0_val_reg_0 ),
        .I2(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\data_out_reg[29] [0]),
        .I5(unalign_data[2]),
        .O(\deskew_enable_gen.f1_val[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000EE0EEE0EEE0E)) 
    \deskew_enable_gen.f1_val[0]_i_3 
       (.I0(\deskew_enable_gen.data_flip_sel_reg[29]_0 ),
        .I1(\data_out_reg[29] [28]),
        .I2(\data_out_reg[29] [26]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[27]_0 ),
        .I4(unalign_data[28]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[28]_0 ),
        .O(\deskew_enable_gen.f1_val[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7707770777070000)) 
    \deskew_enable_gen.f1_val[0]_i_4 
       (.I0(\deskew_enable_gen.data_flip_sel_reg[24]_0 ),
        .I1(unalign_data[24]),
        .I2(\deskew_enable_gen.data_flip_sel_reg[25]_0 ),
        .I3(\data_out_reg[29] [24]),
        .I4(unalign_data[26]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[26]_0 ),
        .O(\deskew_enable_gen.f1_val[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.f1_val[0]_i_6 
       (.I0(\deskew_enable_gen.f0_val_reg[0]_0 ),
        .I1(\data_out_reg[29] [20]),
        .I2(\deskew_enable_gen.f0_val_reg[0]_1 ),
        .I3(\data_out_reg[29] [22]),
        .I4(\deskew_enable_gen.f0_val_reg[0]_2 ),
        .I5(unalign_data[22]),
        .O(\deskew_enable_gen.f1_val[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.f1_val[0]_i_7 
       (.I0(\deskew_enable_gen.f2_val[0]_i_16_n_0 ),
        .I1(unalign_data[18]),
        .I2(\deskew_enable_gen.f2_val[0]_i_17_n_0 ),
        .I3(\data_out_reg[29] [18]),
        .I4(unalign_data[20]),
        .I5(\deskew_enable_gen.grp_p3_val_i_20_n_0 ),
        .O(\deskew_enable_gen.f1_val[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.f1_val[0]_i_8 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_3 ),
        .I1(\data_out_reg[29] [16]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_5 ),
        .I3(\data_out_reg[29] [14]),
        .I4(unalign_data[16]),
        .I5(\deskew_enable_gen.p1_val_reg[0]_0 ),
        .O(\deskew_enable_gen.f1_val[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h7707770777070000)) 
    \deskew_enable_gen.f1_val[0]_i_9 
       (.I0(\deskew_enable_gen.grp_p0_val_reg_1 ),
        .I1(unalign_data[12]),
        .I2(\deskew_enable_gen.grp_p0_val_reg_2 ),
        .I3(\data_out_reg[29] [12]),
        .I4(unalign_data[14]),
        .I5(\deskew_enable_gen.grp_p0_val_reg_3 ),
        .O(\deskew_enable_gen.f1_val[0]_i_9_n_0 ));
  FDRE \deskew_enable_gen.f1_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f1_val0),
        .Q(\deskew_enable_gen.f1_val_reg_n_0_[0] ),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.f1_val_reg[0]_i_1 
       (.CI(\deskew_enable_gen.f1_val_reg[0]_i_2_n_0 ),
        .CO({\NLW_deskew_enable_gen.f1_val_reg[0]_i_1_CO_UNCONNECTED [3:2],f1_val0,\deskew_enable_gen.f1_val_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f1_val_reg[0]_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.f1_val[0]_i_3_n_0 ,\deskew_enable_gen.f1_val[0]_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.f1_val_reg[0]_i_2 
       (.CI(\deskew_enable_gen.f1_val_reg[0]_i_5_n_0 ),
        .CO({\deskew_enable_gen.f1_val_reg[0]_i_2_n_0 ,\deskew_enable_gen.f1_val_reg[0]_i_2_n_1 ,\deskew_enable_gen.f1_val_reg[0]_i_2_n_2 ,\deskew_enable_gen.f1_val_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f1_val_reg[0]_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.f1_val[0]_i_6_n_0 ,\deskew_enable_gen.f1_val[0]_i_7_n_0 ,\deskew_enable_gen.f1_val[0]_i_8_n_0 ,\deskew_enable_gen.f1_val[0]_i_9_n_0 }));
  CARRY4 \deskew_enable_gen.f1_val_reg[0]_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.f1_val_reg[0]_i_5_n_0 ,\deskew_enable_gen.f1_val_reg[0]_i_5_n_1 ,\deskew_enable_gen.f1_val_reg[0]_i_5_n_2 ,\deskew_enable_gen.f1_val_reg[0]_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f1_val_reg[0]_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.f1_val[0]_i_10_n_0 ,\deskew_enable_gen.f1_val[0]_i_11_n_0 ,\deskew_enable_gen.f1_val[0]_i_12_n_0 ,\deskew_enable_gen.f1_val[0]_i_13_n_0 }));
  FDRE \deskew_enable_gen.f1_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.f1_val_reg_n_0_[0] ),
        .Q(\deskew_enable_gen.f1_val_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \deskew_enable_gen.f1_val_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.f1_val_reg_n_0_[1] ),
        .Q(p_2_in5_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.f2_val[0]_i_10 
       (.I0(\deskew_enable_gen.p3_val_reg[0]_2 ),
        .I1(\data_out_reg[29] [10]),
        .I2(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I3(\data_out_reg[29] [8]),
        .I4(unalign_data[10]),
        .I5(\deskew_enable_gen.p3_val_reg[0]_1 ),
        .O(\deskew_enable_gen.f2_val[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.f2_val[0]_i_11 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_6 ),
        .I1(\data_out_reg[29] [6]),
        .I2(unalign_data[6]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_4 ),
        .I4(\deskew_enable_gen.p1_val_reg[0]_1 ),
        .I5(unalign_data[8]),
        .O(\deskew_enable_gen.f2_val[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h7077000070777077)) 
    \deskew_enable_gen.f2_val[0]_i_12 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_2 ),
        .I1(\data_out_reg[29] [4]),
        .I2(\data_out_reg[29] [2]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_7 ),
        .I4(unalign_data[4]),
        .I5(\deskew_enable_gen.p1_val_reg[0]_8 ),
        .O(\deskew_enable_gen.f2_val[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFF10FFFFFFFFFFFF)) 
    \deskew_enable_gen.f2_val[0]_i_13 
       (.I0(\data_out_reg[29] [0]),
        .I1(unalign_data[2]),
        .I2(unalign_data[0]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(\deskew_enable_gen.grp_p0_val_reg_0 ),
        .O(\deskew_enable_gen.f2_val[0]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'h00000008)) 
    \deskew_enable_gen.f2_val[0]_i_14 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.f0_val_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'h00000008)) 
    \deskew_enable_gen.f2_val[0]_i_15 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.f0_val_reg[0]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \deskew_enable_gen.f2_val[0]_i_16 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[5]),
        .O(\deskew_enable_gen.f2_val[0]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \deskew_enable_gen.f2_val[0]_i_17 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[3]),
        .I4(grp_count_mul[4]),
        .O(\deskew_enable_gen.f2_val[0]_i_17_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'h00000040)) 
    \deskew_enable_gen.f2_val[0]_i_18 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[3]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[6]),
        .O(\deskew_enable_gen.p1_val_reg[0]_5 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \deskew_enable_gen.f2_val[0]_i_19 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.p3_val_reg[0]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \deskew_enable_gen.f2_val[0]_i_20 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[3]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[6]),
        .O(\deskew_enable_gen.p3_val_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \deskew_enable_gen.f2_val[0]_i_21 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.p1_val_reg[0]_6 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \deskew_enable_gen.f2_val[0]_i_22 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.p1_val_reg[0]_4 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \deskew_enable_gen.f2_val[0]_i_23 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.p1_val_reg[0]_7 ));
  LUT6 #(
    .INIT(64'hDDD00000DDD0DDD0)) 
    \deskew_enable_gen.f2_val[0]_i_3 
       (.I0(\data_out_reg[29] [28]),
        .I1(\deskew_enable_gen.data_flip_sel_reg[29]_0 ),
        .I2(\data_out_reg[29] [26]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[27]_0 ),
        .I4(unalign_data[28]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[28]_0 ),
        .O(\deskew_enable_gen.f2_val[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7707000077077707)) 
    \deskew_enable_gen.f2_val[0]_i_4 
       (.I0(\deskew_enable_gen.data_flip_sel_reg[25]_0 ),
        .I1(\data_out_reg[29] [24]),
        .I2(unalign_data[26]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[26]_0 ),
        .I4(unalign_data[24]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[24]_0 ),
        .O(\deskew_enable_gen.f2_val[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.f2_val[0]_i_6 
       (.I0(\deskew_enable_gen.f0_val_reg[0]_1 ),
        .I1(\data_out_reg[29] [22]),
        .I2(\deskew_enable_gen.f0_val_reg[0]_0 ),
        .I3(\data_out_reg[29] [20]),
        .I4(unalign_data[22]),
        .I5(\deskew_enable_gen.f0_val_reg[0]_2 ),
        .O(\deskew_enable_gen.f2_val[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h7077000070777077)) 
    \deskew_enable_gen.f2_val[0]_i_7 
       (.I0(unalign_data[18]),
        .I1(\deskew_enable_gen.f2_val[0]_i_16_n_0 ),
        .I2(\data_out_reg[29] [18]),
        .I3(\deskew_enable_gen.f2_val[0]_i_17_n_0 ),
        .I4(unalign_data[20]),
        .I5(\deskew_enable_gen.grp_p3_val_i_20_n_0 ),
        .O(\deskew_enable_gen.f2_val[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.f2_val[0]_i_8 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_5 ),
        .I1(\data_out_reg[29] [14]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_3 ),
        .I3(\data_out_reg[29] [16]),
        .I4(\deskew_enable_gen.p1_val_reg[0]_0 ),
        .I5(unalign_data[16]),
        .O(\deskew_enable_gen.f2_val[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h7707000077077707)) 
    \deskew_enable_gen.f2_val[0]_i_9 
       (.I0(\deskew_enable_gen.grp_p0_val_reg_2 ),
        .I1(\data_out_reg[29] [12]),
        .I2(unalign_data[14]),
        .I3(\deskew_enable_gen.grp_p0_val_reg_3 ),
        .I4(unalign_data[12]),
        .I5(\deskew_enable_gen.grp_p0_val_reg_1 ),
        .O(\deskew_enable_gen.f2_val[0]_i_9_n_0 ));
  FDRE \deskew_enable_gen.f2_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f2_val0),
        .Q(\deskew_enable_gen.f2_val_reg_n_0_[0] ),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.f2_val_reg[0]_i_1 
       (.CI(\deskew_enable_gen.f2_val_reg[0]_i_2_n_0 ),
        .CO({\NLW_deskew_enable_gen.f2_val_reg[0]_i_1_CO_UNCONNECTED [3:2],f2_val0,\deskew_enable_gen.f2_val_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f2_val_reg[0]_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.f2_val[0]_i_3_n_0 ,\deskew_enable_gen.f2_val[0]_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.f2_val_reg[0]_i_2 
       (.CI(\deskew_enable_gen.f2_val_reg[0]_i_5_n_0 ),
        .CO({\deskew_enable_gen.f2_val_reg[0]_i_2_n_0 ,\deskew_enable_gen.f2_val_reg[0]_i_2_n_1 ,\deskew_enable_gen.f2_val_reg[0]_i_2_n_2 ,\deskew_enable_gen.f2_val_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f2_val_reg[0]_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.f2_val[0]_i_6_n_0 ,\deskew_enable_gen.f2_val[0]_i_7_n_0 ,\deskew_enable_gen.f2_val[0]_i_8_n_0 ,\deskew_enable_gen.f2_val[0]_i_9_n_0 }));
  CARRY4 \deskew_enable_gen.f2_val_reg[0]_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.f2_val_reg[0]_i_5_n_0 ,\deskew_enable_gen.f2_val_reg[0]_i_5_n_1 ,\deskew_enable_gen.f2_val_reg[0]_i_5_n_2 ,\deskew_enable_gen.f2_val_reg[0]_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f2_val_reg[0]_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.f2_val[0]_i_10_n_0 ,\deskew_enable_gen.f2_val[0]_i_11_n_0 ,\deskew_enable_gen.f2_val[0]_i_12_n_0 ,\deskew_enable_gen.f2_val[0]_i_13_n_0 }));
  FDRE \deskew_enable_gen.f2_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.f2_val_reg_n_0_[0] ),
        .Q(p_0_in4_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0DDD00000DDD0DDD)) 
    \deskew_enable_gen.f3_val[0]_i_10 
       (.I0(\deskew_enable_gen.p3_val_reg[0]_1 ),
        .I1(unalign_data[10]),
        .I2(\deskew_enable_gen.p3_val_reg[0]_2 ),
        .I3(\data_out_reg[29] [10]),
        .I4(\data_out_reg[29] [8]),
        .I5(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .O(\deskew_enable_gen.f3_val[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h7077000070777077)) 
    \deskew_enable_gen.f3_val[0]_i_11 
       (.I0(\data_out_reg[29] [6]),
        .I1(\deskew_enable_gen.p1_val_reg[0]_6 ),
        .I2(unalign_data[6]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_4 ),
        .I4(unalign_data[8]),
        .I5(\deskew_enable_gen.p1_val_reg[0]_1 ),
        .O(\deskew_enable_gen.f3_val[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.f3_val[0]_i_12 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_2 ),
        .I1(\data_out_reg[29] [4]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_7 ),
        .I3(\data_out_reg[29] [2]),
        .I4(\deskew_enable_gen.p1_val_reg[0]_8 ),
        .I5(unalign_data[4]),
        .O(\deskew_enable_gen.f3_val[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFBFFF3FFF3FFF3F)) 
    \deskew_enable_gen.f3_val[0]_i_13 
       (.I0(unalign_data[0]),
        .I1(\deskew_enable_gen.grp_p0_val_reg_0 ),
        .I2(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\data_out_reg[29] [0]),
        .I5(unalign_data[2]),
        .O(\deskew_enable_gen.f3_val[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hEE0EEE0E0000EE0E)) 
    \deskew_enable_gen.f3_val[0]_i_3 
       (.I0(\deskew_enable_gen.data_flip_sel_reg[29]_0 ),
        .I1(\data_out_reg[29] [28]),
        .I2(\data_out_reg[29] [26]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[27]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[28]_0 ),
        .I5(unalign_data[28]),
        .O(\deskew_enable_gen.f3_val[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBB0BBB0BBB0B0000)) 
    \deskew_enable_gen.f3_val[0]_i_4 
       (.I0(unalign_data[24]),
        .I1(\deskew_enable_gen.data_flip_sel_reg[24]_0 ),
        .I2(\deskew_enable_gen.data_flip_sel_reg[25]_0 ),
        .I3(\data_out_reg[29] [24]),
        .I4(unalign_data[26]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[26]_0 ),
        .O(\deskew_enable_gen.f3_val[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.f3_val[0]_i_6 
       (.I0(\deskew_enable_gen.f0_val_reg[0]_0 ),
        .I1(\data_out_reg[29] [20]),
        .I2(\deskew_enable_gen.f0_val_reg[0]_1 ),
        .I3(\data_out_reg[29] [22]),
        .I4(\deskew_enable_gen.f0_val_reg[0]_2 ),
        .I5(unalign_data[22]),
        .O(\deskew_enable_gen.f3_val[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.f3_val[0]_i_7 
       (.I0(\deskew_enable_gen.f2_val[0]_i_16_n_0 ),
        .I1(unalign_data[18]),
        .I2(\deskew_enable_gen.f2_val[0]_i_17_n_0 ),
        .I3(\data_out_reg[29] [18]),
        .I4(\deskew_enable_gen.grp_p3_val_i_20_n_0 ),
        .I5(unalign_data[20]),
        .O(\deskew_enable_gen.f3_val[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.f3_val[0]_i_8 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_3 ),
        .I1(\data_out_reg[29] [16]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_5 ),
        .I3(\data_out_reg[29] [14]),
        .I4(\deskew_enable_gen.p1_val_reg[0]_0 ),
        .I5(unalign_data[16]),
        .O(\deskew_enable_gen.f3_val[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBB0BBB0BBB0B0000)) 
    \deskew_enable_gen.f3_val[0]_i_9 
       (.I0(unalign_data[12]),
        .I1(\deskew_enable_gen.grp_p0_val_reg_1 ),
        .I2(\deskew_enable_gen.grp_p0_val_reg_2 ),
        .I3(\data_out_reg[29] [12]),
        .I4(unalign_data[14]),
        .I5(\deskew_enable_gen.grp_p0_val_reg_3 ),
        .O(\deskew_enable_gen.f3_val[0]_i_9_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.f3_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.f3_val_reg0 ),
        .Q(f3_val[0]),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.f3_val_reg[0]_i_1 
       (.CI(\deskew_enable_gen.f3_val_reg[0]_i_2_n_0 ),
        .CO({\NLW_deskew_enable_gen.f3_val_reg[0]_i_1_CO_UNCONNECTED [3:2],\deskew_enable_gen.f3_val_reg0 ,\deskew_enable_gen.f3_val_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f3_val_reg[0]_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.f3_val[0]_i_3_n_0 ,\deskew_enable_gen.f3_val[0]_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.f3_val_reg[0]_i_2 
       (.CI(\deskew_enable_gen.f3_val_reg[0]_i_5_n_0 ),
        .CO({\deskew_enable_gen.f3_val_reg[0]_i_2_n_0 ,\deskew_enable_gen.f3_val_reg[0]_i_2_n_1 ,\deskew_enable_gen.f3_val_reg[0]_i_2_n_2 ,\deskew_enable_gen.f3_val_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f3_val_reg[0]_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.f3_val[0]_i_6_n_0 ,\deskew_enable_gen.f3_val[0]_i_7_n_0 ,\deskew_enable_gen.f3_val[0]_i_8_n_0 ,\deskew_enable_gen.f3_val[0]_i_9_n_0 }));
  CARRY4 \deskew_enable_gen.f3_val_reg[0]_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.f3_val_reg[0]_i_5_n_0 ,\deskew_enable_gen.f3_val_reg[0]_i_5_n_1 ,\deskew_enable_gen.f3_val_reg[0]_i_5_n_2 ,\deskew_enable_gen.f3_val_reg[0]_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f3_val_reg[0]_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.f3_val[0]_i_10_n_0 ,\deskew_enable_gen.f3_val[0]_i_11_n_0 ,\deskew_enable_gen.f3_val[0]_i_12_n_0 ,\deskew_enable_gen.f3_val[0]_i_13_n_0 }));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.f3_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f3_val[0]),
        .Q(f3_val[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.f3_val_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f3_val[1]),
        .Q(f3_val[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.f3_val_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f3_val[2]),
        .Q(f3_val[3]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2FFFFFFF20000000)) 
    \deskew_enable_gen.flip_type_i_1 
       (.I0(\deskew_enable_gen.flip_type_i_2_n_0 ),
        .I1(\deskew_enable_gen.flip_type_i_3_n_0 ),
        .I2(\deskew_enable_gen.flip_type_i_4_n_0 ),
        .I3(\deskew_enable_gen.flip_type_i_5_n_0 ),
        .I4(\deskew_enable_gen.flip_type_i_6_n_0 ),
        .I5(flip_type),
        .O(\deskew_enable_gen.flip_type_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \deskew_enable_gen.flip_type_i_2 
       (.I0(p_2_in5_in),
        .I1(f3_val[0]),
        .I2(p_0_in4_in),
        .I3(p_3_in),
        .O(\deskew_enable_gen.flip_type_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \deskew_enable_gen.flip_type_i_3 
       (.I0(p_2_in8_in),
        .I1(p3_val[0]),
        .I2(p_0_in7_in),
        .I3(p_3_in9_in),
        .O(\deskew_enable_gen.flip_type_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \deskew_enable_gen.flip_type_i_4 
       (.I0(state[11]),
        .I1(state[10]),
        .I2(state[9]),
        .I3(state[0]),
        .I4(state[7]),
        .O(\deskew_enable_gen.flip_type_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \deskew_enable_gen.flip_type_i_5 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[3]),
        .I3(state[8]),
        .O(\deskew_enable_gen.flip_type_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \deskew_enable_gen.flip_type_i_6 
       (.I0(state[5]),
        .I1(state[4]),
        .I2(state[6]),
        .O(\deskew_enable_gen.flip_type_i_6_n_0 ));
  FDRE \deskew_enable_gen.flip_type_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.flip_type_i_1_n_0 ),
        .Q(flip_type),
        .R(reset_in));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \deskew_enable_gen.grp_count[0]_i_1 
       (.I0(state[10]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(\deskew_enable_gen.grp_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \deskew_enable_gen.grp_count[1]_i_1 
       (.I0(state[10]),
        .I1(grp_count_mul[3]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(\deskew_enable_gen.grp_count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \deskew_enable_gen.grp_count[2]_i_1 
       (.I0(state[10]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[4]),
        .O(\deskew_enable_gen.grp_count[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'h28888888)) 
    \deskew_enable_gen.grp_count[3]_i_1 
       (.I0(state[10]),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.grp_count[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000055D50080)) 
    \deskew_enable_gen.grp_count[4]_i_1 
       (.I0(state[7]),
        .I1(\deskew_enable_gen.state[10]_i_3_n_0 ),
        .I2(\deskew_enable_gen.state[10]_i_4_n_0 ),
        .I3(state[10]),
        .I4(\deskew_enable_gen.grp_count[4]_i_3_n_0 ),
        .I5(\deskew_enable_gen.grp_count[4]_i_4_n_0 ),
        .O(next_grp_count));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \deskew_enable_gen.grp_count[4]_i_2 
       (.I0(state[10]),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[3]),
        .I5(grp_count_mul[6]),
        .O(\deskew_enable_gen.grp_count[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT5 #(
    .INIT(32'h00080880)) 
    \deskew_enable_gen.grp_count[4]_i_3 
       (.I0(dout_p0_val),
        .I1(state[10]),
        .I2(grp_p1_val),
        .I3(grp_p0_val),
        .I4(grp_p3_val),
        .O(\deskew_enable_gen.grp_count[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT5 #(
    .INIT(32'hFFFDFFFF)) 
    \deskew_enable_gen.grp_count[4]_i_4 
       (.I0(\deskew_enable_gen.flip_type_i_6_n_0 ),
        .I1(state[11]),
        .I2(state[9]),
        .I3(state[8]),
        .I4(\deskew_enable_gen.step_count[2]_i_9_n_0 ),
        .O(\deskew_enable_gen.grp_count[4]_i_4_n_0 ));
  FDRE \deskew_enable_gen.grp_count_reg[0] 
       (.C(clk_ph_out),
        .CE(next_grp_count),
        .D(\deskew_enable_gen.grp_count[0]_i_1_n_0 ),
        .Q(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .R(reset_in));
  FDRE \deskew_enable_gen.grp_count_reg[1] 
       (.C(clk_ph_out),
        .CE(next_grp_count),
        .D(\deskew_enable_gen.grp_count[1]_i_1_n_0 ),
        .Q(grp_count_mul[3]),
        .R(reset_in));
  FDRE \deskew_enable_gen.grp_count_reg[2] 
       (.C(clk_ph_out),
        .CE(next_grp_count),
        .D(\deskew_enable_gen.grp_count[2]_i_1_n_0 ),
        .Q(grp_count_mul[4]),
        .R(reset_in));
  FDRE \deskew_enable_gen.grp_count_reg[3] 
       (.C(clk_ph_out),
        .CE(next_grp_count),
        .D(\deskew_enable_gen.grp_count[3]_i_1_n_0 ),
        .Q(grp_count_mul[5]),
        .R(reset_in));
  FDRE \deskew_enable_gen.grp_count_reg[4] 
       (.C(clk_ph_out),
        .CE(next_grp_count),
        .D(\deskew_enable_gen.grp_count[4]_i_2_n_0 ),
        .Q(grp_count_mul[6]),
        .R(reset_in));
  LUT5 #(
    .INIT(32'hC0800080)) 
    \deskew_enable_gen.grp_flip_i_1 
       (.I0(min_flip_0),
        .I1(\deskew_enable_gen.grp_flip_i_2_n_0 ),
        .I2(\deskew_enable_gen.grp_flip_i_3_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[4]_i_8_n_0 ),
        .I4(min_flip_1),
        .O(next_grp_flip));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \deskew_enable_gen.grp_flip_i_2 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[2]),
        .I3(state[4]),
        .O(\deskew_enable_gen.grp_flip_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \deskew_enable_gen.grp_flip_i_3 
       (.I0(state[7]),
        .I1(state[0]),
        .I2(\deskew_enable_gen.grp_flip_i_4_n_0 ),
        .I3(state[6]),
        .I4(state[5]),
        .I5(state[8]),
        .O(\deskew_enable_gen.grp_flip_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \deskew_enable_gen.grp_flip_i_4 
       (.I0(state[9]),
        .I1(state[10]),
        .I2(state[11]),
        .O(\deskew_enable_gen.grp_flip_i_4_n_0 ));
  FDRE \deskew_enable_gen.grp_flip_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(next_grp_flip),
        .Q(grp_flip),
        .R(reset_in));
  LUT4 #(
    .INIT(16'h0007)) 
    \deskew_enable_gen.grp_p0_val_i_10 
       (.I0(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I1(selected_data[9]),
        .I2(masked_dout[11]),
        .I3(\deskew_enable_gen.grp_p3_val_i_27_n_0 ),
        .O(\deskew_enable_gen.grp_p0_val_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h4044)) 
    \deskew_enable_gen.grp_p0_val_i_11 
       (.I0(masked_dout[7]),
        .I1(\deskew_enable_gen.grp_p3_val_i_28_n_0 ),
        .I2(selected_data[8]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_1 ),
        .O(\deskew_enable_gen.grp_p0_val_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h15001515)) 
    \deskew_enable_gen.grp_p0_val_i_12 
       (.I0(masked_dout[3]),
        .I1(selected_data[5]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_2 ),
        .I3(selected_data[4]),
        .I4(\deskew_enable_gen.p1_val_reg[0]_8 ),
        .O(\deskew_enable_gen.grp_p0_val_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFF20FFFFFFFFFFFF)) 
    \deskew_enable_gen.grp_p0_val_i_13 
       (.I0(selected_data[2]),
        .I1(selected_data[1]),
        .I2(selected_data[0]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(\deskew_enable_gen.grp_p0_val_reg_0 ),
        .O(\deskew_enable_gen.grp_p0_val_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'hFFFBFFFF)) 
    \deskew_enable_gen.grp_p0_val_i_14 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.grp_p0_val_reg_3 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'h00040000)) 
    \deskew_enable_gen.grp_p0_val_i_15 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.grp_p0_val_reg_2 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    \deskew_enable_gen.grp_p0_val_i_16 
       (.I0(grp_count_mul[5]),
        .I1(grp_count_mul[6]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.grp_p0_val_reg_1 ));
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.grp_p0_val_i_17 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .O(\deskew_enable_gen.grp_p0_val_reg_0 ));
  LUT5 #(
    .INIT(32'h51005151)) 
    \deskew_enable_gen.grp_p0_val_i_3 
       (.I0(masked_dout[27]),
        .I1(selected_data[29]),
        .I2(\deskew_enable_gen.data_flip_sel_reg[29]_0 ),
        .I3(selected_data[28]),
        .I4(\deskew_enable_gen.data_flip_sel_reg[28]_0 ),
        .O(\deskew_enable_gen.grp_p0_val_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7770000077707770)) 
    \deskew_enable_gen.grp_p0_val_i_4 
       (.I0(\deskew_enable_gen.data_flip_sel_reg[25]_0 ),
        .I1(selected_data[25]),
        .I2(\deskew_enable_gen.data_flip_sel_reg[26]_0 ),
        .I3(selected_data[26]),
        .I4(selected_data[24]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[24]_0 ),
        .O(\deskew_enable_gen.grp_p0_val_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0007)) 
    \deskew_enable_gen.grp_p0_val_i_6 
       (.I0(selected_data[21]),
        .I1(\deskew_enable_gen.f0_val_reg[0]_0 ),
        .I2(masked_dout[23]),
        .I3(\deskew_enable_gen.grp_p3_val_i_17_n_0 ),
        .O(\deskew_enable_gen.grp_p0_val_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2202)) 
    \deskew_enable_gen.grp_p0_val_i_7 
       (.I0(\deskew_enable_gen.grp_p3_val_i_18_n_0 ),
        .I1(masked_dout[19]),
        .I2(\deskew_enable_gen.grp_p3_val_i_20_n_0 ),
        .I3(selected_data[20]),
        .O(\deskew_enable_gen.grp_p0_val_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h15001515)) 
    \deskew_enable_gen.grp_p0_val_i_8 
       (.I0(masked_dout[15]),
        .I1(selected_data[17]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_3 ),
        .I3(selected_data[16]),
        .I4(\deskew_enable_gen.p1_val_reg[0]_0 ),
        .O(\deskew_enable_gen.grp_p0_val_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0EEE0EEE00000EEE)) 
    \deskew_enable_gen.grp_p0_val_i_9 
       (.I0(selected_data[14]),
        .I1(\deskew_enable_gen.grp_p0_val_reg_3 ),
        .I2(\deskew_enable_gen.grp_p0_val_reg_2 ),
        .I3(selected_data[13]),
        .I4(\deskew_enable_gen.grp_p0_val_reg_1 ),
        .I5(selected_data[12]),
        .O(\deskew_enable_gen.grp_p0_val_i_9_n_0 ));
  FDRE \deskew_enable_gen.grp_p0_val_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(grp_p0_val0),
        .Q(grp_p0_val),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.grp_p0_val_reg_i_1 
       (.CI(\deskew_enable_gen.grp_p0_val_reg_i_2_n_0 ),
        .CO({\NLW_deskew_enable_gen.grp_p0_val_reg_i_1_CO_UNCONNECTED [3:2],grp_p0_val0,\deskew_enable_gen.grp_p0_val_reg_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p0_val_reg_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.grp_p0_val_i_3_n_0 ,\deskew_enable_gen.grp_p0_val_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.grp_p0_val_reg_i_2 
       (.CI(\deskew_enable_gen.grp_p0_val_reg_i_5_n_0 ),
        .CO({\deskew_enable_gen.grp_p0_val_reg_i_2_n_0 ,\deskew_enable_gen.grp_p0_val_reg_i_2_n_1 ,\deskew_enable_gen.grp_p0_val_reg_i_2_n_2 ,\deskew_enable_gen.grp_p0_val_reg_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p0_val_reg_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p0_val_i_6_n_0 ,\deskew_enable_gen.grp_p0_val_i_7_n_0 ,\deskew_enable_gen.grp_p0_val_i_8_n_0 ,\deskew_enable_gen.grp_p0_val_i_9_n_0 }));
  CARRY4 \deskew_enable_gen.grp_p0_val_reg_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.grp_p0_val_reg_i_5_n_0 ,\deskew_enable_gen.grp_p0_val_reg_i_5_n_1 ,\deskew_enable_gen.grp_p0_val_reg_i_5_n_2 ,\deskew_enable_gen.grp_p0_val_reg_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p0_val_reg_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p0_val_i_10_n_0 ,\deskew_enable_gen.grp_p0_val_i_11_n_0 ,\deskew_enable_gen.grp_p0_val_i_12_n_0 ,\deskew_enable_gen.grp_p0_val_i_13_n_0 }));
  LUT4 #(
    .INIT(16'h000D)) 
    \deskew_enable_gen.grp_p1_val_i_10 
       (.I0(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I1(selected_data[9]),
        .I2(masked_dout[11]),
        .I3(\deskew_enable_gen.grp_p3_val_i_27_n_0 ),
        .O(\deskew_enable_gen.grp_p1_val_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h0222)) 
    \deskew_enable_gen.grp_p1_val_i_11 
       (.I0(\deskew_enable_gen.grp_p3_val_i_28_n_0 ),
        .I1(masked_dout[7]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_1 ),
        .I3(selected_data[8]),
        .O(\deskew_enable_gen.grp_p1_val_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h000D0D0D)) 
    \deskew_enable_gen.grp_p1_val_i_12 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_2 ),
        .I1(selected_data[5]),
        .I2(masked_dout[3]),
        .I3(selected_data[4]),
        .I4(\deskew_enable_gen.p1_val_reg[0]_8 ),
        .O(\deskew_enable_gen.grp_p1_val_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAA8AAAAAAAAA)) 
    \deskew_enable_gen.grp_p1_val_i_13 
       (.I0(\deskew_enable_gen.grp_p3_val_i_34_n_0 ),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(selected_data[0]),
        .O(\deskew_enable_gen.grp_p1_val_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h000E0E0E)) 
    \deskew_enable_gen.grp_p1_val_i_3 
       (.I0(selected_data[29]),
        .I1(\deskew_enable_gen.data_flip_sel_reg[29]_0 ),
        .I2(masked_dout[27]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[28]_0 ),
        .I4(selected_data[28]),
        .O(\deskew_enable_gen.grp_p1_val_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000E0EEE0EEE0EE)) 
    \deskew_enable_gen.grp_p1_val_i_4 
       (.I0(selected_data[26]),
        .I1(\deskew_enable_gen.data_flip_sel_reg[26]_0 ),
        .I2(selected_data[25]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[25]_0 ),
        .I4(selected_data[24]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[24]_0 ),
        .O(\deskew_enable_gen.grp_p1_val_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h000D)) 
    \deskew_enable_gen.grp_p1_val_i_6 
       (.I0(\deskew_enable_gen.f0_val_reg[0]_0 ),
        .I1(selected_data[21]),
        .I2(masked_dout[23]),
        .I3(\deskew_enable_gen.grp_p3_val_i_17_n_0 ),
        .O(\deskew_enable_gen.grp_p1_val_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0222)) 
    \deskew_enable_gen.grp_p1_val_i_7 
       (.I0(\deskew_enable_gen.grp_p3_val_i_18_n_0 ),
        .I1(masked_dout[19]),
        .I2(selected_data[20]),
        .I3(\deskew_enable_gen.grp_p3_val_i_20_n_0 ),
        .O(\deskew_enable_gen.grp_p1_val_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h000D0D0D)) 
    \deskew_enable_gen.grp_p1_val_i_8 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_3 ),
        .I1(selected_data[17]),
        .I2(masked_dout[15]),
        .I3(selected_data[16]),
        .I4(\deskew_enable_gen.p1_val_reg[0]_0 ),
        .O(\deskew_enable_gen.grp_p1_val_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAA2AAAAAAAAAAAAA)) 
    \deskew_enable_gen.grp_p1_val_i_9 
       (.I0(\deskew_enable_gen.grp_p3_val_i_24_n_0 ),
        .I1(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .I5(selected_data[12]),
        .O(\deskew_enable_gen.grp_p1_val_i_9_n_0 ));
  FDRE \deskew_enable_gen.grp_p1_val_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(grp_p1_val0),
        .Q(grp_p1_val),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.grp_p1_val_reg_i_1 
       (.CI(\deskew_enable_gen.grp_p1_val_reg_i_2_n_0 ),
        .CO({\NLW_deskew_enable_gen.grp_p1_val_reg_i_1_CO_UNCONNECTED [3:2],grp_p1_val0,\deskew_enable_gen.grp_p1_val_reg_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p1_val_reg_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.grp_p1_val_i_3_n_0 ,\deskew_enable_gen.grp_p1_val_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.grp_p1_val_reg_i_2 
       (.CI(\deskew_enable_gen.grp_p1_val_reg_i_5_n_0 ),
        .CO({\deskew_enable_gen.grp_p1_val_reg_i_2_n_0 ,\deskew_enable_gen.grp_p1_val_reg_i_2_n_1 ,\deskew_enable_gen.grp_p1_val_reg_i_2_n_2 ,\deskew_enable_gen.grp_p1_val_reg_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p1_val_reg_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p1_val_i_6_n_0 ,\deskew_enable_gen.grp_p1_val_i_7_n_0 ,\deskew_enable_gen.grp_p1_val_i_8_n_0 ,\deskew_enable_gen.grp_p1_val_i_9_n_0 }));
  CARRY4 \deskew_enable_gen.grp_p1_val_reg_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.grp_p1_val_reg_i_5_n_0 ,\deskew_enable_gen.grp_p1_val_reg_i_5_n_1 ,\deskew_enable_gen.grp_p1_val_reg_i_5_n_2 ,\deskew_enable_gen.grp_p1_val_reg_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p1_val_reg_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p1_val_i_10_n_0 ,\deskew_enable_gen.grp_p1_val_i_11_n_0 ,\deskew_enable_gen.grp_p1_val_i_12_n_0 ,\deskew_enable_gen.grp_p1_val_i_13_n_0 }));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \deskew_enable_gen.grp_p3_val_i_10 
       (.I0(selected_data[27]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(grp_count_mul[3]),
        .I5(grp_count_mul[4]),
        .O(masked_dout[27]));
  LUT4 #(
    .INIT(16'h000D)) 
    \deskew_enable_gen.grp_p3_val_i_11 
       (.I0(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I1(selected_data[9]),
        .I2(masked_dout[11]),
        .I3(\deskew_enable_gen.grp_p3_val_i_27_n_0 ),
        .O(\deskew_enable_gen.grp_p3_val_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h2202)) 
    \deskew_enable_gen.grp_p3_val_i_12 
       (.I0(\deskew_enable_gen.grp_p3_val_i_28_n_0 ),
        .I1(masked_dout[7]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_1 ),
        .I3(selected_data[8]),
        .O(\deskew_enable_gen.grp_p3_val_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h0D0D000D)) 
    \deskew_enable_gen.grp_p3_val_i_13 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_2 ),
        .I1(selected_data[5]),
        .I2(masked_dout[3]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_8 ),
        .I4(selected_data[4]),
        .O(\deskew_enable_gen.grp_p3_val_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \deskew_enable_gen.grp_p3_val_i_14 
       (.I0(\deskew_enable_gen.grp_p3_val_i_34_n_0 ),
        .I1(selected_data[0]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I4(grp_count_mul[4]),
        .I5(grp_count_mul[3]),
        .O(\deskew_enable_gen.grp_p3_val_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h00000008)) 
    \deskew_enable_gen.grp_p3_val_i_15 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.f0_val_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \deskew_enable_gen.grp_p3_val_i_16 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[5]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[4]),
        .I5(selected_data[23]),
        .O(masked_dout[23]));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \deskew_enable_gen.grp_p3_val_i_17 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[5]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[4]),
        .I5(selected_data[22]),
        .O(\deskew_enable_gen.grp_p3_val_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \deskew_enable_gen.grp_p3_val_i_18 
       (.I0(selected_data[18]),
        .I1(grp_count_mul[5]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[3]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(grp_count_mul[4]),
        .O(\deskew_enable_gen.grp_p3_val_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \deskew_enable_gen.grp_p3_val_i_19 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(selected_data[19]),
        .O(masked_dout[19]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    \deskew_enable_gen.grp_p3_val_i_20 
       (.I0(grp_count_mul[5]),
        .I1(grp_count_mul[6]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[3]),
        .I4(grp_count_mul[4]),
        .O(\deskew_enable_gen.grp_p3_val_i_20_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \deskew_enable_gen.grp_p3_val_i_21 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(\deskew_enable_gen.p1_val_reg[0]_3 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \deskew_enable_gen.grp_p3_val_i_22 
       (.I0(grp_count_mul[6]),
        .I1(grp_count_mul[5]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[3]),
        .I4(grp_count_mul[4]),
        .I5(selected_data[15]),
        .O(masked_dout[15]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \deskew_enable_gen.grp_p3_val_i_23 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .O(\deskew_enable_gen.p1_val_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hF8FFFFFFFFFFFFFF)) 
    \deskew_enable_gen.grp_p3_val_i_24 
       (.I0(selected_data[14]),
        .I1(selected_data[13]),
        .I2(grp_count_mul[4]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I5(grp_count_mul[3]),
        .O(\deskew_enable_gen.grp_p3_val_i_24_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \deskew_enable_gen.grp_p3_val_i_25 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[5]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[4]),
        .O(\deskew_enable_gen.p3_val_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \deskew_enable_gen.grp_p3_val_i_26 
       (.I0(grp_count_mul[3]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[4]),
        .I5(selected_data[11]),
        .O(masked_dout[11]));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \deskew_enable_gen.grp_p3_val_i_27 
       (.I0(grp_count_mul[6]),
        .I1(grp_count_mul[5]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[3]),
        .I4(grp_count_mul[4]),
        .I5(selected_data[10]),
        .O(\deskew_enable_gen.grp_p3_val_i_27_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \deskew_enable_gen.grp_p3_val_i_28 
       (.I0(selected_data[6]),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(grp_count_mul[4]),
        .O(\deskew_enable_gen.grp_p3_val_i_28_n_0 ));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \deskew_enable_gen.grp_p3_val_i_29 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[5]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[4]),
        .I5(selected_data[7]),
        .O(masked_dout[7]));
  LUT5 #(
    .INIT(32'h0E0E000E)) 
    \deskew_enable_gen.grp_p3_val_i_3 
       (.I0(selected_data[29]),
        .I1(\deskew_enable_gen.data_flip_sel_reg[29]_0 ),
        .I2(masked_dout[27]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[28]_0 ),
        .I4(selected_data[28]),
        .O(\deskew_enable_gen.grp_p3_val_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \deskew_enable_gen.grp_p3_val_i_30 
       (.I0(grp_count_mul[4]),
        .I1(grp_count_mul[6]),
        .I2(grp_count_mul[5]),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.p1_val_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \deskew_enable_gen.grp_p3_val_i_31 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.p1_val_reg[0]_2 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \deskew_enable_gen.grp_p3_val_i_32 
       (.I0(grp_count_mul[3]),
        .I1(grp_count_mul[4]),
        .I2(grp_count_mul[5]),
        .I3(grp_count_mul[6]),
        .I4(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I5(selected_data[3]),
        .O(masked_dout[3]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'h00000010)) 
    \deskew_enable_gen.grp_p3_val_i_33 
       (.I0(grp_count_mul[5]),
        .I1(grp_count_mul[6]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(grp_count_mul[4]),
        .I4(grp_count_mul[3]),
        .O(\deskew_enable_gen.p1_val_reg[0]_8 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF8FF)) 
    \deskew_enable_gen.grp_p3_val_i_34 
       (.I0(selected_data[2]),
        .I1(selected_data[1]),
        .I2(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I3(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I4(grp_count_mul[4]),
        .I5(grp_count_mul[3]),
        .O(\deskew_enable_gen.grp_p3_val_i_34_n_0 ));
  LUT6 #(
    .INIT(64'hE0EE0000E0EEE0EE)) 
    \deskew_enable_gen.grp_p3_val_i_4 
       (.I0(selected_data[26]),
        .I1(\deskew_enable_gen.data_flip_sel_reg[26]_0 ),
        .I2(selected_data[25]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[25]_0 ),
        .I4(selected_data[24]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[24]_0 ),
        .O(\deskew_enable_gen.grp_p3_val_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h000D)) 
    \deskew_enable_gen.grp_p3_val_i_6 
       (.I0(\deskew_enable_gen.f0_val_reg[0]_0 ),
        .I1(selected_data[21]),
        .I2(masked_dout[23]),
        .I3(\deskew_enable_gen.grp_p3_val_i_17_n_0 ),
        .O(\deskew_enable_gen.grp_p3_val_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2202)) 
    \deskew_enable_gen.grp_p3_val_i_7 
       (.I0(\deskew_enable_gen.grp_p3_val_i_18_n_0 ),
        .I1(masked_dout[19]),
        .I2(\deskew_enable_gen.grp_p3_val_i_20_n_0 ),
        .I3(selected_data[20]),
        .O(\deskew_enable_gen.grp_p3_val_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h0D0D000D)) 
    \deskew_enable_gen.grp_p3_val_i_8 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_3 ),
        .I1(selected_data[17]),
        .I2(masked_dout[15]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_0 ),
        .I4(selected_data[16]),
        .O(\deskew_enable_gen.grp_p3_val_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA8AAAAAAAAAAA)) 
    \deskew_enable_gen.grp_p3_val_i_9 
       (.I0(\deskew_enable_gen.grp_p3_val_i_24_n_0 ),
        .I1(selected_data[12]),
        .I2(\deskew_enable_gen.data_flip_sel_reg[16]_0 ),
        .I3(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I4(grp_count_mul[4]),
        .I5(grp_count_mul[3]),
        .O(\deskew_enable_gen.grp_p3_val_i_9_n_0 ));
  FDRE \deskew_enable_gen.grp_p3_val_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(grp_p3_val0),
        .Q(grp_p3_val),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.grp_p3_val_reg_i_1 
       (.CI(\deskew_enable_gen.grp_p3_val_reg_i_2_n_0 ),
        .CO({\NLW_deskew_enable_gen.grp_p3_val_reg_i_1_CO_UNCONNECTED [3:2],grp_p3_val0,\deskew_enable_gen.grp_p3_val_reg_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p3_val_reg_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.grp_p3_val_i_3_n_0 ,\deskew_enable_gen.grp_p3_val_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.grp_p3_val_reg_i_2 
       (.CI(\deskew_enable_gen.grp_p3_val_reg_i_5_n_0 ),
        .CO({\deskew_enable_gen.grp_p3_val_reg_i_2_n_0 ,\deskew_enable_gen.grp_p3_val_reg_i_2_n_1 ,\deskew_enable_gen.grp_p3_val_reg_i_2_n_2 ,\deskew_enable_gen.grp_p3_val_reg_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p3_val_reg_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p3_val_i_6_n_0 ,\deskew_enable_gen.grp_p3_val_i_7_n_0 ,\deskew_enable_gen.grp_p3_val_i_8_n_0 ,\deskew_enable_gen.grp_p3_val_i_9_n_0 }));
  CARRY4 \deskew_enable_gen.grp_p3_val_reg_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.grp_p3_val_reg_i_5_n_0 ,\deskew_enable_gen.grp_p3_val_reg_i_5_n_1 ,\deskew_enable_gen.grp_p3_val_reg_i_5_n_2 ,\deskew_enable_gen.grp_p3_val_reg_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p3_val_reg_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p3_val_i_11_n_0 ,\deskew_enable_gen.grp_p3_val_i_12_n_0 ,\deskew_enable_gen.grp_p3_val_i_13_n_0 ,\deskew_enable_gen.grp_p3_val_i_14_n_0 }));
  LUT5 #(
    .INIT(32'h00A008A0)) 
    \deskew_enable_gen.max_value_0[4]_i_1 
       (.I0(\deskew_enable_gen.min_value_1[4]_i_3_n_0 ),
        .I1(\deskew_enable_gen.max_value_0[4]_i_2_n_0 ),
        .I2(state[9]),
        .I3(state[5]),
        .I4(step_count[2]),
        .O(next_max_value_0));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT4 #(
    .INIT(16'h009F)) 
    \deskew_enable_gen.max_value_0[4]_i_2 
       (.I0(flip_type),
        .I1(min_flip_0),
        .I2(step_count[0]),
        .I3(step_count[1]),
        .O(\deskew_enable_gen.max_value_0[4]_i_2_n_0 ));
  FDRE \deskew_enable_gen.max_value_0_reg[0] 
       (.C(clk_ph_out),
        .CE(next_max_value_0),
        .D(next_min_value_0[0]),
        .Q(max_value_0[0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.max_value_0_reg[1] 
       (.C(clk_ph_out),
        .CE(next_max_value_0),
        .D(next_min_value_0[1]),
        .Q(max_value_0[1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.max_value_0_reg[2] 
       (.C(clk_ph_out),
        .CE(next_max_value_0),
        .D(next_min_value_0[2]),
        .Q(max_value_0[2]),
        .R(reset_in));
  FDRE \deskew_enable_gen.max_value_0_reg[3] 
       (.C(clk_ph_out),
        .CE(next_max_value_0),
        .D(next_min_value_0[3]),
        .Q(max_value_0[3]),
        .R(reset_in));
  FDRE \deskew_enable_gen.max_value_0_reg[4] 
       (.C(clk_ph_out),
        .CE(next_max_value_0),
        .D(next_min_value_0[4]),
        .Q(max_value_0[4]),
        .R(reset_in));
  LUT5 #(
    .INIT(32'h00A008A0)) 
    \deskew_enable_gen.max_value_1[4]_i_1 
       (.I0(\deskew_enable_gen.min_value_1[4]_i_3_n_0 ),
        .I1(\deskew_enable_gen.max_value_1[4]_i_2_n_0 ),
        .I2(state[9]),
        .I3(state[5]),
        .I4(step_count[2]),
        .O(next_max_value_1));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT5 #(
    .INIT(32'h8CBC7C4C)) 
    \deskew_enable_gen.max_value_1[4]_i_2 
       (.I0(min_flip_1),
        .I1(step_count[1]),
        .I2(step_count[0]),
        .I3(min_flip_0),
        .I4(flip_type),
        .O(\deskew_enable_gen.max_value_1[4]_i_2_n_0 ));
  FDRE \deskew_enable_gen.max_value_1_reg[0] 
       (.C(clk_ph_out),
        .CE(next_max_value_1),
        .D(next_min_value_0[0]),
        .Q(max_value_1[0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.max_value_1_reg[1] 
       (.C(clk_ph_out),
        .CE(next_max_value_1),
        .D(next_min_value_0[1]),
        .Q(max_value_1[1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.max_value_1_reg[2] 
       (.C(clk_ph_out),
        .CE(next_max_value_1),
        .D(next_min_value_0[2]),
        .Q(max_value_1[2]),
        .R(reset_in));
  FDRE \deskew_enable_gen.max_value_1_reg[3] 
       (.C(clk_ph_out),
        .CE(next_max_value_1),
        .D(next_min_value_0[3]),
        .Q(max_value_1[3]),
        .R(reset_in));
  FDRE \deskew_enable_gen.max_value_1_reg[4] 
       (.C(clk_ph_out),
        .CE(next_max_value_1),
        .D(next_min_value_0[4]),
        .Q(max_value_1[4]),
        .R(reset_in));
  LUT6 #(
    .INIT(64'hFFFEFFFF00020000)) 
    \deskew_enable_gen.min_flip_0_i_1 
       (.I0(flip_type),
        .I1(step_count[1]),
        .I2(step_count[0]),
        .I3(step_count[2]),
        .I4(\deskew_enable_gen.min_flip_0_i_2_n_0 ),
        .I5(min_flip_0),
        .O(\deskew_enable_gen.min_flip_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \deskew_enable_gen.min_flip_0_i_2 
       (.I0(\deskew_enable_gen.min_flip_0_i_3_n_0 ),
        .I1(\deskew_enable_gen.min_flip_0_i_4_n_0 ),
        .I2(state[6]),
        .I3(state[8]),
        .I4(state[7]),
        .I5(state[0]),
        .O(\deskew_enable_gen.min_flip_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \deskew_enable_gen.min_flip_0_i_3 
       (.I0(state[4]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[1]),
        .I4(state[10]),
        .I5(state[11]),
        .O(\deskew_enable_gen.min_flip_0_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \deskew_enable_gen.min_flip_0_i_4 
       (.I0(state[9]),
        .I1(state[5]),
        .O(\deskew_enable_gen.min_flip_0_i_4_n_0 ));
  FDRE \deskew_enable_gen.min_flip_0_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.min_flip_0_i_1_n_0 ),
        .Q(min_flip_0),
        .R(reset_in));
  LUT4 #(
    .INIT(16'hFB08)) 
    \deskew_enable_gen.min_flip_1_i_1 
       (.I0(flip_type),
        .I1(\deskew_enable_gen.min_flip_0_i_2_n_0 ),
        .I2(\deskew_enable_gen.min_value_1[4]_i_4_n_0 ),
        .I3(min_flip_1),
        .O(\deskew_enable_gen.min_flip_1_i_1_n_0 ));
  FDRE \deskew_enable_gen.min_flip_1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.min_flip_1_i_1_n_0 ),
        .Q(min_flip_1),
        .R(reset_in));
  LUT6 #(
    .INIT(64'h0000AAAA00020000)) 
    \deskew_enable_gen.min_value_0[4]_i_1 
       (.I0(\deskew_enable_gen.min_value_1[4]_i_3_n_0 ),
        .I1(step_count[1]),
        .I2(step_count[0]),
        .I3(step_count[2]),
        .I4(state[5]),
        .I5(state[9]),
        .O(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ));
  FDRE \deskew_enable_gen.min_value_0_reg[0] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ),
        .D(next_min_value_0[0]),
        .Q(min_value_0[0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.min_value_0_reg[1] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ),
        .D(next_min_value_0[1]),
        .Q(min_value_0[1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.min_value_0_reg[2] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ),
        .D(next_min_value_0[2]),
        .Q(min_value_0[2]),
        .R(reset_in));
  FDRE \deskew_enable_gen.min_value_0_reg[3] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ),
        .D(next_min_value_0[3]),
        .Q(min_value_0[3]),
        .R(reset_in));
  FDRE \deskew_enable_gen.min_value_0_reg[4] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ),
        .D(next_min_value_0[4]),
        .Q(min_value_0[4]),
        .R(reset_in));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.min_value_1[0]_i_1 
       (.I0(\deskew_enable_gen.max_value_0_reg[4]_0 [0]),
        .I1(state[9]),
        .O(next_min_value_0[0]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.min_value_1[1]_i_1 
       (.I0(\deskew_enable_gen.max_value_0_reg[4]_0 [1]),
        .I1(state[9]),
        .O(next_min_value_0[1]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.min_value_1[2]_i_1 
       (.I0(\deskew_enable_gen.max_value_0_reg[4]_0 [2]),
        .I1(state[9]),
        .O(next_min_value_0[2]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.min_value_1[3]_i_1 
       (.I0(\deskew_enable_gen.max_value_0_reg[4]_0 [3]),
        .I1(state[9]),
        .O(next_min_value_0[3]));
  LUT4 #(
    .INIT(16'h0828)) 
    \deskew_enable_gen.min_value_1[4]_i_1 
       (.I0(\deskew_enable_gen.min_value_1[4]_i_3_n_0 ),
        .I1(state[9]),
        .I2(state[5]),
        .I3(\deskew_enable_gen.min_value_1[4]_i_4_n_0 ),
        .O(next_min_value_1));
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.min_value_1[4]_i_2 
       (.I0(\deskew_enable_gen.max_value_0_reg[4]_0 [4]),
        .I1(state[9]),
        .O(next_min_value_0[4]));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \deskew_enable_gen.min_value_1[4]_i_3 
       (.I0(\deskew_enable_gen.step_count[2]_i_9_n_0 ),
        .I1(state[10]),
        .I2(state[11]),
        .I3(\deskew_enable_gen.count[2]_i_6_n_0 ),
        .I4(state[6]),
        .I5(state[4]),
        .O(\deskew_enable_gen.min_value_1[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'hFFFFF90F)) 
    \deskew_enable_gen.min_value_1[4]_i_4 
       (.I0(min_flip_0),
        .I1(flip_type),
        .I2(step_count[1]),
        .I3(step_count[0]),
        .I4(step_count[2]),
        .O(\deskew_enable_gen.min_value_1[4]_i_4_n_0 ));
  FDRE \deskew_enable_gen.min_value_1_reg[0] 
       (.C(clk_ph_out),
        .CE(next_min_value_1),
        .D(next_min_value_0[0]),
        .Q(min_value_1[0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.min_value_1_reg[1] 
       (.C(clk_ph_out),
        .CE(next_min_value_1),
        .D(next_min_value_0[1]),
        .Q(min_value_1[1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.min_value_1_reg[2] 
       (.C(clk_ph_out),
        .CE(next_min_value_1),
        .D(next_min_value_0[2]),
        .Q(min_value_1[2]),
        .R(reset_in));
  FDRE \deskew_enable_gen.min_value_1_reg[3] 
       (.C(clk_ph_out),
        .CE(next_min_value_1),
        .D(next_min_value_0[3]),
        .Q(min_value_1[3]),
        .R(reset_in));
  FDRE \deskew_enable_gen.min_value_1_reg[4] 
       (.C(clk_ph_out),
        .CE(next_min_value_1),
        .D(next_min_value_0[4]),
        .Q(min_value_1[4]),
        .R(reset_in));
  LUT6 #(
    .INIT(64'h0777000007770777)) 
    \deskew_enable_gen.p0_val[0]_i_12 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_7 ),
        .I1(\data_out_reg[29] [3]),
        .I2(\data_out_reg[29] [5]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_2 ),
        .I4(\data_out_reg[29] [4]),
        .I5(\deskew_enable_gen.p1_val_reg[0]_8 ),
        .O(\deskew_enable_gen.p0_val_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.p0_val[0]_i_7 
       (.I0(\deskew_enable_gen.f2_val[0]_i_16_n_0 ),
        .I1(\data_out_reg[29] [18]),
        .I2(\deskew_enable_gen.f2_val[0]_i_17_n_0 ),
        .I3(\data_out_reg[29] [19]),
        .I4(\deskew_enable_gen.grp_p3_val_i_20_n_0 ),
        .I5(\data_out_reg[29] [20]),
        .O(\deskew_enable_gen.p0_val_reg[0]_0 [1]));
  LUT6 #(
    .INIT(64'h0DDD0DDD0DDD0000)) 
    \deskew_enable_gen.p0_val[0]_i_9 
       (.I0(\deskew_enable_gen.grp_p0_val_reg_1 ),
        .I1(\data_out_reg[29] [12]),
        .I2(\data_out_reg[29] [13]),
        .I3(\deskew_enable_gen.grp_p0_val_reg_2 ),
        .I4(\deskew_enable_gen.grp_p0_val_reg_3 ),
        .I5(\data_out_reg[29] [14]),
        .O(\deskew_enable_gen.p0_val_reg[0]_0 [0]));
  FDRE \deskew_enable_gen.p0_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(CO),
        .Q(\deskew_enable_gen.p0_val_reg_n_0_[0] ),
        .R(1'b0));
  (* srl_bus_name = "inst/\slave_fpga_gen.axi_chip2chip_slave_phy_inst/slave_sio_phy.axi_chip2chip_phy_calib_inst/deskew_enable_gen.p0_val_reg " *) 
  (* srl_name = "inst/\slave_fpga_gen.axi_chip2chip_slave_phy_inst/slave_sio_phy.axi_chip2chip_phy_calib_inst/deskew_enable_gen.p0_val_reg[2]_srl2 " *) 
  SRL16E \deskew_enable_gen.p0_val_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk_ph_out),
        .D(\deskew_enable_gen.p0_val_reg_n_0_[0] ),
        .Q(\deskew_enable_gen.p0_val_reg[2]_srl2_n_0 ));
  FDRE \deskew_enable_gen.p0_val_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.p0_val_reg[2]_srl2_n_0 ),
        .Q(p_3_in9_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0DDD00000DDD0DDD)) 
    \deskew_enable_gen.p1_val[0]_i_10 
       (.I0(\deskew_enable_gen.p3_val_reg[0]_1 ),
        .I1(\data_out_reg[29] [10]),
        .I2(\data_out_reg[29] [11]),
        .I3(\deskew_enable_gen.p3_val_reg[0]_2 ),
        .I4(\data_out_reg[29] [9]),
        .I5(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .O(\deskew_enable_gen.p1_val[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.p1_val[0]_i_11 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_4 ),
        .I1(\data_out_reg[29] [6]),
        .I2(\data_out_reg[29] [7]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_6 ),
        .I4(\deskew_enable_gen.p1_val_reg[0]_1 ),
        .I5(\data_out_reg[29] [8]),
        .O(\deskew_enable_gen.p1_val[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.p1_val[0]_i_12 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_2 ),
        .I1(\data_out_reg[29] [5]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_7 ),
        .I3(\data_out_reg[29] [3]),
        .I4(\deskew_enable_gen.p1_val_reg[0]_8 ),
        .I5(\data_out_reg[29] [4]),
        .O(\deskew_enable_gen.p1_val[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000EE0EEE0EEE0E)) 
    \deskew_enable_gen.p1_val[0]_i_3 
       (.I0(\deskew_enable_gen.data_flip_sel_reg[29]_0 ),
        .I1(\data_out_reg[29] [29]),
        .I2(\data_out_reg[29] [27]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[27]_0 ),
        .I4(\data_out_reg[29] [28]),
        .I5(\deskew_enable_gen.data_flip_sel_reg[28]_0 ),
        .O(\deskew_enable_gen.p1_val[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.p1_val[0]_i_6 
       (.I0(\deskew_enable_gen.f0_val_reg[0]_0 ),
        .I1(\data_out_reg[29] [21]),
        .I2(\data_out_reg[29] [23]),
        .I3(\deskew_enable_gen.f0_val_reg[0]_1 ),
        .I4(\deskew_enable_gen.f0_val_reg[0]_2 ),
        .I5(\data_out_reg[29] [22]),
        .O(\deskew_enable_gen.p1_val[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.p1_val[0]_i_7 
       (.I0(\deskew_enable_gen.f2_val[0]_i_16_n_0 ),
        .I1(\data_out_reg[29] [18]),
        .I2(\deskew_enable_gen.f2_val[0]_i_17_n_0 ),
        .I3(\data_out_reg[29] [19]),
        .I4(\deskew_enable_gen.grp_p3_val_i_20_n_0 ),
        .I5(\data_out_reg[29] [20]),
        .O(\deskew_enable_gen.p1_val[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.p1_val[0]_i_8 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_3 ),
        .I1(\data_out_reg[29] [17]),
        .I2(\data_out_reg[29] [15]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_5 ),
        .I4(\deskew_enable_gen.p1_val_reg[0]_0 ),
        .I5(\data_out_reg[29] [16]),
        .O(\deskew_enable_gen.p1_val[0]_i_8_n_0 ));
  FDRE \deskew_enable_gen.p1_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p1_val0),
        .Q(\deskew_enable_gen.p1_val_reg_n_0_[0] ),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.p1_val_reg[0]_i_1 
       (.CI(\deskew_enable_gen.p1_val_reg[0]_i_2_n_0 ),
        .CO({\NLW_deskew_enable_gen.p1_val_reg[0]_i_1_CO_UNCONNECTED [3:2],p1_val0,\deskew_enable_gen.p1_val_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p1_val_reg[0]_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.p1_val[0]_i_3_n_0 ,\data_out_reg[24] }));
  CARRY4 \deskew_enable_gen.p1_val_reg[0]_i_2 
       (.CI(\deskew_enable_gen.p1_val_reg[0]_i_5_n_0 ),
        .CO({\deskew_enable_gen.p1_val_reg[0]_i_2_n_0 ,\deskew_enable_gen.p1_val_reg[0]_i_2_n_1 ,\deskew_enable_gen.p1_val_reg[0]_i_2_n_2 ,\deskew_enable_gen.p1_val_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p1_val_reg[0]_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.p1_val[0]_i_6_n_0 ,\deskew_enable_gen.p1_val[0]_i_7_n_0 ,\deskew_enable_gen.p1_val[0]_i_8_n_0 ,\data_out_reg[12] }));
  CARRY4 \deskew_enable_gen.p1_val_reg[0]_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.p1_val_reg[0]_i_5_n_0 ,\deskew_enable_gen.p1_val_reg[0]_i_5_n_1 ,\deskew_enable_gen.p1_val_reg[0]_i_5_n_2 ,\deskew_enable_gen.p1_val_reg[0]_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p1_val_reg[0]_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.p1_val[0]_i_10_n_0 ,\deskew_enable_gen.p1_val[0]_i_11_n_0 ,\deskew_enable_gen.p1_val[0]_i_12_n_0 ,\data_out_reg[0] }));
  FDRE \deskew_enable_gen.p1_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.p1_val_reg_n_0_[0] ),
        .Q(\deskew_enable_gen.p1_val_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \deskew_enable_gen.p1_val_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.p1_val_reg_n_0_[1] ),
        .Q(p_2_in8_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.p2_val[0]_i_10 
       (.I0(\deskew_enable_gen.p3_val_reg[0]_2 ),
        .I1(\data_out_reg[29] [11]),
        .I2(\data_out_reg[29] [9]),
        .I3(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I4(\deskew_enable_gen.p3_val_reg[0]_1 ),
        .I5(\data_out_reg[29] [10]),
        .O(\deskew_enable_gen.p2_val[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.p2_val[0]_i_11 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_6 ),
        .I1(\data_out_reg[29] [7]),
        .I2(\data_out_reg[29] [6]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_4 ),
        .I4(\deskew_enable_gen.p1_val_reg[0]_1 ),
        .I5(\data_out_reg[29] [8]),
        .O(\deskew_enable_gen.p2_val[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h00000DDD0DDD0DDD)) 
    \deskew_enable_gen.p2_val[0]_i_6 
       (.I0(\deskew_enable_gen.f0_val_reg[0]_1 ),
        .I1(\data_out_reg[29] [23]),
        .I2(\data_out_reg[29] [21]),
        .I3(\deskew_enable_gen.f0_val_reg[0]_0 ),
        .I4(\deskew_enable_gen.f0_val_reg[0]_2 ),
        .I5(\data_out_reg[29] [22]),
        .O(\deskew_enable_gen.p2_val[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h7077000070777077)) 
    \deskew_enable_gen.p2_val[0]_i_7 
       (.I0(\deskew_enable_gen.f2_val[0]_i_16_n_0 ),
        .I1(\data_out_reg[29] [18]),
        .I2(\data_out_reg[29] [19]),
        .I3(\deskew_enable_gen.f2_val[0]_i_17_n_0 ),
        .I4(\data_out_reg[29] [20]),
        .I5(\deskew_enable_gen.grp_p3_val_i_20_n_0 ),
        .O(\deskew_enable_gen.p2_val[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.p2_val[0]_i_8 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_5 ),
        .I1(\data_out_reg[29] [15]),
        .I2(\data_out_reg[29] [17]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_3 ),
        .I4(\deskew_enable_gen.p1_val_reg[0]_0 ),
        .I5(\data_out_reg[29] [16]),
        .O(\deskew_enable_gen.p2_val[0]_i_8_n_0 ));
  FDRE \deskew_enable_gen.p2_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D),
        .Q(\deskew_enable_gen.p2_val_reg_n_0_[0] ),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.p2_val_reg[0]_i_2 
       (.CI(\deskew_enable_gen.p2_val_reg[0]_i_5_n_0 ),
        .CO({\deskew_enable_gen.p2_val_reg[0]_0 ,\deskew_enable_gen.p2_val_reg[0]_i_2_n_1 ,\deskew_enable_gen.p2_val_reg[0]_i_2_n_2 ,\deskew_enable_gen.p2_val_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p2_val_reg[0]_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.p2_val[0]_i_6_n_0 ,\deskew_enable_gen.p2_val[0]_i_7_n_0 ,\deskew_enable_gen.p2_val[0]_i_8_n_0 ,\data_out_reg[13] }));
  CARRY4 \deskew_enable_gen.p2_val_reg[0]_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.p2_val_reg[0]_i_5_n_0 ,\deskew_enable_gen.p2_val_reg[0]_i_5_n_1 ,\deskew_enable_gen.p2_val_reg[0]_i_5_n_2 ,\deskew_enable_gen.p2_val_reg[0]_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p2_val_reg[0]_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.p2_val[0]_i_10_n_0 ,\deskew_enable_gen.p2_val[0]_i_11_n_0 ,S}));
  FDRE \deskew_enable_gen.p2_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.p2_val_reg_n_0_[0] ),
        .Q(p_0_in7_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0DDD00000DDD0DDD)) 
    \deskew_enable_gen.p3_val[0]_i_10 
       (.I0(\deskew_enable_gen.p3_val_reg[0]_1 ),
        .I1(\data_out_reg[29] [10]),
        .I2(\data_out_reg[29] [11]),
        .I3(\deskew_enable_gen.p3_val_reg[0]_2 ),
        .I4(\data_out_reg[29] [9]),
        .I5(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .O(\deskew_enable_gen.p3_val[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.p3_val[0]_i_12 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_2 ),
        .I1(\data_out_reg[29] [5]),
        .I2(\deskew_enable_gen.p1_val_reg[0]_7 ),
        .I3(\data_out_reg[29] [3]),
        .I4(\deskew_enable_gen.p1_val_reg[0]_8 ),
        .I5(\data_out_reg[29] [4]),
        .O(\deskew_enable_gen.p3_val[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hEE0EEE0E0000EE0E)) 
    \deskew_enable_gen.p3_val[0]_i_3 
       (.I0(\deskew_enable_gen.data_flip_sel_reg[29]_0 ),
        .I1(\data_out_reg[29] [29]),
        .I2(\data_out_reg[29] [27]),
        .I3(\deskew_enable_gen.data_flip_sel_reg[27]_0 ),
        .I4(\deskew_enable_gen.data_flip_sel_reg[28]_0 ),
        .I5(\data_out_reg[29] [28]),
        .O(\deskew_enable_gen.p3_val[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.p3_val[0]_i_6 
       (.I0(\deskew_enable_gen.f0_val_reg[0]_0 ),
        .I1(\data_out_reg[29] [21]),
        .I2(\data_out_reg[29] [23]),
        .I3(\deskew_enable_gen.f0_val_reg[0]_1 ),
        .I4(\deskew_enable_gen.f0_val_reg[0]_2 ),
        .I5(\data_out_reg[29] [22]),
        .O(\deskew_enable_gen.p3_val[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.p3_val[0]_i_7 
       (.I0(\deskew_enable_gen.f2_val[0]_i_16_n_0 ),
        .I1(\data_out_reg[29] [18]),
        .I2(\deskew_enable_gen.f2_val[0]_i_17_n_0 ),
        .I3(\data_out_reg[29] [19]),
        .I4(\deskew_enable_gen.grp_p3_val_i_20_n_0 ),
        .I5(\data_out_reg[29] [20]),
        .O(\deskew_enable_gen.p3_val[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0DDD0DDD00000DDD)) 
    \deskew_enable_gen.p3_val[0]_i_8 
       (.I0(\deskew_enable_gen.p1_val_reg[0]_3 ),
        .I1(\data_out_reg[29] [17]),
        .I2(\data_out_reg[29] [15]),
        .I3(\deskew_enable_gen.p1_val_reg[0]_5 ),
        .I4(\deskew_enable_gen.p1_val_reg[0]_0 ),
        .I5(\data_out_reg[29] [16]),
        .O(\deskew_enable_gen.p3_val[0]_i_8_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.p3_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.p3_val_reg0 ),
        .Q(p3_val[0]),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.p3_val_reg[0]_i_1 
       (.CI(\deskew_enable_gen.p3_val_reg[0]_i_2_n_0 ),
        .CO({\NLW_deskew_enable_gen.p3_val_reg[0]_i_1_CO_UNCONNECTED [3:2],\deskew_enable_gen.p3_val_reg0 ,\deskew_enable_gen.p3_val_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p3_val_reg[0]_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.p3_val[0]_i_3_n_0 ,\data_out_reg[24]_0 }));
  CARRY4 \deskew_enable_gen.p3_val_reg[0]_i_2 
       (.CI(\deskew_enable_gen.p3_val_reg[0]_i_5_n_0 ),
        .CO({\deskew_enable_gen.p3_val_reg[0]_i_2_n_0 ,\deskew_enable_gen.p3_val_reg[0]_i_2_n_1 ,\deskew_enable_gen.p3_val_reg[0]_i_2_n_2 ,\deskew_enable_gen.p3_val_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p3_val_reg[0]_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.p3_val[0]_i_6_n_0 ,\deskew_enable_gen.p3_val[0]_i_7_n_0 ,\deskew_enable_gen.p3_val[0]_i_8_n_0 ,\data_out_reg[12]_0 }));
  CARRY4 \deskew_enable_gen.p3_val_reg[0]_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.p3_val_reg[0]_i_5_n_0 ,\deskew_enable_gen.p3_val_reg[0]_i_5_n_1 ,\deskew_enable_gen.p3_val_reg[0]_i_5_n_2 ,\deskew_enable_gen.p3_val_reg[0]_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p3_val_reg[0]_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.p3_val[0]_i_10_n_0 ,\data_out_reg[7] [1],\deskew_enable_gen.p3_val[0]_i_12_n_0 ,\data_out_reg[7] [0]}));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.p3_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p3_val[0]),
        .Q(p3_val[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.p3_val_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p3_val[1]),
        .Q(p3_val[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.p3_val_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p3_val[2]),
        .Q(p3_val[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT5 #(
    .INIT(32'h00FF0800)) 
    \deskew_enable_gen.pat_count[0]_i_1 
       (.I0(\deskew_enable_gen.state[6]_i_2_n_0 ),
        .I1(state[4]),
        .I2(state[9]),
        .I3(next_pat_count),
        .I4(pat_count[0]),
        .O(\deskew_enable_gen.pat_count[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0020FFFF00800000)) 
    \deskew_enable_gen.pat_count[1]_i_1 
       (.I0(\deskew_enable_gen.state[6]_i_2_n_0 ),
        .I1(pat_count[0]),
        .I2(state[4]),
        .I3(state[9]),
        .I4(next_pat_count),
        .I5(pat_count[1]),
        .O(\deskew_enable_gen.pat_count[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0020FFFF00800000)) 
    \deskew_enable_gen.pat_count[2]_i_1 
       (.I0(\deskew_enable_gen.state[6]_i_2_n_0 ),
        .I1(\deskew_enable_gen.pat_count[2]_i_2_n_0 ),
        .I2(state[4]),
        .I3(state[9]),
        .I4(next_pat_count),
        .I5(pat_count[2]),
        .O(\deskew_enable_gen.pat_count[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \deskew_enable_gen.pat_count[2]_i_2 
       (.I0(pat_count[0]),
        .I1(pat_count[1]),
        .O(\deskew_enable_gen.pat_count[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001010117)) 
    \deskew_enable_gen.pat_count[2]_i_3 
       (.I0(state[2]),
        .I1(state[9]),
        .I2(state[4]),
        .I3(state[1]),
        .I4(state[0]),
        .I5(\deskew_enable_gen.pat_count[2]_i_4_n_0 ),
        .O(next_pat_count));
  LUT6 #(
    .INIT(64'hFFFFFFFFBAAAAABA)) 
    \deskew_enable_gen.pat_count[2]_i_4 
       (.I0(\deskew_enable_gen.pat_count[2]_i_5_n_0 ),
        .I1(state[2]),
        .I2(\deskew_enable_gen.pat_count[2]_i_6_n_0 ),
        .I3(state[0]),
        .I4(state[1]),
        .I5(state[3]),
        .O(\deskew_enable_gen.pat_count[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \deskew_enable_gen.pat_count[2]_i_5 
       (.I0(state[5]),
        .I1(state[6]),
        .I2(state[8]),
        .I3(state[7]),
        .I4(state[11]),
        .I5(state[10]),
        .O(\deskew_enable_gen.pat_count[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.pat_count[2]_i_6 
       (.I0(state[9]),
        .I1(state[4]),
        .O(\deskew_enable_gen.pat_count[2]_i_6_n_0 ));
  FDRE \deskew_enable_gen.pat_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.pat_count[0]_i_1_n_0 ),
        .Q(pat_count[0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.pat_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.pat_count[1]_i_1_n_0 ),
        .Q(pat_count[1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.pat_count_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.pat_count[2]_i_1_n_0 ),
        .Q(pat_count[2]),
        .R(reset_in));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.state[0]_i_1 
       (.I0(state[0]),
        .I1(calib_start),
        .O(\deskew_enable_gen.state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h70707070FF707070)) 
    \deskew_enable_gen.state[10]_i_1 
       (.I0(dout_p0_val),
        .I1(\deskew_enable_gen.state[10]_i_2_n_0 ),
        .I2(state[10]),
        .I3(state[7]),
        .I4(\deskew_enable_gen.state[10]_i_3_n_0 ),
        .I5(\deskew_enable_gen.state[10]_i_4_n_0 ),
        .O(\deskew_enable_gen.state[10]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h17)) 
    \deskew_enable_gen.state[10]_i_2 
       (.I0(grp_p0_val),
        .I1(grp_p1_val),
        .I2(grp_p3_val),
        .O(\deskew_enable_gen.state[10]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \deskew_enable_gen.state[10]_i_3 
       (.I0(step_count[1]),
        .I1(step_count[2]),
        .I2(step_count[0]),
        .O(\deskew_enable_gen.state[10]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \deskew_enable_gen.state[10]_i_4 
       (.I0(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I1(grp_count_mul[3]),
        .I2(grp_count_mul[6]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[4]),
        .O(\deskew_enable_gen.state[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0003033C00000001)) 
    \deskew_enable_gen.state[11]_i_1 
       (.I0(\deskew_enable_gen.state[11]_i_3_n_0 ),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(\deskew_enable_gen.state[11]_i_4_n_0 ),
        .O(next_state));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF4F4F4)) 
    \deskew_enable_gen.state[11]_i_2 
       (.I0(\deskew_enable_gen.state[11]_i_5_n_0 ),
        .I1(state[9]),
        .I2(state[11]),
        .I3(state[7]),
        .I4(\deskew_enable_gen.state[11]_i_6_n_0 ),
        .I5(\deskew_enable_gen.state[11]_i_7_n_0 ),
        .O(\deskew_enable_gen.state[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hFFFAFAA8)) 
    \deskew_enable_gen.state[11]_i_3 
       (.I0(\deskew_enable_gen.state[11]_i_8_n_0 ),
        .I1(\deskew_enable_gen.state[11]_i_9_n_0 ),
        .I2(state[5]),
        .I3(state[4]),
        .I4(state[6]),
        .O(\deskew_enable_gen.state[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \deskew_enable_gen.state[11]_i_4 
       (.I0(\deskew_enable_gen.flip_type_i_6_n_0 ),
        .I1(state[8]),
        .I2(state[7]),
        .I3(state[9]),
        .I4(state[10]),
        .I5(state[11]),
        .O(\deskew_enable_gen.state[11]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \deskew_enable_gen.state[11]_i_5 
       (.I0(grp_count_mul[4]),
        .I1(\deskew_enable_gen.delay_load_reg[22]_0 ),
        .I2(grp_count_mul[3]),
        .I3(grp_count_mul[5]),
        .I4(grp_count_mul[6]),
        .O(\deskew_enable_gen.state[11]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \deskew_enable_gen.state[11]_i_6 
       (.I0(step_count[0]),
        .I1(step_count[1]),
        .I2(step_count[2]),
        .O(\deskew_enable_gen.state[11]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT5 #(
    .INIT(32'h01000000)) 
    \deskew_enable_gen.state[11]_i_7 
       (.I0(grp_p3_val),
        .I1(grp_p0_val),
        .I2(grp_p1_val),
        .I3(state[10]),
        .I4(dout_p0_val),
        .O(\deskew_enable_gen.state[11]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \deskew_enable_gen.state[11]_i_8 
       (.I0(state[11]),
        .I1(state[10]),
        .I2(state[9]),
        .I3(state[7]),
        .I4(state[8]),
        .O(\deskew_enable_gen.state[11]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'hFFFEFEE8)) 
    \deskew_enable_gen.state[11]_i_9 
       (.I0(state[11]),
        .I1(state[10]),
        .I2(state[9]),
        .I3(state[8]),
        .I4(state[7]),
        .O(\deskew_enable_gen.state[11]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'hFDDD)) 
    \deskew_enable_gen.state[1]_i_1 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_4_n_0 ),
        .I1(\deskew_enable_gen.state[1]_i_2_n_0 ),
        .I2(\deskew_enable_gen.state[11]_i_5_n_0 ),
        .I3(state[9]),
        .O(\deskew_enable_gen.state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'hFFFFF444)) 
    \deskew_enable_gen.state[1]_i_2 
       (.I0(\deskew_enable_gen.state[6]_i_3_n_0 ),
        .I1(state[1]),
        .I2(calib_start),
        .I3(state[0]),
        .I4(state[8]),
        .O(\deskew_enable_gen.state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFF800080008000)) 
    \deskew_enable_gen.state[2]_i_1 
       (.I0(state[1]),
        .I1(count[2]),
        .I2(count[0]),
        .I3(count[1]),
        .I4(state[2]),
        .I5(\deskew_enable_gen.state[6]_i_4_n_0 ),
        .O(\deskew_enable_gen.state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF2AAA0000)) 
    \deskew_enable_gen.state[3]_i_1 
       (.I0(\deskew_enable_gen.state[6]_i_2_n_0 ),
        .I1(pat_count[2]),
        .I2(pat_count[0]),
        .I3(pat_count[1]),
        .I4(state[4]),
        .I5(\deskew_enable_gen.state[3]_i_2_n_0 ),
        .O(\deskew_enable_gen.state[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF4FF44444444)) 
    \deskew_enable_gen.state[3]_i_2 
       (.I0(\deskew_enable_gen.state[6]_i_4_n_0 ),
        .I1(state[2]),
        .I2(count[2]),
        .I3(count[1]),
        .I4(count[0]),
        .I5(state[3]),
        .O(\deskew_enable_gen.state[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \deskew_enable_gen.state[4]_i_1 
       (.I0(count[0]),
        .I1(count[1]),
        .I2(count[2]),
        .I3(state[3]),
        .O(\deskew_enable_gen.state[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \deskew_enable_gen.state[5]_i_1 
       (.I0(\deskew_enable_gen.state[6]_i_2_n_0 ),
        .I1(pat_count[1]),
        .I2(pat_count[0]),
        .I3(pat_count[2]),
        .I4(state[4]),
        .O(\deskew_enable_gen.state[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF4444444)) 
    \deskew_enable_gen.state[6]_i_1 
       (.I0(\deskew_enable_gen.state[6]_i_2_n_0 ),
        .I1(state[4]),
        .I2(state[2]),
        .I3(\deskew_enable_gen.state[6]_i_3_n_0 ),
        .I4(\deskew_enable_gen.state[6]_i_4_n_0 ),
        .O(\deskew_enable_gen.state[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000FFFF80000000)) 
    \deskew_enable_gen.state[6]_i_2 
       (.I0(p_2_in5_in),
        .I1(f3_val[0]),
        .I2(p_0_in4_in),
        .I3(p_3_in),
        .I4(flip_type),
        .I5(\deskew_enable_gen.flip_type_i_3_n_0 ),
        .O(\deskew_enable_gen.state[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \deskew_enable_gen.state[6]_i_3 
       (.I0(count[1]),
        .I1(count[0]),
        .I2(count[2]),
        .O(\deskew_enable_gen.state[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00007FFF)) 
    \deskew_enable_gen.state[6]_i_4 
       (.I0(p_3_in),
        .I1(p_0_in4_in),
        .I2(f3_val[0]),
        .I3(p_2_in5_in),
        .I4(\deskew_enable_gen.flip_type_i_3_n_0 ),
        .O(\deskew_enable_gen.state[6]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \deskew_enable_gen.state[7]_i_1 
       (.I0(state[6]),
        .I1(state[5]),
        .O(\deskew_enable_gen.state[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'h0888)) 
    \deskew_enable_gen.state[8]_i_1 
       (.I0(\deskew_enable_gen.state[8]_i_2_n_0 ),
        .I1(state[7]),
        .I2(step_count[2]),
        .I3(step_count[1]),
        .O(\deskew_enable_gen.state[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \deskew_enable_gen.state[8]_i_2 
       (.I0(\deskew_enable_gen.max_value_0_reg[4]_0 [4]),
        .I1(\deskew_enable_gen.max_value_0_reg[4]_0 [3]),
        .I2(\deskew_enable_gen.max_value_0_reg[4]_0 [1]),
        .I3(\deskew_enable_gen.max_value_0_reg[4]_0 [0]),
        .I4(\deskew_enable_gen.max_value_0_reg[4]_0 [2]),
        .O(\deskew_enable_gen.state[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF16000000)) 
    \deskew_enable_gen.state[9]_i_1 
       (.I0(grp_p3_val),
        .I1(grp_p0_val),
        .I2(grp_p1_val),
        .I3(state[10]),
        .I4(dout_p0_val),
        .I5(\deskew_enable_gen.state[9]_i_2_n_0 ),
        .O(\deskew_enable_gen.state[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \deskew_enable_gen.state[9]_i_2 
       (.I0(\deskew_enable_gen.state[10]_i_4_n_0 ),
        .I1(step_count[1]),
        .I2(step_count[2]),
        .I3(step_count[0]),
        .I4(state[7]),
        .O(\deskew_enable_gen.state[9]_i_2_n_0 ));
  FDSE \deskew_enable_gen.state_reg[0] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[0]_i_1_n_0 ),
        .Q(state[0]),
        .S(reset_in));
  FDRE \deskew_enable_gen.state_reg[10] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[10]_i_1_n_0 ),
        .Q(state[10]),
        .R(reset_in));
  FDRE \deskew_enable_gen.state_reg[11] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[11]_i_2_n_0 ),
        .Q(state[11]),
        .R(reset_in));
  FDRE \deskew_enable_gen.state_reg[1] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[1]_i_1_n_0 ),
        .Q(state[1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.state_reg[2] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[2]_i_1_n_0 ),
        .Q(state[2]),
        .R(reset_in));
  FDRE \deskew_enable_gen.state_reg[3] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[3]_i_1_n_0 ),
        .Q(state[3]),
        .R(reset_in));
  FDRE \deskew_enable_gen.state_reg[4] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[4]_i_1_n_0 ),
        .Q(state[4]),
        .R(reset_in));
  FDRE \deskew_enable_gen.state_reg[5] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[5]_i_1_n_0 ),
        .Q(state[5]),
        .R(reset_in));
  FDRE \deskew_enable_gen.state_reg[6] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[6]_i_1_n_0 ),
        .Q(state[6]),
        .R(reset_in));
  FDRE \deskew_enable_gen.state_reg[7] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[7]_i_1_n_0 ),
        .Q(state[7]),
        .R(reset_in));
  FDRE \deskew_enable_gen.state_reg[8] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[8]_i_1_n_0 ),
        .Q(state[8]),
        .R(reset_in));
  FDRE \deskew_enable_gen.state_reg[9] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(\deskew_enable_gen.state[9]_i_1_n_0 ),
        .Q(state[9]),
        .R(reset_in));
  LUT6 #(
    .INIT(64'hAAAEFFFFAAAE0000)) 
    \deskew_enable_gen.step_count[0]_i_1 
       (.I0(state[10]),
        .I1(\deskew_enable_gen.step_count[0]_i_2_n_0 ),
        .I2(state[9]),
        .I3(state[8]),
        .I4(next_step_count),
        .I5(step_count[0]),
        .O(\deskew_enable_gen.step_count[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h90F090F0FFF0F0F0)) 
    \deskew_enable_gen.step_count[0]_i_2 
       (.I0(flip_type),
        .I1(min_flip_1),
        .I2(\deskew_enable_gen.step_count[2]_i_6_n_0 ),
        .I3(step_count[1]),
        .I4(step_count[2]),
        .I5(step_count[0]),
        .O(\deskew_enable_gen.step_count[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    \deskew_enable_gen.step_count[1]_i_1 
       (.I0(state[10]),
        .I1(\deskew_enable_gen.step_count[1]_i_2_n_0 ),
        .I2(next_step_count),
        .I3(step_count[1]),
        .O(\deskew_enable_gen.step_count[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAFF3C00AAFF3CFF)) 
    \deskew_enable_gen.step_count[1]_i_2 
       (.I0(\deskew_enable_gen.max_value_1[4]_i_2_n_0 ),
        .I1(step_count[1]),
        .I2(step_count[0]),
        .I3(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ),
        .I4(\deskew_enable_gen.step_count[2]_i_6_n_0 ),
        .I5(\deskew_enable_gen.state[11]_i_5_n_0 ),
        .O(\deskew_enable_gen.step_count[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hEFE0)) 
    \deskew_enable_gen.step_count[2]_i_1 
       (.I0(state[10]),
        .I1(\deskew_enable_gen.step_count[2]_i_2_n_0 ),
        .I2(next_step_count),
        .I3(step_count[2]),
        .O(\deskew_enable_gen.step_count[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAFF3C00AAFF3CFF)) 
    \deskew_enable_gen.step_count[2]_i_2 
       (.I0(\deskew_enable_gen.step_count[2]_i_4_n_0 ),
        .I1(step_count[2]),
        .I2(\deskew_enable_gen.step_count[2]_i_5_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ),
        .I4(\deskew_enable_gen.step_count[2]_i_6_n_0 ),
        .I5(\deskew_enable_gen.state[11]_i_5_n_0 ),
        .O(\deskew_enable_gen.step_count[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \deskew_enable_gen.step_count[2]_i_3 
       (.I0(\deskew_enable_gen.step_count[2]_i_7_n_0 ),
        .I1(\deskew_enable_gen.step_count[2]_i_8_n_0 ),
        .I2(\deskew_enable_gen.step_count[2]_i_9_n_0 ),
        .I3(state[11]),
        .I4(state[4]),
        .I5(state[7]),
        .O(next_step_count));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h0880)) 
    \deskew_enable_gen.step_count[2]_i_4 
       (.I0(step_count[0]),
        .I1(step_count[1]),
        .I2(min_flip_1),
        .I3(flip_type),
        .O(\deskew_enable_gen.step_count[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \deskew_enable_gen.step_count[2]_i_5 
       (.I0(step_count[1]),
        .I1(step_count[0]),
        .O(\deskew_enable_gen.step_count[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'h45)) 
    \deskew_enable_gen.step_count[2]_i_6 
       (.I0(state[9]),
        .I1(state[8]),
        .I2(state[6]),
        .O(\deskew_enable_gen.step_count[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0003023E)) 
    \deskew_enable_gen.step_count[2]_i_7 
       (.I0(\deskew_enable_gen.state[11]_i_7_n_0 ),
        .I1(state[8]),
        .I2(state[6]),
        .I3(state[10]),
        .I4(state[9]),
        .I5(state[5]),
        .O(\deskew_enable_gen.step_count[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA8)) 
    \deskew_enable_gen.step_count[2]_i_8 
       (.I0(state[5]),
        .I1(step_count[2]),
        .I2(state[10]),
        .I3(state[9]),
        .I4(state[8]),
        .I5(state[6]),
        .O(\deskew_enable_gen.step_count[2]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \deskew_enable_gen.step_count[2]_i_9 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[1]),
        .O(\deskew_enable_gen.step_count[2]_i_9_n_0 ));
  FDRE \deskew_enable_gen.step_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.step_count[0]_i_1_n_0 ),
        .Q(step_count[0]),
        .R(reset_in));
  FDRE \deskew_enable_gen.step_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.step_count[1]_i_1_n_0 ),
        .Q(step_count[1]),
        .R(reset_in));
  FDRE \deskew_enable_gen.step_count_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.step_count[2]_i_1_n_0 ),
        .Q(step_count[2]),
        .R(reset_in));
  LUT5 #(
    .INIT(32'h80000000)) 
    \sio_slav_calib_fsm.master_ack_i_1 
       (.I0(\sio_slav_calib_fsm.master_ack_i_2_n_0 ),
        .I1(\sio_slav_calib_fsm.master_ack_i_3_n_0 ),
        .I2(\sio_slav_calib_fsm.master_ack_i_4_n_0 ),
        .I3(\sio_slav_calib_fsm.master_ack_i_5_n_0 ),
        .I4(\sio_slav_calib_fsm.master_ack_i_6_n_0 ),
        .O(\sio_slav_calib_fsm.master_ack_reg ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_ack_i_2 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [2]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [3]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [0]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [1]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [5]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [4]),
        .O(\sio_slav_calib_fsm.master_ack_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_ack_i_3 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [20]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [21]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [18]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [19]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [23]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [22]),
        .O(\sio_slav_calib_fsm.master_ack_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_ack_i_4 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [26]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [27]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [24]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [25]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [29]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [28]),
        .O(\sio_slav_calib_fsm.master_ack_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_ack_i_5 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [8]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [9]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [6]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [7]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [11]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [10]),
        .O(\sio_slav_calib_fsm.master_ack_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_ack_i_6 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [14]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [15]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [12]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [13]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [17]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [16]),
        .O(\sio_slav_calib_fsm.master_ack_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \sio_slav_calib_fsm.master_init_i_1 
       (.I0(\sio_slav_calib_fsm.master_init_i_2_n_0 ),
        .I1(\sio_slav_calib_fsm.master_init_i_3_n_0 ),
        .I2(\sio_slav_calib_fsm.master_init_i_4_n_0 ),
        .I3(\sio_slav_calib_fsm.master_init_i_5_n_0 ),
        .I4(\sio_slav_calib_fsm.master_init_i_6_n_0 ),
        .O(\sio_slav_calib_fsm.master_init_reg ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sio_slav_calib_fsm.master_init_i_2 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [2]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [3]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [0]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [1]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [5]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [4]),
        .O(\sio_slav_calib_fsm.master_init_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sio_slav_calib_fsm.master_init_i_3 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [20]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [21]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [18]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [19]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [23]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [22]),
        .O(\sio_slav_calib_fsm.master_init_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sio_slav_calib_fsm.master_init_i_4 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [26]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [27]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [24]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [25]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [29]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [28]),
        .O(\sio_slav_calib_fsm.master_init_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sio_slav_calib_fsm.master_init_i_5 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [8]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [9]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [6]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [7]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [11]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [10]),
        .O(\sio_slav_calib_fsm.master_init_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sio_slav_calib_fsm.master_init_i_6 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [14]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [15]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [12]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [13]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [17]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [16]),
        .O(\sio_slav_calib_fsm.master_init_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \sio_slav_calib_fsm.master_nack_i_1 
       (.I0(\sio_slav_calib_fsm.master_nack_i_2_n_0 ),
        .I1(\sio_slav_calib_fsm.master_nack_i_3_n_0 ),
        .I2(\sio_slav_calib_fsm.master_nack_i_4_n_0 ),
        .I3(\sio_slav_calib_fsm.master_nack_i_5_n_0 ),
        .I4(\sio_slav_calib_fsm.master_nack_i_6_n_0 ),
        .O(\sio_slav_calib_fsm.master_nack_reg ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \sio_slav_calib_fsm.master_nack_i_2 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [2]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [3]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [0]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [1]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [5]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [4]),
        .O(\sio_slav_calib_fsm.master_nack_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \sio_slav_calib_fsm.master_nack_i_3 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [20]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [21]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [18]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [19]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [23]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [22]),
        .O(\sio_slav_calib_fsm.master_nack_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \sio_slav_calib_fsm.master_nack_i_4 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [26]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [27]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [24]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [25]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [29]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [28]),
        .O(\sio_slav_calib_fsm.master_nack_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \sio_slav_calib_fsm.master_nack_i_5 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [8]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [9]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [6]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [7]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [11]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [10]),
        .O(\sio_slav_calib_fsm.master_nack_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \sio_slav_calib_fsm.master_nack_i_6 
       (.I0(\sio_io_stage.rx_user_data_flop_reg[29] [14]),
        .I1(\sio_io_stage.rx_user_data_flop_reg[29] [15]),
        .I2(\sio_io_stage.rx_user_data_flop_reg[29] [12]),
        .I3(\sio_io_stage.rx_user_data_flop_reg[29] [13]),
        .I4(\sio_io_stage.rx_user_data_flop_reg[29] [17]),
        .I5(\sio_io_stage.rx_user_data_flop_reg[29] [16]),
        .O(\sio_slav_calib_fsm.master_nack_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'hFF84)) 
    \state[2]_i_1 
       (.I0(calib_done),
        .I1(Q[0]),
        .I2(calib_error),
        .I3(\state_reg[1] ),
        .O(\state_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'hFF08)) 
    \state[7]_i_6 
       (.I0(calib_error),
        .I1(Q[0]),
        .I2(calib_done),
        .I3(Q[1]),
        .O(\state_reg[7] ));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_phy_if" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_phy_if
   (clk_ph_out,
    D,
    rx_user_reset,
    tx_phy_ready,
    rx_phy_ready,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    \calib_intr_gen.send_calib_reg ,
    SR,
    \calib_intr_gen.send_ch0_reg ,
    \calib_intr_gen.send_calib_reg_0 ,
    \calib_intr_gen.tx_ch0_data_reg[20] ,
    aw_fifo_reset_reg,
    \calib_intr_gen.send_intr_reg ,
    \calib_intr_gen.tx_ch0_data_reg[4]_0 ,
    axi_c2c_selio_tx_clk_out,
    axi_c2c_selio_tx_data_out,
    Q,
    idelay_ref_clk,
    reset,
    axi_c2c_selio_rx_data_in,
    \calib_intr_gen.intr_flop_reg ,
    tx_ch0_valid,
    \calib_intr_gen.intr_flop_reg_0 ,
    m_aresetn,
    data_in,
    axi_c2c_selio_rx_clk_in,
    m_aclk);
  output clk_ph_out;
  output [1:0]D;
  output rx_user_reset;
  output tx_phy_ready;
  output rx_phy_ready;
  output \calib_intr_gen.tx_ch0_data_reg[4] ;
  output [1:0]\calib_intr_gen.send_calib_reg ;
  output [0:0]SR;
  output \calib_intr_gen.send_ch0_reg ;
  output \calib_intr_gen.send_calib_reg_0 ;
  output \calib_intr_gen.tx_ch0_data_reg[20] ;
  output aw_fifo_reset_reg;
  output \calib_intr_gen.send_intr_reg ;
  output \calib_intr_gen.tx_ch0_data_reg[4]_0 ;
  output axi_c2c_selio_tx_clk_out;
  output [14:0]axi_c2c_selio_tx_data_out;
  output [29:0]Q;
  input idelay_ref_clk;
  input reset;
  input [14:0]axi_c2c_selio_rx_data_in;
  input \calib_intr_gen.intr_flop_reg ;
  input tx_ch0_valid;
  input \calib_intr_gen.intr_flop_reg_0 ;
  input m_aresetn;
  input [29:0]data_in;
  input axi_c2c_selio_rx_clk_in;
  input m_aclk;

  wire [1:0]D;
  wire [29:0]Q;
  wire [0:0]SR;
  wire aw_fifo_reset_reg;
  wire axi_c2c_selio_rx_clk_in;
  wire [14:0]axi_c2c_selio_rx_data_in;
  wire axi_c2c_selio_tx_clk_out;
  wire [14:0]axi_c2c_selio_tx_data_out;
  wire axi_chip2chip_phy_init_inst_n_14;
  wire [29:0]calib_data;
  wire calib_done;
  wire calib_error;
  wire \calib_intr_gen.intr_flop_reg ;
  wire \calib_intr_gen.intr_flop_reg_0 ;
  wire [1:0]\calib_intr_gen.send_calib_reg ;
  wire \calib_intr_gen.send_calib_reg_0 ;
  wire \calib_intr_gen.send_ch0_reg ;
  wire \calib_intr_gen.send_intr_reg ;
  wire \calib_intr_gen.tx_ch0_data_reg[20] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4]_0 ;
  wire calib_start;
  wire channel_up;
  wire clk_ph_out;
  wire [29:0]data_in;
  wire [28:0]delay_load;
  wire [4:0]delay_tap;
  wire [2:2]grp_count_mul;
  wire idelay_ref_clk;
  wire m_aclk;
  wire m_aresetn;
  wire master_ack;
  wire [2:2]next_state;
  wire p0_val0;
  wire p2_val0;
  wire reset;
  wire rx_phy_ready;
  wire rx_user_reset;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_10 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_11 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_12 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_13 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_14 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_15 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_16 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_17 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_18 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_19 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_20 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_21 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_22 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_23 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_24 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_25 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_26 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_27 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_28 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_29 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_3 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_30 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_31 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_32 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_33 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_34 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_35 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_36 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_37 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_38 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_39 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_85 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_86 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_87 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_2 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_3 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_34 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_35 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_36 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_39 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_40 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_41 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_42 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_43 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_44 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_45 ;
  wire [7:2]state;
  wire tx_ch0_valid;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_phy_init axi_chip2chip_phy_init_inst
       (.D(D),
        .Q({state[7],state[2]}),
        .SR(SR),
        .aw_fifo_reset_reg(aw_fifo_reset_reg),
        .calib_done(calib_done),
        .calib_error(calib_error),
        .\calib_intr_gen.intr_flop_reg (\calib_intr_gen.intr_flop_reg ),
        .\calib_intr_gen.intr_flop_reg_0 (\calib_intr_gen.intr_flop_reg_0 ),
        .\calib_intr_gen.send_calib_reg (\calib_intr_gen.send_calib_reg [1]),
        .\calib_intr_gen.send_calib_reg_0 (\calib_intr_gen.send_calib_reg [0]),
        .\calib_intr_gen.send_calib_reg_1 (\calib_intr_gen.send_calib_reg_0 ),
        .\calib_intr_gen.send_ch0_reg (\calib_intr_gen.send_ch0_reg ),
        .\calib_intr_gen.send_intr_reg (\calib_intr_gen.send_intr_reg ),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\calib_intr_gen.tx_ch0_data_reg[4] ),
        .calib_start(calib_start),
        .channel_up(channel_up),
        .clk_ph_out(clk_ph_out),
        .\deskew_enable_gen.calib_done_reg (next_state),
        .\deskew_enable_gen.calib_error_reg (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_3 ),
        .\deskew_enable_gen.data_out_reg[2] (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_85 ),
        .\deskew_enable_gen.data_out_reg[2]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_86 ),
        .\deskew_enable_gen.data_out_reg[2]_1 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_87 ),
        .m_aclk(m_aclk),
        .master_ack(master_ack),
        .reset_in(rx_user_reset),
        .rx_phy_ready(rx_phy_ready),
        .\sio_slav_calib_fsm.master_ack_reg_0 (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_2 ),
        .\state_reg[2]_0 (axi_chip2chip_phy_init_inst_n_14),
        .tx_ch0_valid(tx_ch0_valid),
        .tx_phy_ready(tx_phy_ready));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_phy_calib \slave_sio_phy.axi_chip2chip_phy_calib_inst 
       (.CO(p0_val0),
        .D(p2_val0),
        .Q({state[7],state[2]}),
        .S({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_42 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_43 }),
        .calib_done(calib_done),
        .calib_error(calib_error),
        .calib_start(calib_start),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[0] (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_34 ),
        .\data_out_reg[12] (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_35 ),
        .\data_out_reg[12]_0 (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_44 ),
        .\data_out_reg[13] (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_45 ),
        .\data_out_reg[24] (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_3 ),
        .\data_out_reg[24]_0 (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_39 ),
        .\data_out_reg[28] ({delay_load[28],delay_load[26],delay_load[24],delay_load[22],delay_load[20],delay_load[18],delay_load[16],delay_load[14],delay_load[12],delay_load[10],delay_load[8],delay_load[6],delay_load[4],delay_load[2],delay_load[0]}),
        .\data_out_reg[29] (calib_data),
        .\data_out_reg[7] ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_40 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_41 }),
        .\deskew_enable_gen.data_flip_sel_reg[16]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_14 ),
        .\deskew_enable_gen.data_flip_sel_reg[24]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_10 ),
        .\deskew_enable_gen.data_flip_sel_reg[25]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_11 ),
        .\deskew_enable_gen.data_flip_sel_reg[26]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_12 ),
        .\deskew_enable_gen.data_flip_sel_reg[27]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_30 ),
        .\deskew_enable_gen.data_flip_sel_reg[28]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_31 ),
        .\deskew_enable_gen.data_flip_sel_reg[29]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_28 ),
        .\deskew_enable_gen.delay_load_reg[22]_0 (grp_count_mul),
        .\deskew_enable_gen.f0_val_reg[0]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_37 ),
        .\deskew_enable_gen.f0_val_reg[0]_1 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_38 ),
        .\deskew_enable_gen.f0_val_reg[0]_2 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_39 ),
        .\deskew_enable_gen.grp_p0_val_reg_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_15 ),
        .\deskew_enable_gen.grp_p0_val_reg_1 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_17 ),
        .\deskew_enable_gen.grp_p0_val_reg_2 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_18 ),
        .\deskew_enable_gen.grp_p0_val_reg_3 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_19 ),
        .\deskew_enable_gen.max_value_0_reg[4]_0 (delay_tap),
        .\deskew_enable_gen.p0_val_reg[0]_0 ({\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_32 ,\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_33 }),
        .\deskew_enable_gen.p0_val_reg[0]_1 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_36 ),
        .\deskew_enable_gen.p1_val_reg[0]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_13 ),
        .\deskew_enable_gen.p1_val_reg[0]_1 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_16 ),
        .\deskew_enable_gen.p1_val_reg[0]_2 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_20 ),
        .\deskew_enable_gen.p1_val_reg[0]_3 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_21 ),
        .\deskew_enable_gen.p1_val_reg[0]_4 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_23 ),
        .\deskew_enable_gen.p1_val_reg[0]_5 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_25 ),
        .\deskew_enable_gen.p1_val_reg[0]_6 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_26 ),
        .\deskew_enable_gen.p1_val_reg[0]_7 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_34 ),
        .\deskew_enable_gen.p1_val_reg[0]_8 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_35 ),
        .\deskew_enable_gen.p2_val_reg[0]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_29 ),
        .\deskew_enable_gen.p3_val_reg[0]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_22 ),
        .\deskew_enable_gen.p3_val_reg[0]_1 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_24 ),
        .\deskew_enable_gen.p3_val_reg[0]_2 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_27 ),
        .reset_in(rx_user_reset),
        .\sio_io_stage.rx_user_data_flop_reg[29] (Q),
        .\sio_slav_calib_fsm.master_ack_reg (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_85 ),
        .\sio_slav_calib_fsm.master_init_reg (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_86 ),
        .\sio_slav_calib_fsm.master_nack_reg (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_87 ),
        .\state_reg[1] (axi_chip2chip_phy_init_inst_n_14),
        .\state_reg[2] (next_state),
        .\state_reg[7] (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_3 ));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_sio_input \slave_sio_phy.axi_chip2chip_sio_input_inst 
       (.CO(p0_val0),
        .D(p2_val0),
        .Q(calib_data),
        .S({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_42 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_43 }),
        .axi_c2c_selio_rx_clk_in(axi_c2c_selio_rx_clk_in),
        .axi_c2c_selio_rx_data_in(axi_c2c_selio_rx_data_in),
        .channel_up(channel_up),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18]_0 ({\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_32 ,\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_33 }),
        .\data_out_reg[23]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_29 ),
        .\data_out_reg[3]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_36 ),
        .\deskew_enable_gen.delay_load_reg[28] ({delay_load[28],delay_load[26],delay_load[24],delay_load[22],delay_load[20],delay_load[18],delay_load[16],delay_load[14],delay_load[12],delay_load[10],delay_load[8],delay_load[6],delay_load[4],delay_load[2],delay_load[0]}),
        .\deskew_enable_gen.delay_tap_reg[4] (delay_tap),
        .\deskew_enable_gen.grp_count_reg[0] (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_11 ),
        .\deskew_enable_gen.grp_count_reg[0]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_12 ),
        .\deskew_enable_gen.grp_count_reg[0]_1 (grp_count_mul),
        .\deskew_enable_gen.grp_count_reg[0]_2 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_34 ),
        .\deskew_enable_gen.grp_count_reg[1] (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_15 ),
        .\deskew_enable_gen.grp_count_reg[1]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_22 ),
        .\deskew_enable_gen.grp_count_reg[2] (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_10 ),
        .\deskew_enable_gen.grp_count_reg[2]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_18 ),
        .\deskew_enable_gen.grp_count_reg[2]_1 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_19 ),
        .\deskew_enable_gen.grp_count_reg[2]_10 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_20 ),
        .\deskew_enable_gen.grp_count_reg[2]_11 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_37 ),
        .\deskew_enable_gen.grp_count_reg[2]_12 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_38 ),
        .\deskew_enable_gen.grp_count_reg[2]_13 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_39 ),
        .\deskew_enable_gen.grp_count_reg[2]_14 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_27 ),
        .\deskew_enable_gen.grp_count_reg[2]_15 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_24 ),
        .\deskew_enable_gen.grp_count_reg[2]_2 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_30 ),
        .\deskew_enable_gen.grp_count_reg[2]_3 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_31 ),
        .\deskew_enable_gen.grp_count_reg[2]_4 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_25 ),
        .\deskew_enable_gen.grp_count_reg[2]_5 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_21 ),
        .\deskew_enable_gen.grp_count_reg[2]_6 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_13 ),
        .\deskew_enable_gen.grp_count_reg[2]_7 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_26 ),
        .\deskew_enable_gen.grp_count_reg[2]_8 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_23 ),
        .\deskew_enable_gen.grp_count_reg[2]_9 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_16 ),
        .\deskew_enable_gen.grp_count_reg[3] (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_17 ),
        .\deskew_enable_gen.grp_count_reg[3]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_35 ),
        .\deskew_enable_gen.grp_count_reg[4] (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_14 ),
        .\deskew_enable_gen.grp_count_reg[4]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_28 ),
        .\deskew_enable_gen.p1_val_reg[0] (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_3 ),
        .\deskew_enable_gen.p1_val_reg[0]_0 (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_34 ),
        .\deskew_enable_gen.p1_val_reg[0]_1 (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_35 ),
        .\deskew_enable_gen.p2_val_reg[0] (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_45 ),
        .\deskew_enable_gen.p3_val_reg[0] (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_39 ),
        .\deskew_enable_gen.p3_val_reg[0]_0 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_40 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_41 }),
        .\deskew_enable_gen.p3_val_reg[0]_1 (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_44 ),
        .idelay_ref_clk(idelay_ref_clk),
        .m_aresetn(m_aresetn),
        .master_ack(master_ack),
        .reset(reset),
        .\state_reg[1] (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_2 ),
        .\sync_reset_flop_reg[6] (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_36 ));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_sio_output \slave_sio_phy.axi_chip2chip_sio_output_inst 
       (.axi_c2c_selio_tx_clk_out(axi_c2c_selio_tx_clk_out),
        .axi_c2c_selio_tx_data_out(axi_c2c_selio_tx_data_out),
        .data_in(data_in),
        .m_aresetn(clk_ph_out),
        .reset_in(rx_user_reset));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_reset_sync_0 \slave_sio_phy.rx_reset_sync_inst 
       (.\calib_intr_gen.intr_flop_reg (\calib_intr_gen.intr_flop_reg_0 ),
        .\calib_intr_gen.tx_ch0_data_reg[20] (\calib_intr_gen.tx_ch0_data_reg[20] ),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .\deskew_enable_gen.delay_load_reg[0] (rx_user_reset),
        .m_aresetn(clk_ph_out),
        .m_aresetn_0(\slave_sio_phy.axi_chip2chip_sio_input_inst_n_36 ),
        .tx_ch0_valid(tx_ch0_valid),
        .\tx_phy_ctrl_reg[2] (\calib_intr_gen.tx_ch0_data_reg[4] ));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_phy_init" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_phy_init
   (D,
    master_ack,
    calib_start,
    tx_phy_ready,
    rx_phy_ready,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    \calib_intr_gen.send_calib_reg ,
    \calib_intr_gen.send_calib_reg_0 ,
    SR,
    \calib_intr_gen.send_ch0_reg ,
    \calib_intr_gen.send_calib_reg_1 ,
    Q,
    \state_reg[2]_0 ,
    aw_fifo_reset_reg,
    \calib_intr_gen.send_intr_reg ,
    \deskew_enable_gen.data_out_reg[2] ,
    clk_ph_out,
    \deskew_enable_gen.data_out_reg[2]_0 ,
    \deskew_enable_gen.data_out_reg[2]_1 ,
    reset_in,
    \calib_intr_gen.intr_flop_reg ,
    \deskew_enable_gen.calib_done_reg ,
    \sio_slav_calib_fsm.master_ack_reg_0 ,
    channel_up,
    \deskew_enable_gen.calib_error_reg ,
    calib_error,
    calib_done,
    tx_ch0_valid,
    \calib_intr_gen.intr_flop_reg_0 ,
    m_aclk);
  output [1:0]D;
  output master_ack;
  output calib_start;
  output tx_phy_ready;
  output rx_phy_ready;
  output \calib_intr_gen.tx_ch0_data_reg[4] ;
  output \calib_intr_gen.send_calib_reg ;
  output \calib_intr_gen.send_calib_reg_0 ;
  output [0:0]SR;
  output \calib_intr_gen.send_ch0_reg ;
  output \calib_intr_gen.send_calib_reg_1 ;
  output [1:0]Q;
  output \state_reg[2]_0 ;
  output aw_fifo_reset_reg;
  output \calib_intr_gen.send_intr_reg ;
  input \deskew_enable_gen.data_out_reg[2] ;
  input clk_ph_out;
  input \deskew_enable_gen.data_out_reg[2]_0 ;
  input \deskew_enable_gen.data_out_reg[2]_1 ;
  input reset_in;
  input \calib_intr_gen.intr_flop_reg ;
  input [0:0]\deskew_enable_gen.calib_done_reg ;
  input \sio_slav_calib_fsm.master_ack_reg_0 ;
  input channel_up;
  input \deskew_enable_gen.calib_error_reg ;
  input calib_error;
  input calib_done;
  input tx_ch0_valid;
  input \calib_intr_gen.intr_flop_reg_0 ;
  input m_aclk;

  wire [1:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  (* DONT_TOUCH *) (* async_reg = "true" *) wire aurora_rst_out_cdc_to;
  (* DONT_TOUCH *) (* async_reg = "true" *) wire aurora_rst_out_r1;
  (* DONT_TOUCH *) (* async_reg = "true" *) wire aurora_rst_out_r2;
  wire aw_fifo_reset_reg;
  wire calib_done;
  wire calib_done_flop;
  wire calib_done_flop_i_1_n_0;
  wire calib_error;
  wire calib_error_flop;
  wire calib_error_flop_i_1_n_0;
  wire \calib_intr_gen.intr_flop_reg ;
  wire \calib_intr_gen.intr_flop_reg_0 ;
  wire \calib_intr_gen.send_calib_reg ;
  wire \calib_intr_gen.send_calib_reg_0 ;
  wire \calib_intr_gen.send_calib_reg_1 ;
  wire \calib_intr_gen.send_ch0_reg ;
  wire \calib_intr_gen.send_intr_reg ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire calib_start;
  wire channel_up;
  wire clk_ph_out;
  wire [0:0]\deskew_enable_gen.calib_done_reg ;
  wire \deskew_enable_gen.calib_error_reg ;
  wire \deskew_enable_gen.data_out_reg[2] ;
  wire \deskew_enable_gen.data_out_reg[2]_0 ;
  wire \deskew_enable_gen.data_out_reg[2]_1 ;
  wire m_aclk;
  wire master_ack;
  wire master_init;
  wire master_nack;
  wire next_calib_start;
  wire next_pat_count;
  wire [7:0]next_state;
  wire [3:0]p_0_in;
  wire \pat_count[2]_i_1_n_0 ;
  wire [3:0]pat_count_reg__0;
  wire reset_in;
  wire rx_phy_ready;
  wire rx_phy_ready_i_1_n_0;
  wire \sio_slav_calib_fsm.master_ack_reg_0 ;
  wire [6:0]state;
  wire \state[1]_i_2_n_0 ;
  wire \state[7]_i_1_n_0 ;
  wire \state[7]_i_3_n_0 ;
  wire \state[7]_i_4_n_0 ;
  wire \state[7]_i_5_n_0 ;
  wire \state_reg[2]_0 ;
  wire tx_ch0_valid;
  wire [0:0]tx_phy_ctrl;
  wire \tx_phy_ctrl[0]_i_1_n_0 ;
  wire \tx_phy_ctrl[1]_i_1_n_0 ;
  wire \tx_phy_ctrl[2]_i_1_n_0 ;
  wire tx_phy_ready;
  wire tx_phy_ready_i_1_n_0;
  wire tx_phy_ready_i_2_n_0;

  LUT1 #(
    .INIT(2'h1)) 
    aw_fifo_reset_i_1
       (.I0(rx_phy_ready),
        .O(aw_fifo_reset_reg));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_sync_cell__parameterized0 axi_chip2chip_sync_cell_inst
       (.D(D),
        .in0({calib_done_flop,calib_error_flop}),
        .m_aclk(m_aclk));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000100)) 
    calib_done_flop_i_1
       (.I0(tx_phy_ready_i_2_n_0),
        .I1(state[6]),
        .I2(Q[1]),
        .I3(state[5]),
        .I4(state[0]),
        .I5(calib_done_flop),
        .O(calib_done_flop_i_1_n_0));
  FDCE calib_done_flop_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(reset_in),
        .D(calib_done_flop_i_1_n_0),
        .Q(calib_done_flop));
  LUT6 #(
    .INIT(64'hFFFFFEFF00000010)) 
    calib_error_flop_i_1
       (.I0(tx_phy_ready_i_2_n_0),
        .I1(state[6]),
        .I2(Q[1]),
        .I3(state[5]),
        .I4(state[0]),
        .I5(calib_error_flop),
        .O(calib_error_flop_i_1_n_0));
  FDRE calib_error_flop_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(calib_error_flop_i_1_n_0),
        .Q(calib_error_flop),
        .R(reset_in));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'hAAAB)) 
    \calib_intr_gen.cal_nibble[3]_i_1 
       (.I0(reset_in),
        .I1(tx_phy_ctrl),
        .I2(\calib_intr_gen.send_calib_reg_0 ),
        .I3(\calib_intr_gen.send_calib_reg ),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \calib_intr_gen.send_calib_i_1 
       (.I0(\calib_intr_gen.send_calib_reg ),
        .I1(\calib_intr_gen.send_calib_reg_0 ),
        .I2(tx_phy_ctrl),
        .O(\calib_intr_gen.send_calib_reg_1 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \calib_intr_gen.send_ch0_i_1 
       (.I0(tx_phy_ctrl),
        .I1(\calib_intr_gen.send_calib_reg_0 ),
        .I2(\calib_intr_gen.send_calib_reg ),
        .I3(\calib_intr_gen.intr_flop_reg ),
        .O(\calib_intr_gen.send_ch0_reg ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \calib_intr_gen.send_intr_i_1 
       (.I0(tx_ch0_valid),
        .I1(\calib_intr_gen.intr_flop_reg_0 ),
        .I2(\calib_intr_gen.send_calib_reg ),
        .I3(\calib_intr_gen.send_calib_reg_0 ),
        .I4(tx_phy_ctrl),
        .I5(reset_in),
        .O(\calib_intr_gen.send_intr_reg ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT5 #(
    .INIT(32'hFFFF0100)) 
    \calib_intr_gen.tx_ch0_data[20]_i_1 
       (.I0(\calib_intr_gen.send_calib_reg ),
        .I1(\calib_intr_gen.send_calib_reg_0 ),
        .I2(tx_phy_ctrl),
        .I3(\calib_intr_gen.intr_flop_reg ),
        .I4(reset_in),
        .O(\calib_intr_gen.tx_ch0_data_reg[4] ));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    calib_start_i_1
       (.I0(state[3]),
        .I1(state[4]),
        .I2(state[1]),
        .I3(Q[0]),
        .I4(state[0]),
        .I5(\state[7]_i_4_n_0 ),
        .O(next_calib_start));
  FDRE calib_start_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(next_calib_start),
        .Q(calib_start),
        .R(reset_in));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(aurora_rst_out_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(aurora_rst_out_r1));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(aurora_rst_out_r2));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \pat_count[0]_i_1 
       (.I0(pat_count_reg__0[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pat_count[1]_i_1 
       (.I0(pat_count_reg__0[0]),
        .I1(pat_count_reg__0[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \pat_count[2]_i_1 
       (.I0(pat_count_reg__0[0]),
        .I1(pat_count_reg__0[1]),
        .I2(pat_count_reg__0[2]),
        .O(\pat_count[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \pat_count[3]_i_1 
       (.I0(state[3]),
        .I1(state[4]),
        .I2(Q[0]),
        .I3(state[1]),
        .I4(state[0]),
        .I5(\state[7]_i_4_n_0 ),
        .O(next_pat_count));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \pat_count[3]_i_2 
       (.I0(pat_count_reg__0[1]),
        .I1(pat_count_reg__0[0]),
        .I2(pat_count_reg__0[2]),
        .I3(pat_count_reg__0[3]),
        .O(p_0_in[3]));
  FDRE \pat_count_reg[0] 
       (.C(clk_ph_out),
        .CE(next_pat_count),
        .D(p_0_in[0]),
        .Q(pat_count_reg__0[0]),
        .R(reset_in));
  FDRE \pat_count_reg[1] 
       (.C(clk_ph_out),
        .CE(next_pat_count),
        .D(p_0_in[1]),
        .Q(pat_count_reg__0[1]),
        .R(reset_in));
  FDRE \pat_count_reg[2] 
       (.C(clk_ph_out),
        .CE(next_pat_count),
        .D(\pat_count[2]_i_1_n_0 ),
        .Q(pat_count_reg__0[2]),
        .R(reset_in));
  FDRE \pat_count_reg[3] 
       (.C(clk_ph_out),
        .CE(next_pat_count),
        .D(p_0_in[3]),
        .Q(pat_count_reg__0[3]),
        .R(reset_in));
  LUT6 #(
    .INIT(64'hFFFEFFEF00000100)) 
    rx_phy_ready_i_1
       (.I0(state[6]),
        .I1(tx_phy_ready_i_2_n_0),
        .I2(Q[1]),
        .I3(state[5]),
        .I4(state[0]),
        .I5(rx_phy_ready),
        .O(rx_phy_ready_i_1_n_0));
  FDCE rx_phy_ready_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(reset_in),
        .D(rx_phy_ready_i_1_n_0),
        .Q(rx_phy_ready));
  FDRE \sio_slav_calib_fsm.master_ack_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_out_reg[2] ),
        .Q(master_ack),
        .R(1'b0));
  FDRE \sio_slav_calib_fsm.master_init_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_out_reg[2]_0 ),
        .Q(master_init),
        .R(1'b0));
  FDRE \sio_slav_calib_fsm.master_nack_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_out_reg[2]_1 ),
        .Q(master_nack),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h2A)) 
    \state[0]_i_1 
       (.I0(state[0]),
        .I1(master_ack),
        .I2(channel_up),
        .O(next_state[0]));
  LUT6 #(
    .INIT(64'hFFFFF700F700F700)) 
    \state[1]_i_1 
       (.I0(pat_count_reg__0[3]),
        .I1(pat_count_reg__0[2]),
        .I2(\state[1]_i_2_n_0 ),
        .I3(state[1]),
        .I4(\sio_slav_calib_fsm.master_ack_reg_0 ),
        .I5(state[0]),
        .O(next_state[1]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \state[1]_i_2 
       (.I0(pat_count_reg__0[1]),
        .I1(pat_count_reg__0[0]),
        .O(\state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \state[2]_i_2 
       (.I0(state[1]),
        .I1(pat_count_reg__0[2]),
        .I2(pat_count_reg__0[3]),
        .I3(pat_count_reg__0[0]),
        .I4(pat_count_reg__0[1]),
        .O(\state_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h40FF4040)) 
    \state[3]_i_1 
       (.I0(calib_error),
        .I1(calib_done),
        .I2(Q[0]),
        .I3(master_nack),
        .I4(state[3]),
        .O(next_state[3]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT5 #(
    .INIT(32'hF8888F88)) 
    \state[4]_i_1 
       (.I0(state[3]),
        .I1(master_nack),
        .I2(master_init),
        .I3(state[4]),
        .I4(master_ack),
        .O(next_state[4]));
  LUT2 #(
    .INIT(4'hE)) 
    \state[5]_i_1 
       (.I0(state[5]),
        .I1(state[6]),
        .O(next_state[5]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \state[6]_i_1 
       (.I0(master_ack),
        .I1(state[4]),
        .I2(master_init),
        .O(next_state[6]));
  LUT6 #(
    .INIT(64'h0000000C000C0CAA)) 
    \state[7]_i_1 
       (.I0(\state[7]_i_3_n_0 ),
        .I1(\state[7]_i_4_n_0 ),
        .I2(\state[7]_i_5_n_0 ),
        .I3(state[0]),
        .I4(state[1]),
        .I5(Q[0]),
        .O(\state[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hAAEA)) 
    \state[7]_i_2 
       (.I0(\deskew_enable_gen.calib_error_reg ),
        .I1(master_init),
        .I2(state[4]),
        .I3(master_ack),
        .O(next_state[7]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \state[7]_i_3 
       (.I0(Q[1]),
        .I1(state[5]),
        .I2(state[6]),
        .I3(state[4]),
        .I4(state[3]),
        .O(\state[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \state[7]_i_4 
       (.I0(Q[1]),
        .I1(state[5]),
        .I2(state[6]),
        .O(\state[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \state[7]_i_5 
       (.I0(state[3]),
        .I1(state[4]),
        .O(\state[7]_i_5_n_0 ));
  FDSE \state_reg[0] 
       (.C(clk_ph_out),
        .CE(\state[7]_i_1_n_0 ),
        .D(next_state[0]),
        .Q(state[0]),
        .S(reset_in));
  FDRE \state_reg[1] 
       (.C(clk_ph_out),
        .CE(\state[7]_i_1_n_0 ),
        .D(next_state[1]),
        .Q(state[1]),
        .R(reset_in));
  FDRE \state_reg[2] 
       (.C(clk_ph_out),
        .CE(\state[7]_i_1_n_0 ),
        .D(\deskew_enable_gen.calib_done_reg ),
        .Q(Q[0]),
        .R(reset_in));
  FDRE \state_reg[3] 
       (.C(clk_ph_out),
        .CE(\state[7]_i_1_n_0 ),
        .D(next_state[3]),
        .Q(state[3]),
        .R(reset_in));
  FDRE \state_reg[4] 
       (.C(clk_ph_out),
        .CE(\state[7]_i_1_n_0 ),
        .D(next_state[4]),
        .Q(state[4]),
        .R(reset_in));
  FDRE \state_reg[5] 
       (.C(clk_ph_out),
        .CE(\state[7]_i_1_n_0 ),
        .D(next_state[5]),
        .Q(state[5]),
        .R(reset_in));
  FDRE \state_reg[6] 
       (.C(clk_ph_out),
        .CE(\state[7]_i_1_n_0 ),
        .D(next_state[6]),
        .Q(state[6]),
        .R(reset_in));
  FDRE \state_reg[7] 
       (.C(clk_ph_out),
        .CE(\state[7]_i_1_n_0 ),
        .D(next_state[7]),
        .Q(Q[1]),
        .R(reset_in));
  LUT6 #(
    .INIT(64'hFEFFFFFFFEFF0000)) 
    \tx_phy_ctrl[0]_i_1 
       (.I0(\state[7]_i_5_n_0 ),
        .I1(Q[0]),
        .I2(state[1]),
        .I3(state[5]),
        .I4(\state[7]_i_1_n_0 ),
        .I5(tx_phy_ctrl),
        .O(\tx_phy_ctrl[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFFFE00)) 
    \tx_phy_ctrl[1]_i_1 
       (.I0(state[3]),
        .I1(Q[1]),
        .I2(state[6]),
        .I3(\state[7]_i_1_n_0 ),
        .I4(\calib_intr_gen.send_calib_reg_0 ),
        .O(\tx_phy_ctrl[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFE0)) 
    \tx_phy_ctrl[2]_i_1 
       (.I0(state[4]),
        .I1(Q[1]),
        .I2(\state[7]_i_1_n_0 ),
        .I3(\calib_intr_gen.send_calib_reg ),
        .O(\tx_phy_ctrl[2]_i_1_n_0 ));
  FDPE \tx_phy_ctrl_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tx_phy_ctrl[0]_i_1_n_0 ),
        .PRE(reset_in),
        .Q(tx_phy_ctrl));
  FDCE \tx_phy_ctrl_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(reset_in),
        .D(\tx_phy_ctrl[1]_i_1_n_0 ),
        .Q(\calib_intr_gen.send_calib_reg_0 ));
  FDCE \tx_phy_ctrl_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(reset_in),
        .D(\tx_phy_ctrl[2]_i_1_n_0 ),
        .Q(\calib_intr_gen.send_calib_reg ));
  LUT6 #(
    .INIT(64'hFFFF8FFF00008000)) 
    tx_phy_ready_i_1
       (.I0(channel_up),
        .I1(master_ack),
        .I2(state[0]),
        .I3(\state[7]_i_4_n_0 ),
        .I4(tx_phy_ready_i_2_n_0),
        .I5(tx_phy_ready),
        .O(tx_phy_ready_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    tx_phy_ready_i_2
       (.I0(state[1]),
        .I1(Q[0]),
        .I2(state[4]),
        .I3(state[3]),
        .O(tx_phy_ready_i_2_n_0));
  FDCE tx_phy_ready_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(reset_in),
        .D(tx_phy_ready_i_1_n_0),
        .Q(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_reset_sync" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_reset_sync
   (sync_reset_out,
    m_axi_lite_aclk,
    axi_c2c_link_status_out);
  output sync_reset_out;
  input m_axi_lite_aclk;
  input axi_c2c_link_status_out;

  wire axi_c2c_link_status_out;
  wire m_axi_lite_aclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [7:0]sync_reset_flop;
  wire \sync_reset_flop[7]_i_1_n_0 ;
  wire sync_reset_out;

  LUT1 #(
    .INIT(2'h1)) 
    \sync_reset_flop[7]_i_1 
       (.I0(axi_c2c_link_status_out),
        .O(\sync_reset_flop[7]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\sync_reset_flop[7]_i_1_n_0 ),
        .Q(sync_reset_flop[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[0]),
        .PRE(\sync_reset_flop[7]_i_1_n_0 ),
        .Q(sync_reset_flop[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[1]),
        .PRE(\sync_reset_flop[7]_i_1_n_0 ),
        .Q(sync_reset_flop[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[2]),
        .PRE(\sync_reset_flop[7]_i_1_n_0 ),
        .Q(sync_reset_flop[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[3]),
        .PRE(\sync_reset_flop[7]_i_1_n_0 ),
        .Q(sync_reset_flop[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[4]),
        .PRE(\sync_reset_flop[7]_i_1_n_0 ),
        .Q(sync_reset_flop[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[6] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[5]),
        .PRE(\sync_reset_flop[7]_i_1_n_0 ),
        .Q(sync_reset_flop[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[7] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[6]),
        .PRE(\sync_reset_flop[7]_i_1_n_0 ),
        .Q(sync_reset_flop[7]));
  FDPE sync_reset_out_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[7]),
        .PRE(\sync_reset_flop[7]_i_1_n_0 ),
        .Q(sync_reset_out));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_reset_sync" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_reset_sync_0
   (\deskew_enable_gen.delay_load_reg[0] ,
    \calib_intr_gen.tx_ch0_data_reg[20] ,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    m_aresetn,
    m_aresetn_0,
    \calib_intr_gen.intr_flop_reg ,
    tx_ch0_valid,
    \tx_phy_ctrl_reg[2] );
  output \deskew_enable_gen.delay_load_reg[0] ;
  output \calib_intr_gen.tx_ch0_data_reg[20] ;
  output \calib_intr_gen.tx_ch0_data_reg[4] ;
  input m_aresetn;
  input m_aresetn_0;
  input \calib_intr_gen.intr_flop_reg ;
  input tx_ch0_valid;
  input \tx_phy_ctrl_reg[2] ;

  wire \calib_intr_gen.intr_flop_reg ;
  wire \calib_intr_gen.tx_ch0_data_reg[20] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire \deskew_enable_gen.delay_load_reg[0] ;
  wire m_aresetn;
  wire m_aresetn_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [7:0]sync_reset_flop;
  wire tx_ch0_valid;
  wire \tx_phy_ctrl_reg[2] ;

  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \axi_chip2chip_ch0_ctrl_inst/calib_intr_gen.tx_ch0_data[19]_i_1 
       (.I0(\deskew_enable_gen.delay_load_reg[0] ),
        .I1(\calib_intr_gen.intr_flop_reg ),
        .I2(tx_ch0_valid),
        .I3(\tx_phy_ctrl_reg[2] ),
        .O(\calib_intr_gen.tx_ch0_data_reg[4] ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \calib_intr_gen.tx_ch0_data[20]_i_2 
       (.I0(\deskew_enable_gen.delay_load_reg[0] ),
        .O(\calib_intr_gen.tx_ch0_data_reg[20] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[0] 
       (.C(m_aresetn),
        .CE(1'b1),
        .D(1'b0),
        .PRE(m_aresetn_0),
        .Q(sync_reset_flop[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[1] 
       (.C(m_aresetn),
        .CE(1'b1),
        .D(sync_reset_flop[0]),
        .PRE(m_aresetn_0),
        .Q(sync_reset_flop[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[2] 
       (.C(m_aresetn),
        .CE(1'b1),
        .D(sync_reset_flop[1]),
        .PRE(m_aresetn_0),
        .Q(sync_reset_flop[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[3] 
       (.C(m_aresetn),
        .CE(1'b1),
        .D(sync_reset_flop[2]),
        .PRE(m_aresetn_0),
        .Q(sync_reset_flop[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[4] 
       (.C(m_aresetn),
        .CE(1'b1),
        .D(sync_reset_flop[3]),
        .PRE(m_aresetn_0),
        .Q(sync_reset_flop[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[5] 
       (.C(m_aresetn),
        .CE(1'b1),
        .D(sync_reset_flop[4]),
        .PRE(m_aresetn_0),
        .Q(sync_reset_flop[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[6] 
       (.C(m_aresetn),
        .CE(1'b1),
        .D(sync_reset_flop[5]),
        .PRE(m_aresetn_0),
        .Q(sync_reset_flop[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[7] 
       (.C(m_aresetn),
        .CE(1'b1),
        .D(sync_reset_flop[6]),
        .PRE(m_aresetn_0),
        .Q(sync_reset_flop[7]));
  FDPE sync_reset_out_reg
       (.C(m_aresetn),
        .CE(1'b1),
        .D(sync_reset_flop[7]),
        .PRE(m_aresetn_0),
        .Q(\deskew_enable_gen.delay_load_reg[0] ));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_sio_input" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_sio_input
   (channel_up,
    clk_ph_out,
    \state_reg[1] ,
    \deskew_enable_gen.p1_val_reg[0] ,
    Q,
    \deskew_enable_gen.p1_val_reg[0]_0 ,
    \deskew_enable_gen.p1_val_reg[0]_1 ,
    \sync_reset_flop_reg[6] ,
    D,
    CO,
    \deskew_enable_gen.p3_val_reg[0] ,
    \deskew_enable_gen.p3_val_reg[0]_0 ,
    S,
    \deskew_enable_gen.p3_val_reg[0]_1 ,
    \deskew_enable_gen.p2_val_reg[0] ,
    idelay_ref_clk,
    reset,
    axi_c2c_selio_rx_data_in,
    \deskew_enable_gen.delay_load_reg[28] ,
    \deskew_enable_gen.delay_tap_reg[4] ,
    master_ack,
    \deskew_enable_gen.grp_count_reg[2] ,
    \deskew_enable_gen.grp_count_reg[0] ,
    \deskew_enable_gen.grp_count_reg[0]_0 ,
    \deskew_enable_gen.grp_count_reg[1] ,
    \deskew_enable_gen.grp_count_reg[4] ,
    \deskew_enable_gen.grp_count_reg[0]_1 ,
    \deskew_enable_gen.grp_count_reg[3] ,
    \deskew_enable_gen.grp_count_reg[2]_0 ,
    \deskew_enable_gen.grp_count_reg[2]_1 ,
    m_aresetn,
    \data_out_reg[23]_0 ,
    \data_out_reg[3]_0 ,
    \data_out_reg[18]_0 ,
    \deskew_enable_gen.grp_count_reg[4]_0 ,
    \deskew_enable_gen.grp_count_reg[2]_2 ,
    \deskew_enable_gen.grp_count_reg[2]_3 ,
    \deskew_enable_gen.grp_count_reg[2]_4 ,
    \deskew_enable_gen.grp_count_reg[2]_5 ,
    \deskew_enable_gen.grp_count_reg[2]_6 ,
    \deskew_enable_gen.grp_count_reg[2]_7 ,
    \deskew_enable_gen.grp_count_reg[2]_8 ,
    \deskew_enable_gen.grp_count_reg[2]_9 ,
    \deskew_enable_gen.grp_count_reg[2]_10 ,
    \deskew_enable_gen.grp_count_reg[0]_2 ,
    \deskew_enable_gen.grp_count_reg[3]_0 ,
    \deskew_enable_gen.grp_count_reg[2]_11 ,
    \deskew_enable_gen.grp_count_reg[2]_12 ,
    \deskew_enable_gen.grp_count_reg[2]_13 ,
    \deskew_enable_gen.grp_count_reg[1]_0 ,
    \deskew_enable_gen.grp_count_reg[2]_14 ,
    \deskew_enable_gen.grp_count_reg[2]_15 ,
    axi_c2c_selio_rx_clk_in);
  output channel_up;
  output clk_ph_out;
  output \state_reg[1] ;
  output [0:0]\deskew_enable_gen.p1_val_reg[0] ;
  output [29:0]Q;
  output [0:0]\deskew_enable_gen.p1_val_reg[0]_0 ;
  output [0:0]\deskew_enable_gen.p1_val_reg[0]_1 ;
  output \sync_reset_flop_reg[6] ;
  output [0:0]D;
  output [0:0]CO;
  output [0:0]\deskew_enable_gen.p3_val_reg[0] ;
  output [1:0]\deskew_enable_gen.p3_val_reg[0]_0 ;
  output [1:0]S;
  output [0:0]\deskew_enable_gen.p3_val_reg[0]_1 ;
  output [0:0]\deskew_enable_gen.p2_val_reg[0] ;
  input idelay_ref_clk;
  input reset;
  input [14:0]axi_c2c_selio_rx_data_in;
  input [14:0]\deskew_enable_gen.delay_load_reg[28] ;
  input [4:0]\deskew_enable_gen.delay_tap_reg[4] ;
  input master_ack;
  input \deskew_enable_gen.grp_count_reg[2] ;
  input \deskew_enable_gen.grp_count_reg[0] ;
  input \deskew_enable_gen.grp_count_reg[0]_0 ;
  input \deskew_enable_gen.grp_count_reg[1] ;
  input \deskew_enable_gen.grp_count_reg[4] ;
  input [0:0]\deskew_enable_gen.grp_count_reg[0]_1 ;
  input \deskew_enable_gen.grp_count_reg[3] ;
  input \deskew_enable_gen.grp_count_reg[2]_0 ;
  input \deskew_enable_gen.grp_count_reg[2]_1 ;
  input m_aresetn;
  input [0:0]\data_out_reg[23]_0 ;
  input [0:0]\data_out_reg[3]_0 ;
  input [1:0]\data_out_reg[18]_0 ;
  input \deskew_enable_gen.grp_count_reg[4]_0 ;
  input \deskew_enable_gen.grp_count_reg[2]_2 ;
  input \deskew_enable_gen.grp_count_reg[2]_3 ;
  input \deskew_enable_gen.grp_count_reg[2]_4 ;
  input \deskew_enable_gen.grp_count_reg[2]_5 ;
  input \deskew_enable_gen.grp_count_reg[2]_6 ;
  input \deskew_enable_gen.grp_count_reg[2]_7 ;
  input \deskew_enable_gen.grp_count_reg[2]_8 ;
  input \deskew_enable_gen.grp_count_reg[2]_9 ;
  input \deskew_enable_gen.grp_count_reg[2]_10 ;
  input \deskew_enable_gen.grp_count_reg[0]_2 ;
  input \deskew_enable_gen.grp_count_reg[3]_0 ;
  input \deskew_enable_gen.grp_count_reg[2]_11 ;
  input \deskew_enable_gen.grp_count_reg[2]_12 ;
  input \deskew_enable_gen.grp_count_reg[2]_13 ;
  input \deskew_enable_gen.grp_count_reg[1]_0 ;
  input \deskew_enable_gen.grp_count_reg[2]_14 ;
  input \deskew_enable_gen.grp_count_reg[2]_15 ;
  input axi_c2c_selio_rx_clk_in;

  wire [0:0]CO;
  wire [0:0]D;
  wire [29:0]Q;
  wire [1:0]S;
  wire axi_c2c_selio_rx_clk_in;
  wire [14:0]axi_c2c_selio_rx_data_in;
  wire channel_up;
  wire clk_ph_out;
  wire [29:0]data_in_iddr;
  wire [1:0]\data_out_reg[18]_0 ;
  wire [0:0]\data_out_reg[23]_0 ;
  wire [0:0]\data_out_reg[3]_0 ;
  wire [14:0]\deskew_enable_gen.delay_load_reg[28] ;
  wire [4:0]\deskew_enable_gen.delay_tap_reg[4] ;
  wire \deskew_enable_gen.grp_count_reg[0] ;
  wire \deskew_enable_gen.grp_count_reg[0]_0 ;
  wire [0:0]\deskew_enable_gen.grp_count_reg[0]_1 ;
  wire \deskew_enable_gen.grp_count_reg[0]_2 ;
  wire \deskew_enable_gen.grp_count_reg[1] ;
  wire \deskew_enable_gen.grp_count_reg[1]_0 ;
  wire \deskew_enable_gen.grp_count_reg[2] ;
  wire \deskew_enable_gen.grp_count_reg[2]_0 ;
  wire \deskew_enable_gen.grp_count_reg[2]_1 ;
  wire \deskew_enable_gen.grp_count_reg[2]_10 ;
  wire \deskew_enable_gen.grp_count_reg[2]_11 ;
  wire \deskew_enable_gen.grp_count_reg[2]_12 ;
  wire \deskew_enable_gen.grp_count_reg[2]_13 ;
  wire \deskew_enable_gen.grp_count_reg[2]_14 ;
  wire \deskew_enable_gen.grp_count_reg[2]_15 ;
  wire \deskew_enable_gen.grp_count_reg[2]_2 ;
  wire \deskew_enable_gen.grp_count_reg[2]_3 ;
  wire \deskew_enable_gen.grp_count_reg[2]_4 ;
  wire \deskew_enable_gen.grp_count_reg[2]_5 ;
  wire \deskew_enable_gen.grp_count_reg[2]_6 ;
  wire \deskew_enable_gen.grp_count_reg[2]_7 ;
  wire \deskew_enable_gen.grp_count_reg[2]_8 ;
  wire \deskew_enable_gen.grp_count_reg[2]_9 ;
  wire \deskew_enable_gen.grp_count_reg[3] ;
  wire \deskew_enable_gen.grp_count_reg[3]_0 ;
  wire \deskew_enable_gen.grp_count_reg[4] ;
  wire \deskew_enable_gen.grp_count_reg[4]_0 ;
  wire \deskew_enable_gen.p0_val[0]_i_10_n_0 ;
  wire \deskew_enable_gen.p0_val[0]_i_11_n_0 ;
  wire \deskew_enable_gen.p0_val[0]_i_13_n_0 ;
  wire \deskew_enable_gen.p0_val[0]_i_3_n_0 ;
  wire \deskew_enable_gen.p0_val[0]_i_4_n_0 ;
  wire \deskew_enable_gen.p0_val[0]_i_6_n_0 ;
  wire \deskew_enable_gen.p0_val[0]_i_8_n_0 ;
  wire \deskew_enable_gen.p0_val_reg[0]_i_1_n_3 ;
  wire \deskew_enable_gen.p0_val_reg[0]_i_2_n_0 ;
  wire \deskew_enable_gen.p0_val_reg[0]_i_2_n_1 ;
  wire \deskew_enable_gen.p0_val_reg[0]_i_2_n_2 ;
  wire \deskew_enable_gen.p0_val_reg[0]_i_2_n_3 ;
  wire \deskew_enable_gen.p0_val_reg[0]_i_5_n_0 ;
  wire \deskew_enable_gen.p0_val_reg[0]_i_5_n_1 ;
  wire \deskew_enable_gen.p0_val_reg[0]_i_5_n_2 ;
  wire \deskew_enable_gen.p0_val_reg[0]_i_5_n_3 ;
  wire [0:0]\deskew_enable_gen.p1_val_reg[0] ;
  wire [0:0]\deskew_enable_gen.p1_val_reg[0]_0 ;
  wire [0:0]\deskew_enable_gen.p1_val_reg[0]_1 ;
  wire \deskew_enable_gen.p2_val[0]_i_3_n_0 ;
  wire \deskew_enable_gen.p2_val[0]_i_4_n_0 ;
  wire [0:0]\deskew_enable_gen.p2_val_reg[0] ;
  wire \deskew_enable_gen.p2_val_reg[0]_i_1_n_3 ;
  wire [0:0]\deskew_enable_gen.p3_val_reg[0] ;
  wire [1:0]\deskew_enable_gen.p3_val_reg[0]_0 ;
  wire [0:0]\deskew_enable_gen.p3_val_reg[0]_1 ;
  wire idelay_ref_clk;
  wire m_aresetn;
  wire master_ack;
  wire p_0_out;
  wire p_10_out;
  wire p_11_out;
  wire p_12_out;
  wire p_13_out;
  wire p_14_out;
  wire p_15_out;
  wire p_16_out;
  wire p_17_out;
  wire p_18_out;
  wire p_19_out;
  wire p_1_out;
  wire p_20_out;
  wire p_21_out;
  wire p_22_out;
  wire p_23_out;
  wire p_24_out;
  wire p_25_out;
  wire p_26_out;
  wire p_27_out;
  wire p_28_out;
  wire p_29_out;
  wire p_2_out;
  wire p_3_out;
  wire p_4_out;
  wire p_5_out;
  wire p_6_out;
  wire p_7_out;
  wire p_8_out;
  wire p_9_out;
  wire reset;
  wire \state_reg[1] ;
  wire \sync_reset_flop_reg[6] ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[0].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[10].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[11].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[12].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[13].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[14].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[1].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[2].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[3].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[4].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[5].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[6].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[7].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[8].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[9].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [3:2]\NLW_deskew_enable_gen.p0_val_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p0_val_reg[0]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p0_val_reg[0]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p0_val_reg[0]_i_5_O_UNCONNECTED ;
  wire [3:2]\NLW_deskew_enable_gen.p2_val_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p2_val_reg[0]_i_1_O_UNCONNECTED ;
  wire NLW_inv_bufgce_inst_O_UNCONNECTED;

  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_clk_gen axi_chip2chip_clk_gen_inst
       (.axi_c2c_selio_rx_clk_in(axi_c2c_selio_rx_clk_in),
        .clk_ph_out(clk_ph_out),
        .m_aresetn(m_aresetn),
        .reset(reset),
        .\sync_reset_flop_reg[6] (\sync_reset_flop_reg[6] ));
  FDRE \data_out_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \data_out_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \data_out_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \data_out_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \data_out_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \data_out_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \data_out_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \data_out_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \data_out_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \data_out_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \data_out_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \data_out_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \data_out_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \data_out_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \data_out_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \data_out_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \data_out_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \data_out_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \data_out_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \data_out_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \data_out_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \data_out_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \data_out_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \data_out_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \data_out_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \data_out_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \data_out_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \data_out_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \data_out_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \data_out_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[9]),
        .Q(Q[9]),
        .R(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[0].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_29_out),
        .Q1(data_in_iddr[0]),
        .Q2(data_in_iddr[1]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[10].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_19_out),
        .Q1(data_in_iddr[20]),
        .Q2(data_in_iddr[21]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[11].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_18_out),
        .Q1(data_in_iddr[22]),
        .Q2(data_in_iddr[23]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[12].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_17_out),
        .Q1(data_in_iddr[24]),
        .Q2(data_in_iddr[25]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[13].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_16_out),
        .Q1(data_in_iddr[26]),
        .Q2(data_in_iddr[27]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[14].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_15_out),
        .Q1(data_in_iddr[28]),
        .Q2(data_in_iddr[29]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[1].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_28_out),
        .Q1(data_in_iddr[2]),
        .Q2(data_in_iddr[3]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[2].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_27_out),
        .Q1(data_in_iddr[4]),
        .Q2(data_in_iddr[5]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[3].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_26_out),
        .Q1(data_in_iddr[6]),
        .Q2(data_in_iddr[7]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[4].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_25_out),
        .Q1(data_in_iddr[8]),
        .Q2(data_in_iddr[9]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[5].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_24_out),
        .Q1(data_in_iddr[10]),
        .Q2(data_in_iddr[11]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[6].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_23_out),
        .Q1(data_in_iddr[12]),
        .Q2(data_in_iddr[13]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[7].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_22_out),
        .Q1(data_in_iddr[14]),
        .Q2(data_in_iddr[15]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[8].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_21_out),
        .Q1(data_in_iddr[16]),
        .Q2(data_in_iddr[17]),
        .R(1'b0),
        .S(1'b0));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[9].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_20_out),
        .Q1(data_in_iddr[18]),
        .Q2(data_in_iddr[19]),
        .R(1'b0),
        .S(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[0].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[0].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_29_out),
        .IDATAIN(p_14_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [0]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[10].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[10].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_19_out),
        .IDATAIN(p_4_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [10]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[11].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[11].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_18_out),
        .IDATAIN(p_3_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [11]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[12].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[12].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_17_out),
        .IDATAIN(p_2_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [12]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[13].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[13].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_16_out),
        .IDATAIN(p_1_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [13]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[14].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[14].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_15_out),
        .IDATAIN(p_0_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [14]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[1].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[1].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_28_out),
        .IDATAIN(p_13_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [1]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[2].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[2].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_27_out),
        .IDATAIN(p_12_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [2]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[3].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[3].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_26_out),
        .IDATAIN(p_11_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [3]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[4].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[4].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_25_out),
        .IDATAIN(p_10_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [4]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[5].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[5].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_24_out),
        .IDATAIN(p_9_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [5]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[6].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[6].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_23_out),
        .IDATAIN(p_8_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [6]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[7].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[7].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_22_out),
        .IDATAIN(p_7_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [7]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[8].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[8].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_21_out),
        .IDATAIN(p_6_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [8]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[9].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\deskew_enable_gen.delay_tap_reg[4] ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[9].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_20_out),
        .IDATAIN(p_5_out),
        .INC(1'b0),
        .LD(\deskew_enable_gen.delay_load_reg[28] [9]),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  LUT6 #(
    .INIT(64'h0777000007770777)) 
    \deskew_enable_gen.p0_val[0]_i_10 
       (.I0(Q[9]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I2(Q[11]),
        .I3(\deskew_enable_gen.grp_count_reg[2]_14 ),
        .I4(Q[10]),
        .I5(\deskew_enable_gen.grp_count_reg[2]_15 ),
        .O(\deskew_enable_gen.p0_val[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h7077000070777077)) 
    \deskew_enable_gen.p0_val[0]_i_11 
       (.I0(Q[7]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_7 ),
        .I2(Q[6]),
        .I3(\deskew_enable_gen.grp_count_reg[2]_8 ),
        .I4(Q[8]),
        .I5(\deskew_enable_gen.grp_count_reg[2]_9 ),
        .O(\deskew_enable_gen.p0_val[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20FFFFFF)) 
    \deskew_enable_gen.p0_val[0]_i_13 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\deskew_enable_gen.grp_count_reg[1] ),
        .I4(\deskew_enable_gen.grp_count_reg[4] ),
        .I5(\deskew_enable_gen.grp_count_reg[0]_1 ),
        .O(\deskew_enable_gen.p0_val[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hDD0D0000DD0DDD0D)) 
    \deskew_enable_gen.p0_val[0]_i_3 
       (.I0(Q[27]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .I2(Q[29]),
        .I3(\deskew_enable_gen.grp_count_reg[4]_0 ),
        .I4(Q[28]),
        .I5(\deskew_enable_gen.grp_count_reg[2]_3 ),
        .O(\deskew_enable_gen.p0_val[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0EEE00000EEE0EEE)) 
    \deskew_enable_gen.p0_val[0]_i_4 
       (.I0(Q[26]),
        .I1(\deskew_enable_gen.grp_count_reg[0]_0 ),
        .I2(Q[25]),
        .I3(\deskew_enable_gen.grp_count_reg[0] ),
        .I4(Q[24]),
        .I5(\deskew_enable_gen.grp_count_reg[2] ),
        .O(\deskew_enable_gen.p0_val[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0777000007770777)) 
    \deskew_enable_gen.p0_val[0]_i_6 
       (.I0(Q[21]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_11 ),
        .I2(Q[23]),
        .I3(\deskew_enable_gen.grp_count_reg[2]_12 ),
        .I4(Q[22]),
        .I5(\deskew_enable_gen.grp_count_reg[2]_13 ),
        .O(\deskew_enable_gen.p0_val[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0777000007770777)) 
    \deskew_enable_gen.p0_val[0]_i_8 
       (.I0(Q[15]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_4 ),
        .I2(Q[17]),
        .I3(\deskew_enable_gen.grp_count_reg[2]_5 ),
        .I4(Q[16]),
        .I5(\deskew_enable_gen.grp_count_reg[2]_6 ),
        .O(\deskew_enable_gen.p0_val[0]_i_8_n_0 ));
  CARRY4 \deskew_enable_gen.p0_val_reg[0]_i_1 
       (.CI(\deskew_enable_gen.p0_val_reg[0]_i_2_n_0 ),
        .CO({\NLW_deskew_enable_gen.p0_val_reg[0]_i_1_CO_UNCONNECTED [3:2],CO,\deskew_enable_gen.p0_val_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p0_val_reg[0]_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.p0_val[0]_i_3_n_0 ,\deskew_enable_gen.p0_val[0]_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.p0_val_reg[0]_i_2 
       (.CI(\deskew_enable_gen.p0_val_reg[0]_i_5_n_0 ),
        .CO({\deskew_enable_gen.p0_val_reg[0]_i_2_n_0 ,\deskew_enable_gen.p0_val_reg[0]_i_2_n_1 ,\deskew_enable_gen.p0_val_reg[0]_i_2_n_2 ,\deskew_enable_gen.p0_val_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p0_val_reg[0]_i_2_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.p0_val[0]_i_6_n_0 ,\data_out_reg[18]_0 [1],\deskew_enable_gen.p0_val[0]_i_8_n_0 ,\data_out_reg[18]_0 [0]}));
  CARRY4 \deskew_enable_gen.p0_val_reg[0]_i_5 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.p0_val_reg[0]_i_5_n_0 ,\deskew_enable_gen.p0_val_reg[0]_i_5_n_1 ,\deskew_enable_gen.p0_val_reg[0]_i_5_n_2 ,\deskew_enable_gen.p0_val_reg[0]_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p0_val_reg[0]_i_5_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.p0_val[0]_i_10_n_0 ,\deskew_enable_gen.p0_val[0]_i_11_n_0 ,\data_out_reg[3]_0 ,\deskew_enable_gen.p0_val[0]_i_13_n_0 }));
  LUT6 #(
    .INIT(64'hFF7FFF3FFF3FFF3F)) 
    \deskew_enable_gen.p1_val[0]_i_13 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_reg[1] ),
        .I2(\deskew_enable_gen.grp_count_reg[4] ),
        .I3(\deskew_enable_gen.grp_count_reg[0]_1 ),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\deskew_enable_gen.p1_val_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h7707770777070000)) 
    \deskew_enable_gen.p1_val[0]_i_4 
       (.I0(Q[24]),
        .I1(\deskew_enable_gen.grp_count_reg[2] ),
        .I2(\deskew_enable_gen.grp_count_reg[0] ),
        .I3(Q[25]),
        .I4(Q[26]),
        .I5(\deskew_enable_gen.grp_count_reg[0]_0 ),
        .O(\deskew_enable_gen.p1_val_reg[0] ));
  LUT6 #(
    .INIT(64'h7707770777070000)) 
    \deskew_enable_gen.p1_val[0]_i_9 
       (.I0(Q[12]),
        .I1(\deskew_enable_gen.grp_count_reg[3] ),
        .I2(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I3(Q[13]),
        .I4(Q[14]),
        .I5(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .O(\deskew_enable_gen.p1_val_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h7077000070777077)) 
    \deskew_enable_gen.p2_val[0]_i_12 
       (.I0(Q[5]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_10 ),
        .I2(Q[3]),
        .I3(\deskew_enable_gen.grp_count_reg[0]_2 ),
        .I4(Q[4]),
        .I5(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .O(S[1]));
  LUT6 #(
    .INIT(64'hFF10FFFFFFFFFFFF)) 
    \deskew_enable_gen.p2_val[0]_i_13 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_reg[0]_1 ),
        .I4(\deskew_enable_gen.grp_count_reg[4] ),
        .I5(\deskew_enable_gen.grp_count_reg[1] ),
        .O(S[0]));
  LUT6 #(
    .INIT(64'hDDD00000DDD0DDD0)) 
    \deskew_enable_gen.p2_val[0]_i_3 
       (.I0(Q[29]),
        .I1(\deskew_enable_gen.grp_count_reg[4]_0 ),
        .I2(Q[27]),
        .I3(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .I4(Q[28]),
        .I5(\deskew_enable_gen.grp_count_reg[2]_3 ),
        .O(\deskew_enable_gen.p2_val[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7707000077077707)) 
    \deskew_enable_gen.p2_val[0]_i_4 
       (.I0(Q[25]),
        .I1(\deskew_enable_gen.grp_count_reg[0] ),
        .I2(Q[26]),
        .I3(\deskew_enable_gen.grp_count_reg[0]_0 ),
        .I4(Q[24]),
        .I5(\deskew_enable_gen.grp_count_reg[2] ),
        .O(\deskew_enable_gen.p2_val[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7707000077077707)) 
    \deskew_enable_gen.p2_val[0]_i_9 
       (.I0(Q[13]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I2(Q[14]),
        .I3(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I4(Q[12]),
        .I5(\deskew_enable_gen.grp_count_reg[3] ),
        .O(\deskew_enable_gen.p2_val_reg[0] ));
  CARRY4 \deskew_enable_gen.p2_val_reg[0]_i_1 
       (.CI(\data_out_reg[23]_0 ),
        .CO({\NLW_deskew_enable_gen.p2_val_reg[0]_i_1_CO_UNCONNECTED [3:2],D,\deskew_enable_gen.p2_val_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p2_val_reg[0]_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\deskew_enable_gen.p2_val[0]_i_3_n_0 ,\deskew_enable_gen.p2_val[0]_i_4_n_0 }));
  LUT6 #(
    .INIT(64'h7077000070777077)) 
    \deskew_enable_gen.p3_val[0]_i_11 
       (.I0(Q[7]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_7 ),
        .I2(Q[6]),
        .I3(\deskew_enable_gen.grp_count_reg[2]_8 ),
        .I4(Q[8]),
        .I5(\deskew_enable_gen.grp_count_reg[2]_9 ),
        .O(\deskew_enable_gen.p3_val_reg[0]_0 [1]));
  LUT6 #(
    .INIT(64'hFFBFFF3FFF3FFF3F)) 
    \deskew_enable_gen.p3_val[0]_i_13 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_reg[1] ),
        .I2(\deskew_enable_gen.grp_count_reg[4] ),
        .I3(\deskew_enable_gen.grp_count_reg[0]_1 ),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\deskew_enable_gen.p3_val_reg[0]_0 [0]));
  LUT6 #(
    .INIT(64'hBB0BBB0BBB0B0000)) 
    \deskew_enable_gen.p3_val[0]_i_4 
       (.I0(Q[24]),
        .I1(\deskew_enable_gen.grp_count_reg[2] ),
        .I2(\deskew_enable_gen.grp_count_reg[0] ),
        .I3(Q[25]),
        .I4(Q[26]),
        .I5(\deskew_enable_gen.grp_count_reg[0]_0 ),
        .O(\deskew_enable_gen.p3_val_reg[0] ));
  LUT6 #(
    .INIT(64'hBB0BBB0BBB0B0000)) 
    \deskew_enable_gen.p3_val[0]_i_9 
       (.I0(Q[12]),
        .I1(\deskew_enable_gen.grp_count_reg[3] ),
        .I2(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I3(Q[13]),
        .I4(Q[14]),
        .I5(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .O(\deskew_enable_gen.p3_val_reg[0]_1 ));
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* box_type = "PRIMITIVE" *) 
  IDELAYCTRL #(
    .SIM_DEVICE("7SERIES")) 
    \idelayctrl_gen.IDELAYCTRL_inst 
       (.RDY(channel_up),
        .REFCLK(idelay_ref_clk),
        .RST(reset));
  (* XILINX_LEGACY_PRIM = "BUFGCE" *) 
  (* XILINX_TRANSFORM_PINMAP = "CE:CE0 I:I0" *) 
  (* box_type = "PRIMITIVE" *) 
  BUFGCTRL #(
    .INIT_OUT(0),
    .PRESELECT_I0("TRUE"),
    .PRESELECT_I1("FALSE")) 
    inv_bufgce_inst
       (.CE0(1'b1),
        .CE1(1'b0),
        .I0(clk_ph_out),
        .I1(1'b1),
        .IGNORE0(1'b0),
        .IGNORE1(1'b1),
        .O(NLW_inv_bufgce_inst_O_UNCONNECTED),
        .S0(1'b1),
        .S1(1'b0));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[0].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[0]),
        .O(p_14_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[10].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[10]),
        .O(p_4_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[11].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[11]),
        .O(p_3_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[12].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[12]),
        .O(p_2_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[13].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[13]),
        .O(p_1_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[14].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[14]),
        .O(p_0_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[1].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[1]),
        .O(p_13_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[2].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[2]),
        .O(p_12_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[3].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[3]),
        .O(p_11_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[4].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[4]),
        .O(p_10_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[5].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[5]),
        .O(p_9_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[6].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[6]),
        .O(p_8_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[7].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[7]),
        .O(p_7_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[8].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[8]),
        .O(p_6_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[9].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[9]),
        .O(p_5_out));
  LUT2 #(
    .INIT(4'h8)) 
    \state[1]_i_3 
       (.I0(channel_up),
        .I1(master_ack),
        .O(\state_reg[1] ));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_sio_output" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_sio_output
   (axi_c2c_selio_tx_clk_out,
    axi_c2c_selio_tx_data_out,
    m_aresetn,
    data_in,
    reset_in);
  output axi_c2c_selio_tx_clk_out;
  output [14:0]axi_c2c_selio_tx_data_out;
  input m_aresetn;
  input [29:0]data_in;
  input reset_in;

  wire axi_c2c_selio_tx_clk_out;
  wire [14:0]axi_c2c_selio_tx_data_out;
  wire clk_out_oddr;
  wire [14:0]data_fdre_oddr;
  wire [29:0]data_in;
  wire m_aresetn;
  wire reset_in;
  wire \NLW_ddr_output_gen.output_ddr_pins[0].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[10].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[11].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[12].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[13].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[14].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[1].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[2].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[3].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[4].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[5].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[6].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[7].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[8].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[9].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_gen_oddr.oddr_clk_out_inst_R_UNCONNECTED ;
  wire \NLW_gen_oddr.oddr_clk_out_inst_S_UNCONNECTED ;

  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[0].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[0]),
        .D2(data_in[1]),
        .Q(data_fdre_oddr[0]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[0].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[10].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[20]),
        .D2(data_in[21]),
        .Q(data_fdre_oddr[10]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[10].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[11].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[22]),
        .D2(data_in[23]),
        .Q(data_fdre_oddr[11]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[11].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[12].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[24]),
        .D2(data_in[25]),
        .Q(data_fdre_oddr[12]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[12].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[13].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[26]),
        .D2(data_in[27]),
        .Q(data_fdre_oddr[13]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[13].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[14].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[28]),
        .D2(data_in[29]),
        .Q(data_fdre_oddr[14]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[14].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[1].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[2]),
        .D2(data_in[3]),
        .Q(data_fdre_oddr[1]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[1].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[2].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[4]),
        .D2(data_in[5]),
        .Q(data_fdre_oddr[2]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[2].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[3].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[6]),
        .D2(data_in[7]),
        .Q(data_fdre_oddr[3]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[3].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[4].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[8]),
        .D2(data_in[9]),
        .Q(data_fdre_oddr[4]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[4].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[5].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[10]),
        .D2(data_in[11]),
        .Q(data_fdre_oddr[5]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[5].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[6].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[12]),
        .D2(data_in[13]),
        .Q(data_fdre_oddr[6]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[6].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[7].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[14]),
        .D2(data_in[15]),
        .Q(data_fdre_oddr[7]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[7].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[8].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[16]),
        .D2(data_in[17]),
        .Q(data_fdre_oddr[8]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[8].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "FALSE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[9].gen_oddr.oddr_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(data_in[18]),
        .D2(data_in[19]),
        .Q(data_fdre_oddr[9]),
        .R(reset_in),
        .S(\NLW_ddr_output_gen.output_ddr_pins[9].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* __SRVAL = "TRUE" *) 
  (* box_type = "PRIMITIVE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \gen_oddr.oddr_clk_out_inst 
       (.C(m_aresetn),
        .CE(1'b1),
        .D1(1'b1),
        .D2(1'b0),
        .Q(clk_out_oddr),
        .R(\NLW_gen_oddr.oddr_clk_out_inst_R_UNCONNECTED ),
        .S(\NLW_gen_oddr.oddr_clk_out_inst_S_UNCONNECTED ));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_clk_out_gen.clk_obuf_inst 
       (.I(clk_out_oddr),
        .O(axi_c2c_selio_tx_clk_out));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[0].obuf_inst 
       (.I(data_fdre_oddr[0]),
        .O(axi_c2c_selio_tx_data_out[0]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[10].obuf_inst 
       (.I(data_fdre_oddr[10]),
        .O(axi_c2c_selio_tx_data_out[10]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[11].obuf_inst 
       (.I(data_fdre_oddr[11]),
        .O(axi_c2c_selio_tx_data_out[11]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[12].obuf_inst 
       (.I(data_fdre_oddr[12]),
        .O(axi_c2c_selio_tx_data_out[12]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[13].obuf_inst 
       (.I(data_fdre_oddr[13]),
        .O(axi_c2c_selio_tx_data_out[13]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[14].obuf_inst 
       (.I(data_fdre_oddr[14]),
        .O(axi_c2c_selio_tx_data_out[14]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[1].obuf_inst 
       (.I(data_fdre_oddr[1]),
        .O(axi_c2c_selio_tx_data_out[1]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[2].obuf_inst 
       (.I(data_fdre_oddr[2]),
        .O(axi_c2c_selio_tx_data_out[2]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[3].obuf_inst 
       (.I(data_fdre_oddr[3]),
        .O(axi_c2c_selio_tx_data_out[3]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[4].obuf_inst 
       (.I(data_fdre_oddr[4]),
        .O(axi_c2c_selio_tx_data_out[4]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[5].obuf_inst 
       (.I(data_fdre_oddr[5]),
        .O(axi_c2c_selio_tx_data_out[5]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[6].obuf_inst 
       (.I(data_fdre_oddr[6]),
        .O(axi_c2c_selio_tx_data_out[6]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[7].obuf_inst 
       (.I(data_fdre_oddr[7]),
        .O(axi_c2c_selio_tx_data_out[7]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[8].obuf_inst 
       (.I(data_fdre_oddr[8]),
        .O(axi_c2c_selio_tx_data_out[8]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[9].obuf_inst 
       (.I(data_fdre_oddr[9]),
        .O(axi_c2c_selio_tx_data_out[9]));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_slave" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_slave
   (axi_lite_rx_valid,
    AR,
    \calib_intr_gen.intr_flop_reg ,
    axi_lite_tx_ready,
    \calib_intr_gen.tx_ch0_valid_reg ,
    tx_ch0_valid,
    axi_c2c_m2s_intr_out,
    \gpr1.dout_i_reg[19] ,
    \m_axi_awaddr[31] ,
    \m_axi_araddr[31] ,
    \m_axi_wdata[31] ,
    \axi_c2c_selio_tx_data_out[14] ,
    m_axi_awvalid,
    m_axi_arvalid,
    m_axi_wvalid,
    m_axi_rready,
    m_axi_bready,
    axi_c2c_s2m_intr_in,
    m_aclk,
    clk_ph_out,
    m_axi_rdata,
    DIADI,
    rx_user_reset,
    \tx_phy_ctrl_reg[0] ,
    \tx_phy_ctrl_reg[2] ,
    sync_reset_out_reg,
    sync_reset_out_reg_0,
    \goreg_dm.dout_i_reg[19] ,
    \goreg_dm.dout_i_reg[18] ,
    \goreg_dm.dout_i_reg[17] ,
    \goreg_dm.dout_i_reg[16] ,
    \goreg_dm.dout_i_reg[15] ,
    \goreg_dm.dout_i_reg[14] ,
    \goreg_dm.dout_i_reg[13] ,
    \goreg_dm.dout_i_reg[12] ,
    \goreg_dm.dout_i_reg[11] ,
    \goreg_dm.dout_i_reg[10] ,
    \goreg_dm.dout_i_reg[9] ,
    \goreg_dm.dout_i_reg[8] ,
    \goreg_dm.dout_i_reg[7] ,
    \goreg_dm.dout_i_reg[6] ,
    \goreg_dm.dout_i_reg[5] ,
    \goreg_dm.dout_i_reg[4] ,
    rx_phy_ready_reg,
    \tx_phy_ctrl_reg[2]_0 ,
    \calib_intr_gen.tx_ch0_valid_reg_0 ,
    tx_phy_ctrl,
    empty_fwft_i,
    tx_phy_ready,
    Q,
    rx_phy_ready,
    m_aresetn,
    m_axi_rvalid,
    m_axi_bvalid,
    SR,
    data_out,
    bfifo_data,
    m_axi_awready,
    m_axi_arready,
    m_axi_wready);
  output axi_lite_rx_valid;
  output [0:0]AR;
  output \calib_intr_gen.intr_flop_reg ;
  output axi_lite_tx_ready;
  output \calib_intr_gen.tx_ch0_valid_reg ;
  output tx_ch0_valid;
  output [3:0]axi_c2c_m2s_intr_out;
  output [19:0]\gpr1.dout_i_reg[19] ;
  output [44:0]\m_axi_awaddr[31] ;
  output [44:0]\m_axi_araddr[31] ;
  output [37:0]\m_axi_wdata[31] ;
  output [29:0]\axi_c2c_selio_tx_data_out[14] ;
  output m_axi_awvalid;
  output m_axi_arvalid;
  output m_axi_wvalid;
  output m_axi_rready;
  output m_axi_bready;
  input [3:0]axi_c2c_s2m_intr_in;
  input m_aclk;
  input clk_ph_out;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;
  input rx_user_reset;
  input \tx_phy_ctrl_reg[0] ;
  input \tx_phy_ctrl_reg[2] ;
  input sync_reset_out_reg;
  input sync_reset_out_reg_0;
  input \goreg_dm.dout_i_reg[19] ;
  input \goreg_dm.dout_i_reg[18] ;
  input \goreg_dm.dout_i_reg[17] ;
  input \goreg_dm.dout_i_reg[16] ;
  input \goreg_dm.dout_i_reg[15] ;
  input \goreg_dm.dout_i_reg[14] ;
  input \goreg_dm.dout_i_reg[13] ;
  input \goreg_dm.dout_i_reg[12] ;
  input \goreg_dm.dout_i_reg[11] ;
  input \goreg_dm.dout_i_reg[10] ;
  input \goreg_dm.dout_i_reg[9] ;
  input \goreg_dm.dout_i_reg[8] ;
  input \goreg_dm.dout_i_reg[7] ;
  input \goreg_dm.dout_i_reg[6] ;
  input \goreg_dm.dout_i_reg[5] ;
  input \goreg_dm.dout_i_reg[4] ;
  input rx_phy_ready_reg;
  input \tx_phy_ctrl_reg[2]_0 ;
  input \calib_intr_gen.tx_ch0_valid_reg_0 ;
  input [1:0]tx_phy_ctrl;
  input empty_fwft_i;
  input tx_phy_ready;
  input [3:0]Q;
  input rx_phy_ready;
  input m_aresetn;
  input m_axi_rvalid;
  input m_axi_bvalid;
  input [0:0]SR;
  input [29:0]data_out;
  input [2:0]bfifo_data;
  input m_axi_awready;
  input m_axi_arready;
  input m_axi_wready;

  wire [0:0]AR;
  wire [3:0]DIADI;
  wire [3:0]Q;
  wire [0:0]SR;
  wire ar_ch_data_valid;
  wire ar_ch_fc;
  wire aw_ch_data_valid;
  wire aw_ch_fc;
  wire [3:0]axi_c2c_m2s_intr_out;
  wire [3:0]axi_c2c_s2m_intr_in;
  wire [29:0]\axi_c2c_selio_tx_data_out[14] ;
  wire axi_chip2chip_ar_fifo_inst_n_0;
  wire axi_chip2chip_b_fifo_inst_n_0;
  wire axi_chip2chip_ch0_ctrl_inst_n_10;
  wire axi_chip2chip_ch0_ctrl_inst_n_11;
  wire axi_chip2chip_ch0_ctrl_inst_n_12;
  wire axi_chip2chip_ch0_ctrl_inst_n_13;
  wire axi_chip2chip_ch0_ctrl_inst_n_14;
  wire axi_chip2chip_ch0_ctrl_inst_n_15;
  wire axi_chip2chip_ch0_ctrl_inst_n_16;
  wire axi_chip2chip_ch0_ctrl_inst_n_17;
  wire axi_chip2chip_ch0_ctrl_inst_n_18;
  wire axi_chip2chip_ch0_ctrl_inst_n_19;
  wire axi_chip2chip_ch0_ctrl_inst_n_20;
  wire axi_chip2chip_ch0_ctrl_inst_n_21;
  wire axi_chip2chip_ch0_ctrl_inst_n_22;
  wire axi_chip2chip_ch0_ctrl_inst_n_23;
  wire axi_chip2chip_ch0_ctrl_inst_n_24;
  wire axi_chip2chip_ch0_ctrl_inst_n_25;
  wire axi_chip2chip_ch0_ctrl_inst_n_26;
  wire axi_chip2chip_ch0_ctrl_inst_n_27;
  wire axi_chip2chip_ch0_ctrl_inst_n_28;
  wire axi_chip2chip_ch0_ctrl_inst_n_29;
  wire axi_chip2chip_ch0_ctrl_inst_n_30;
  wire axi_chip2chip_ch0_ctrl_inst_n_31;
  wire axi_chip2chip_ch0_ctrl_inst_n_32;
  wire axi_chip2chip_ch0_ctrl_inst_n_33;
  wire axi_chip2chip_ch0_ctrl_inst_n_34;
  wire axi_chip2chip_ch0_ctrl_inst_n_36;
  wire axi_chip2chip_ch0_ctrl_inst_n_8;
  wire axi_chip2chip_ch0_ctrl_inst_n_9;
  wire axi_chip2chip_decoder_inst_n_30;
  wire \axi_chip2chip_packer_inst/p_0_in1_in ;
  wire \axi_chip2chip_packer_inst/p_0_in1_in_0 ;
  wire \axi_chip2chip_packer_inst/p_0_in1_in_1 ;
  wire axi_chip2chip_r_fifo_inst_n_0;
  wire axi_chip2chip_r_fifo_inst_n_1;
  wire axi_chip2chip_r_fifo_inst_n_10;
  wire axi_chip2chip_r_fifo_inst_n_11;
  wire axi_chip2chip_r_fifo_inst_n_12;
  wire axi_chip2chip_r_fifo_inst_n_13;
  wire axi_chip2chip_r_fifo_inst_n_14;
  wire axi_chip2chip_r_fifo_inst_n_15;
  wire axi_chip2chip_r_fifo_inst_n_16;
  wire axi_chip2chip_r_fifo_inst_n_17;
  wire axi_chip2chip_r_fifo_inst_n_18;
  wire axi_chip2chip_r_fifo_inst_n_2;
  wire axi_chip2chip_r_fifo_inst_n_3;
  wire axi_chip2chip_r_fifo_inst_n_4;
  wire axi_chip2chip_r_fifo_inst_n_5;
  wire axi_chip2chip_r_fifo_inst_n_6;
  wire axi_chip2chip_r_fifo_inst_n_7;
  wire axi_chip2chip_r_fifo_inst_n_8;
  wire axi_chip2chip_r_fifo_inst_n_9;
  wire axi_chip2chip_tdm_inst_n_5;
  wire axi_chip2chip_w_fifo_inst_n_0;
  wire axi_lite_rx_data_valid;
  wire axi_lite_rx_valid;
  wire axi_lite_tx_ready;
  wire [2:0]bfifo_data;
  wire [2:0]br_ch_data;
  wire br_ch_data_ready;
  wire br_ch_fc;
  wire br_fifo_reset;
  wire \calib_intr_gen.intr_flop_reg ;
  wire \calib_intr_gen.tx_ch0_valid_reg ;
  wire \calib_intr_gen.tx_ch0_valid_reg_0 ;
  wire [1:0]calib_pattern;
  wire clk_ph_out;
  wire [29:0]data_out;
  wire empty_fwft_i;
  wire \goreg_dm.dout_i_reg[10] ;
  wire \goreg_dm.dout_i_reg[11] ;
  wire \goreg_dm.dout_i_reg[12] ;
  wire \goreg_dm.dout_i_reg[13] ;
  wire \goreg_dm.dout_i_reg[14] ;
  wire \goreg_dm.dout_i_reg[15] ;
  wire \goreg_dm.dout_i_reg[16] ;
  wire \goreg_dm.dout_i_reg[17] ;
  wire \goreg_dm.dout_i_reg[18] ;
  wire \goreg_dm.dout_i_reg[19] ;
  wire \goreg_dm.dout_i_reg[4] ;
  wire \goreg_dm.dout_i_reg[5] ;
  wire \goreg_dm.dout_i_reg[6] ;
  wire \goreg_dm.dout_i_reg[7] ;
  wire \goreg_dm.dout_i_reg[8] ;
  wire \goreg_dm.dout_i_reg[9] ;
  wire [19:0]\gpr1.dout_i_reg[19] ;
  wire int_ch1_ready5;
  wire m_aclk;
  wire m_aresetn;
  wire [44:0]\m_axi_araddr[31] ;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire [44:0]\m_axi_awaddr[31] ;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire [31:0]m_axi_rdata;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire [37:0]\m_axi_wdata[31] ;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire [1:0]p_0_in;
  wire p_12_in;
  wire ram_full_i;
  wire rd_ch_data_ready;
  wire [22:0]rx_dec_data;
  wire rx_intr_data;
  wire rx_phy_ready;
  wire rx_phy_ready_reg;
  wire [4:0]rx_user_data_flop;
  wire rx_user_data_valid_flop;
  wire rx_user_reset;
  wire send_ch0;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[10] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[11] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[12] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[13] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[14] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[15] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[16] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[17] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[18] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[19] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[20] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[21] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[22] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[23] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[24] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[25] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[26] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[27] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[28] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[29] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[5] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[6] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[7] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[8] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[9] ;
  wire [2:1]slot_select;
  wire sync_reset_out_reg;
  wire sync_reset_out_reg_0;
  wire [29:0]tdm_data_out;
  wire tx_ch0_ready;
  wire tx_ch0_valid;
  wire [1:0]tx_phy_ctrl;
  wire \tx_phy_ctrl_reg[0] ;
  wire \tx_phy_ctrl_reg[2] ;
  wire \tx_phy_ctrl_reg[2]_0 ;
  wire tx_phy_ready;
  wire wd_ch_data_valid;
  wire wd_ch_fc;

  FDPE aw_fifo_reset_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rx_phy_ready_reg),
        .PRE(AR),
        .Q(br_fifo_reset));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_awr_fifo axi_chip2chip_ar_fifo_inst
       (.E(\axi_chip2chip_packer_inst/p_0_in1_in_0 ),
        .Q(rx_dec_data),
        .ar_ch_data_valid(ar_ch_data_valid),
        .ar_ch_fc(ar_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_reg[7] (axi_chip2chip_ar_fifo_inst_n_0),
        .m_aclk(m_aclk),
        .\m_axi_araddr[31] (\m_axi_araddr[31] ),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .rx_user_reset(rx_user_reset));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_awr_fifo_1 axi_chip2chip_aw_fifo_inst
       (.E(\axi_chip2chip_packer_inst/p_0_in1_in_1 ),
        .Q(rx_dec_data),
        .aw_ch_data_valid(aw_ch_data_valid),
        .aw_ch_fc(aw_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .m_aclk(m_aclk),
        .\m_axi_awaddr[31] (\m_axi_awaddr[31] ),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .ram_full_i(ram_full_i),
        .rx_user_reset(rx_user_reset));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_b_fifo axi_chip2chip_b_fifo_inst
       (.Q(br_ch_fc),
        .bfifo_data(bfifo_data),
        .br_ch_data(br_ch_data),
        .br_ch_data_ready(br_ch_data_ready),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gpregsm1.curr_fwft_state_reg[0] (axi_chip2chip_b_fifo_inst_n_0),
        .int_ch1_ready5(int_ch1_ready5),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .tx_phy_ready(tx_phy_ready));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_ch0_ctrl axi_chip2chip_ch0_ctrl_inst
       (.AR(AR),
        .D({axi_chip2chip_ch0_ctrl_inst_n_8,axi_chip2chip_ch0_ctrl_inst_n_9,axi_chip2chip_ch0_ctrl_inst_n_10,axi_chip2chip_ch0_ctrl_inst_n_11,axi_chip2chip_ch0_ctrl_inst_n_12,axi_chip2chip_ch0_ctrl_inst_n_13,axi_chip2chip_ch0_ctrl_inst_n_14,axi_chip2chip_ch0_ctrl_inst_n_15,axi_chip2chip_ch0_ctrl_inst_n_16,axi_chip2chip_ch0_ctrl_inst_n_17,axi_chip2chip_ch0_ctrl_inst_n_18,axi_chip2chip_ch0_ctrl_inst_n_19,axi_chip2chip_ch0_ctrl_inst_n_20,axi_chip2chip_ch0_ctrl_inst_n_21,axi_chip2chip_ch0_ctrl_inst_n_22,axi_chip2chip_ch0_ctrl_inst_n_23,axi_chip2chip_ch0_ctrl_inst_n_24,axi_chip2chip_ch0_ctrl_inst_n_25,axi_chip2chip_ch0_ctrl_inst_n_26,axi_chip2chip_ch0_ctrl_inst_n_27,axi_chip2chip_ch0_ctrl_inst_n_28,axi_chip2chip_ch0_ctrl_inst_n_29,axi_chip2chip_ch0_ctrl_inst_n_30,axi_chip2chip_ch0_ctrl_inst_n_31,axi_chip2chip_ch0_ctrl_inst_n_32,axi_chip2chip_ch0_ctrl_inst_n_33,axi_chip2chip_ch0_ctrl_inst_n_34}),
        .E(rx_intr_data),
        .Q(calib_pattern),
        .SR(SR),
        .ar_ch_fc(ar_ch_fc),
        .aw_ch_fc(aw_ch_fc),
        .axi_c2c_m2s_intr_out(axi_c2c_m2s_intr_out),
        .axi_c2c_s2m_intr_in(axi_c2c_s2m_intr_in),
        .axi_lite_rx_data_valid(axi_lite_rx_data_valid),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .axi_lite_tx_ready(axi_lite_tx_ready),
        .br_ch_data(br_ch_data),
        .\calib_intr_gen.axi_lite_tx_ready_reg_0 (tx_ch0_valid),
        .\calib_intr_gen.intr_flop_reg_0 (\calib_intr_gen.intr_flop_reg ),
        .\calib_intr_gen.tx_ch0_valid_reg_0 (\calib_intr_gen.tx_ch0_valid_reg ),
        .\calib_intr_gen.tx_ch0_valid_reg_1 (\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[19] (rx_dec_data[19:0]),
        .empty_fwft_i(empty_fwft_i),
        .\goreg_bm.dout_i_reg[18] (axi_chip2chip_r_fifo_inst_n_1),
        .\goreg_bm.dout_i_reg[19] (axi_chip2chip_r_fifo_inst_n_2),
        .\goreg_bm.dout_i_reg[20] (axi_chip2chip_r_fifo_inst_n_3),
        .\goreg_bm.dout_i_reg[21] (axi_chip2chip_r_fifo_inst_n_4),
        .\goreg_bm.dout_i_reg[22] (axi_chip2chip_r_fifo_inst_n_5),
        .\goreg_bm.dout_i_reg[23] (axi_chip2chip_r_fifo_inst_n_6),
        .\goreg_bm.dout_i_reg[24] (axi_chip2chip_r_fifo_inst_n_7),
        .\goreg_bm.dout_i_reg[25] (axi_chip2chip_r_fifo_inst_n_8),
        .\goreg_bm.dout_i_reg[26] (axi_chip2chip_r_fifo_inst_n_9),
        .\goreg_bm.dout_i_reg[27] (axi_chip2chip_r_fifo_inst_n_10),
        .\goreg_bm.dout_i_reg[28] (axi_chip2chip_r_fifo_inst_n_11),
        .\goreg_bm.dout_i_reg[29] (axi_chip2chip_r_fifo_inst_n_12),
        .\goreg_bm.dout_i_reg[30] (axi_chip2chip_r_fifo_inst_n_13),
        .\goreg_bm.dout_i_reg[31] (axi_chip2chip_r_fifo_inst_n_14),
        .\goreg_bm.dout_i_reg[32] (axi_chip2chip_r_fifo_inst_n_15),
        .\goreg_bm.dout_i_reg[33] (axi_chip2chip_r_fifo_inst_n_16),
        .\goreg_bm.dout_i_reg[34] (axi_chip2chip_r_fifo_inst_n_17),
        .\goreg_bm.dout_i_reg[35] (axi_chip2chip_r_fifo_inst_n_18),
        .\goreg_dm.dout_i_reg[10] (\goreg_dm.dout_i_reg[10] ),
        .\goreg_dm.dout_i_reg[11] (\goreg_dm.dout_i_reg[11] ),
        .\goreg_dm.dout_i_reg[12] (\goreg_dm.dout_i_reg[12] ),
        .\goreg_dm.dout_i_reg[13] (\goreg_dm.dout_i_reg[13] ),
        .\goreg_dm.dout_i_reg[14] (\goreg_dm.dout_i_reg[14] ),
        .\goreg_dm.dout_i_reg[15] (\goreg_dm.dout_i_reg[15] ),
        .\goreg_dm.dout_i_reg[16] (\goreg_dm.dout_i_reg[16] ),
        .\goreg_dm.dout_i_reg[17] (\goreg_dm.dout_i_reg[17] ),
        .\goreg_dm.dout_i_reg[18] (\goreg_dm.dout_i_reg[18] ),
        .\goreg_dm.dout_i_reg[19] (\goreg_dm.dout_i_reg[19] ),
        .\goreg_dm.dout_i_reg[3] (Q),
        .\goreg_dm.dout_i_reg[4] (\goreg_dm.dout_i_reg[4] ),
        .\goreg_dm.dout_i_reg[5] (\goreg_dm.dout_i_reg[5] ),
        .\goreg_dm.dout_i_reg[6] (\goreg_dm.dout_i_reg[6] ),
        .\goreg_dm.dout_i_reg[7] (\goreg_dm.dout_i_reg[7] ),
        .\goreg_dm.dout_i_reg[8] (\goreg_dm.dout_i_reg[8] ),
        .\goreg_dm.dout_i_reg[9] (\goreg_dm.dout_i_reg[9] ),
        .\gpr1.dout_i_reg[19] (\gpr1.dout_i_reg[19] ),
        .int_ch0_ready_reg(axi_chip2chip_ch0_ctrl_inst_n_36),
        .m_aclk(m_aclk),
        .m_aresetn(m_aresetn),
        .rx_user_reset(rx_user_reset),
        .send_ch0(send_ch0),
        .\slot_select_reg[2] ({slot_select[2],axi_chip2chip_tdm_inst_n_5}),
        .sync_reset_out_reg(sync_reset_out_reg),
        .sync_reset_out_reg_0(sync_reset_out_reg_0),
        .tx_ch0_ready(tx_ch0_ready),
        .tx_phy_ctrl(tx_phy_ctrl),
        .\tx_phy_ctrl_reg[0] (\tx_phy_ctrl_reg[0] ),
        .\tx_phy_ctrl_reg[2] (\tx_phy_ctrl_reg[2] ),
        .\tx_phy_ctrl_reg[2]_0 (\tx_phy_ctrl_reg[2]_0 ),
        .wd_ch_fc(wd_ch_fc));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_decoder axi_chip2chip_decoder_inst
       (.E(\axi_chip2chip_packer_inst/p_0_in1_in_1 ),
        .Q({\sio_io_stage.rx_user_data_flop_reg_n_0_[29] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[28] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[27] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[26] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[25] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[24] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[23] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[22] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[21] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[20] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[19] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[18] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[17] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[16] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[15] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[14] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[13] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[12] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[11] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[10] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[9] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[8] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[7] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[6] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[5] ,rx_user_data_flop[4],p_0_in,rx_user_data_flop[1:0]}),
        .ar_ch_data_valid(ar_ch_data_valid),
        .aw_ch_data_valid(aw_ch_data_valid),
        .axi_lite_rx_data_valid(axi_lite_rx_data_valid),
        .clk_ph_out(clk_ph_out),
        .int_ch1_ready_reg({br_ch_fc,axi_chip2chip_decoder_inst_n_30}),
        .\intr_data_reg[3] (rx_intr_data),
        .\mux_by_2.pack_reg0_reg[0] (\axi_chip2chip_packer_inst/p_0_in1_in_0 ),
        .\mux_by_2.pack_reg0_reg[0]_0 (\axi_chip2chip_packer_inst/p_0_in1_in ),
        .\mux_by_2.pack_reg0_reg[22] (rx_dec_data),
        .ram_full_i(ram_full_i),
        .ram_full_i_reg(axi_chip2chip_ar_fifo_inst_n_0),
        .ram_full_i_reg_0(axi_chip2chip_w_fifo_inst_n_0),
        .rx_phy_ready(rx_phy_ready),
        .rx_user_data_valid_flop(rx_user_data_valid_flop),
        .rx_user_reset(rx_user_reset),
        .wd_ch_data_valid(wd_ch_data_valid));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_awr_fifo__parameterized1 axi_chip2chip_r_fifo_inst
       (.DIADI(DIADI),
        .Q(slot_select[1]),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\ctrl_info_reg[0] (axi_chip2chip_decoder_inst_n_30),
        .\gpregsm1.curr_fwft_state_reg[0] (axi_chip2chip_r_fifo_inst_n_0),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .p_12_in(p_12_in),
        .rd_ch_data_ready(rd_ch_data_ready),
        .rx_user_reset(rx_user_reset),
        .\tdm_data_out_reg[10] (axi_chip2chip_r_fifo_inst_n_5),
        .\tdm_data_out_reg[11] (axi_chip2chip_r_fifo_inst_n_6),
        .\tdm_data_out_reg[12] (axi_chip2chip_r_fifo_inst_n_7),
        .\tdm_data_out_reg[13] (axi_chip2chip_r_fifo_inst_n_8),
        .\tdm_data_out_reg[14] (axi_chip2chip_r_fifo_inst_n_9),
        .\tdm_data_out_reg[15] (axi_chip2chip_r_fifo_inst_n_10),
        .\tdm_data_out_reg[16] (axi_chip2chip_r_fifo_inst_n_11),
        .\tdm_data_out_reg[17] (axi_chip2chip_r_fifo_inst_n_12),
        .\tdm_data_out_reg[18] (axi_chip2chip_r_fifo_inst_n_13),
        .\tdm_data_out_reg[19] (axi_chip2chip_r_fifo_inst_n_14),
        .\tdm_data_out_reg[20] (axi_chip2chip_r_fifo_inst_n_15),
        .\tdm_data_out_reg[21] (axi_chip2chip_r_fifo_inst_n_16),
        .\tdm_data_out_reg[22] (axi_chip2chip_r_fifo_inst_n_17),
        .\tdm_data_out_reg[23] (axi_chip2chip_r_fifo_inst_n_18),
        .\tdm_data_out_reg[6] (axi_chip2chip_r_fifo_inst_n_1),
        .\tdm_data_out_reg[7] (axi_chip2chip_r_fifo_inst_n_2),
        .\tdm_data_out_reg[8] (axi_chip2chip_r_fifo_inst_n_3),
        .\tdm_data_out_reg[9] (axi_chip2chip_r_fifo_inst_n_4),
        .tx_phy_ready(tx_phy_ready));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_tdm axi_chip2chip_tdm_inst
       (.D(axi_chip2chip_ch0_ctrl_inst_n_36),
        .Q({slot_select,axi_chip2chip_tdm_inst_n_5}),
        .br_ch_data_ready(br_ch_data_ready),
        .\calib_intr_gen.cal_nibble_reg[1] (calib_pattern),
        .\calib_intr_gen.tx_ch0_data_reg[20] ({axi_chip2chip_ch0_ctrl_inst_n_8,axi_chip2chip_ch0_ctrl_inst_n_9,axi_chip2chip_ch0_ctrl_inst_n_10,axi_chip2chip_ch0_ctrl_inst_n_11,axi_chip2chip_ch0_ctrl_inst_n_12,axi_chip2chip_ch0_ctrl_inst_n_13,axi_chip2chip_ch0_ctrl_inst_n_14,axi_chip2chip_ch0_ctrl_inst_n_15,axi_chip2chip_ch0_ctrl_inst_n_16,axi_chip2chip_ch0_ctrl_inst_n_17,axi_chip2chip_ch0_ctrl_inst_n_18,axi_chip2chip_ch0_ctrl_inst_n_19,axi_chip2chip_ch0_ctrl_inst_n_20,axi_chip2chip_ch0_ctrl_inst_n_21,axi_chip2chip_ch0_ctrl_inst_n_22,axi_chip2chip_ch0_ctrl_inst_n_23,axi_chip2chip_ch0_ctrl_inst_n_24,axi_chip2chip_ch0_ctrl_inst_n_25,axi_chip2chip_ch0_ctrl_inst_n_26,axi_chip2chip_ch0_ctrl_inst_n_27,axi_chip2chip_ch0_ctrl_inst_n_28,axi_chip2chip_ch0_ctrl_inst_n_29,axi_chip2chip_ch0_ctrl_inst_n_30,axi_chip2chip_ch0_ctrl_inst_n_31,axi_chip2chip_ch0_ctrl_inst_n_32,axi_chip2chip_ch0_ctrl_inst_n_33,axi_chip2chip_ch0_ctrl_inst_n_34}),
        .clk_ph_out(clk_ph_out),
        .empty_fwft_i_reg(axi_chip2chip_r_fifo_inst_n_0),
        .empty_fwft_i_reg_0(axi_chip2chip_b_fifo_inst_n_0),
        .int_ch1_ready5(int_ch1_ready5),
        .p_12_in(p_12_in),
        .rd_ch_data_ready(rd_ch_data_ready),
        .rx_user_reset(rx_user_reset),
        .send_ch0(send_ch0),
        .\sio_io_stage.tdm_user_data_flop_reg[29] (tdm_data_out),
        .tx_ch0_ready(tx_ch0_ready),
        .tx_ch0_valid(tx_ch0_valid),
        .tx_phy_ready(tx_phy_ready));
  v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_awr_fifo__parameterized0 axi_chip2chip_w_fifo_inst
       (.E(\axi_chip2chip_packer_inst/p_0_in1_in ),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (rx_dec_data[18:0]),
        .\gic0.gc0.count_reg[8] (axi_chip2chip_w_fifo_inst_n_0),
        .m_aclk(m_aclk),
        .\m_axi_wdata[31] (\m_axi_wdata[31] ),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .rx_user_reset(rx_user_reset),
        .wd_ch_data_valid(wd_ch_data_valid),
        .wd_ch_fc(wd_ch_fc));
  FDRE \sio_io_stage.rx_user_data_flop_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[0]),
        .Q(rx_user_data_flop[0]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[10]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[10] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[11]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[11] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[12]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[12] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[13]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[13] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[14]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[14] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[15]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[15] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[16]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[16] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[17]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[17] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[18]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[18] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[19]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[19] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[1]),
        .Q(rx_user_data_flop[1]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[20]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[20] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[21]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[21] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[22]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[22] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[23]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[23] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[24]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[24] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[25]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[25] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[26]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[26] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[27]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[27] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[28]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[28] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[29]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[29] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[2]),
        .Q(p_0_in[0]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[3]),
        .Q(p_0_in[1]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[4]),
        .Q(rx_user_data_flop[4]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[5]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[5] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[6]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[6] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[7]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[7] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[8]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[8] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[9]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[9] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_valid_flop_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b1),
        .Q(rx_user_data_valid_flop),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[0]),
        .Q(\axi_c2c_selio_tx_data_out[14] [0]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[10]),
        .Q(\axi_c2c_selio_tx_data_out[14] [10]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[11]),
        .Q(\axi_c2c_selio_tx_data_out[14] [11]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[12]),
        .Q(\axi_c2c_selio_tx_data_out[14] [12]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[13]),
        .Q(\axi_c2c_selio_tx_data_out[14] [13]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[14]),
        .Q(\axi_c2c_selio_tx_data_out[14] [14]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[15]),
        .Q(\axi_c2c_selio_tx_data_out[14] [15]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[16]),
        .Q(\axi_c2c_selio_tx_data_out[14] [16]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[17]),
        .Q(\axi_c2c_selio_tx_data_out[14] [17]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[18]),
        .Q(\axi_c2c_selio_tx_data_out[14] [18]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[19]),
        .Q(\axi_c2c_selio_tx_data_out[14] [19]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[1]),
        .Q(\axi_c2c_selio_tx_data_out[14] [1]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[20]),
        .Q(\axi_c2c_selio_tx_data_out[14] [20]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[21]),
        .Q(\axi_c2c_selio_tx_data_out[14] [21]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[22]),
        .Q(\axi_c2c_selio_tx_data_out[14] [22]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[23]),
        .Q(\axi_c2c_selio_tx_data_out[14] [23]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[24]),
        .Q(\axi_c2c_selio_tx_data_out[14] [24]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[25]),
        .Q(\axi_c2c_selio_tx_data_out[14] [25]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[26]),
        .Q(\axi_c2c_selio_tx_data_out[14] [26]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[27]),
        .Q(\axi_c2c_selio_tx_data_out[14] [27]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[28]),
        .Q(\axi_c2c_selio_tx_data_out[14] [28]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[29]),
        .Q(\axi_c2c_selio_tx_data_out[14] [29]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[2]),
        .Q(\axi_c2c_selio_tx_data_out[14] [2]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[3]),
        .Q(\axi_c2c_selio_tx_data_out[14] [3]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[4]),
        .Q(\axi_c2c_selio_tx_data_out[14] [4]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[5]),
        .Q(\axi_c2c_selio_tx_data_out[14] [5]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[6]),
        .Q(\axi_c2c_selio_tx_data_out[14] [6]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[7]),
        .Q(\axi_c2c_selio_tx_data_out[14] [7]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[8]),
        .Q(\axi_c2c_selio_tx_data_out[14] [8]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[9]),
        .Q(\axi_c2c_selio_tx_data_out[14] [9]),
        .R(rx_user_reset));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_sync_cell" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_sync_cell
   (D,
    \calib_intr_gen.tx_ch0_valid_reg ,
    \calib_intr_gen.intr_flop_reg ,
    \calib_intr_gen.axi_lite_tx_ready_reg ,
    axi_c2c_s2m_intr_in,
    Q,
    \calib_intr_gen.intr_flop_reg_0 ,
    \calib_intr_gen.tx_ch0_valid_reg_0 ,
    empty_fwft_i,
    send_intr,
    \tx_phy_ctrl_reg[2] ,
    rx_user_reset,
    clk_ph_out);
  output [3:0]D;
  output \calib_intr_gen.tx_ch0_valid_reg ;
  output \calib_intr_gen.intr_flop_reg ;
  output \calib_intr_gen.axi_lite_tx_ready_reg ;
  input [3:0]axi_c2c_s2m_intr_in;
  input [3:0]Q;
  input \calib_intr_gen.intr_flop_reg_0 ;
  input \calib_intr_gen.tx_ch0_valid_reg_0 ;
  input empty_fwft_i;
  input send_intr;
  input \tx_phy_ctrl_reg[2] ;
  input rx_user_reset;
  input clk_ph_out;

  wire [3:0]axi_c2c_s2m_intr_in;
  wire \calib_intr_gen.axi_lite_tx_ready_reg ;
  wire \calib_intr_gen.intr_flop_i_3_n_0 ;
  wire \calib_intr_gen.intr_flop_reg ;
  wire \calib_intr_gen.intr_flop_reg_0 ;
  wire \calib_intr_gen.tx_ch0_valid_reg ;
  wire \calib_intr_gen.tx_ch0_valid_reg_0 ;
  wire clk_ph_out;
  wire empty_fwft_i;
  wire intr_event;
  wire rx_user_reset;
  wire send_intr;
  (* async_reg = "true" *) wire [3:0]sync_flop_0;
  (* async_reg = "true" *) wire [3:0]sync_flop_1;
  (* async_reg = "true" *) wire [3:0]sync_flop_2;
  (* async_reg = "true" *) wire [3:0]sync_flop_3;
  (* async_reg = "true" *) wire [3:0]sync_flop_4;
  (* async_reg = "true" *) wire [3:0]sync_flop_5;
  (* async_reg = "true" *) wire [3:0]sync_flop_6;
  wire \tx_phy_ctrl_reg[2] ;

  assign D[3:0] = sync_flop_4;
  assign sync_flop_5 = Q[3:0];
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \calib_intr_gen.axi_lite_tx_ready_i_1 
       (.I0(intr_event),
        .I1(empty_fwft_i),
        .I2(\tx_phy_ctrl_reg[2] ),
        .I3(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .I4(\calib_intr_gen.intr_flop_reg_0 ),
        .I5(rx_user_reset),
        .O(\calib_intr_gen.axi_lite_tx_ready_reg ));
  LUT5 #(
    .INIT(32'h000000AE)) 
    \calib_intr_gen.intr_flop_i_1 
       (.I0(intr_event),
        .I1(\calib_intr_gen.intr_flop_reg_0 ),
        .I2(send_intr),
        .I3(\tx_phy_ctrl_reg[2] ),
        .I4(rx_user_reset),
        .O(\calib_intr_gen.intr_flop_reg ));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \calib_intr_gen.intr_flop_i_2 
       (.I0(sync_flop_5[1]),
        .I1(sync_flop_4[1]),
        .I2(sync_flop_5[2]),
        .I3(sync_flop_4[2]),
        .I4(\calib_intr_gen.intr_flop_i_3_n_0 ),
        .O(intr_event));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \calib_intr_gen.intr_flop_i_3 
       (.I0(sync_flop_4[0]),
        .I1(sync_flop_5[0]),
        .I2(sync_flop_4[3]),
        .I3(sync_flop_5[3]),
        .O(\calib_intr_gen.intr_flop_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0A0B)) 
    \calib_intr_gen.tx_ch0_valid_i_2 
       (.I0(\calib_intr_gen.intr_flop_reg_0 ),
        .I1(intr_event),
        .I2(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .I3(empty_fwft_i),
        .O(\calib_intr_gen.tx_ch0_valid_reg ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_c2c_s2m_intr_in[0]),
        .Q(sync_flop_0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_c2c_s2m_intr_in[1]),
        .Q(sync_flop_0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_c2c_s2m_intr_in[2]),
        .Q(sync_flop_0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_c2c_s2m_intr_in[3]),
        .Q(sync_flop_0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_0[0]),
        .Q(sync_flop_1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_0[1]),
        .Q(sync_flop_1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_0[2]),
        .Q(sync_flop_1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_0[3]),
        .Q(sync_flop_1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_1[0]),
        .Q(sync_flop_2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_1[1]),
        .Q(sync_flop_2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_1[2]),
        .Q(sync_flop_2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_1[3]),
        .Q(sync_flop_2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_2[0]),
        .Q(sync_flop_3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_2[1]),
        .Q(sync_flop_3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_2[2]),
        .Q(sync_flop_3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_2[3]),
        .Q(sync_flop_3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_3[0]),
        .Q(sync_flop_4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_3[1]),
        .Q(sync_flop_4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_3[2]),
        .Q(sync_flop_4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_3[3]),
        .Q(sync_flop_4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_5[0]),
        .Q(sync_flop_6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_5[1]),
        .Q(sync_flop_6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_5[2]),
        .Q(sync_flop_6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_5[3]),
        .Q(sync_flop_6[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_sync_cell" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_sync_cell_4
   (D,
    Q,
    m_aclk);
  output [3:0]D;
  input [3:0]Q;
  input m_aclk;

  wire [3:0]Q;
  wire m_aclk;
  (* async_reg = "true" *) wire [3:0]sync_flop_0;
  (* async_reg = "true" *) wire [3:0]sync_flop_1;
  (* async_reg = "true" *) wire [3:0]sync_flop_2;
  (* async_reg = "true" *) wire [3:0]sync_flop_3;
  (* async_reg = "true" *) wire [3:0]sync_flop_4;
  (* async_reg = "true" *) wire [3:0]sync_flop_5;
  (* async_reg = "true" *) wire [3:0]sync_flop_6;

  assign D[3:0] = sync_flop_4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(sync_flop_0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(sync_flop_0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(sync_flop_0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(sync_flop_0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[0]),
        .Q(sync_flop_1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[1]),
        .Q(sync_flop_1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[2]),
        .Q(sync_flop_1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[3]),
        .Q(sync_flop_1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[0]),
        .Q(sync_flop_2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[1]),
        .Q(sync_flop_2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[2]),
        .Q(sync_flop_2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[3]),
        .Q(sync_flop_2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[0]),
        .Q(sync_flop_3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[1]),
        .Q(sync_flop_3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[2]),
        .Q(sync_flop_3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[3]),
        .Q(sync_flop_3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[0]),
        .Q(sync_flop_4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[1]),
        .Q(sync_flop_4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[2]),
        .Q(sync_flop_4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[3]),
        .Q(sync_flop_4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[0]),
        .Q(sync_flop_5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[1]),
        .Q(sync_flop_5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[2]),
        .Q(sync_flop_5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[3]),
        .Q(sync_flop_5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[0]),
        .Q(sync_flop_6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[1]),
        .Q(sync_flop_6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[2]),
        .Q(sync_flop_6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[3]),
        .Q(sync_flop_6[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_sync_cell" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_sync_cell__parameterized0
   (D,
    in0,
    m_aclk);
  output [1:0]D;
  input [1:0]in0;
  input m_aclk;

  wire [1:0]in0;
  wire m_aclk;
  (* async_reg = "true" *) wire [1:0]sync_flop_0;
  (* async_reg = "true" *) wire [1:0]sync_flop_1;
  (* async_reg = "true" *) wire [1:0]sync_flop_2;
  (* async_reg = "true" *) wire [1:0]sync_flop_3;
  (* async_reg = "true" *) wire [1:0]sync_flop_4;
  (* async_reg = "true" *) wire [1:0]sync_flop_5;
  (* async_reg = "true" *) wire [1:0]sync_flop_6;

  assign D[1:0] = sync_flop_4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(in0[0]),
        .Q(sync_flop_0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(in0[1]),
        .Q(sync_flop_0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[0]),
        .Q(sync_flop_1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[1]),
        .Q(sync_flop_1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[0]),
        .Q(sync_flop_2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[1]),
        .Q(sync_flop_2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[0]),
        .Q(sync_flop_3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[1]),
        .Q(sync_flop_3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[0]),
        .Q(sync_flop_4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[1]),
        .Q(sync_flop_4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[0]),
        .Q(sync_flop_5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[1]),
        .Q(sync_flop_5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[0]),
        .Q(sync_flop_6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[1]),
        .Q(sync_flop_6[1]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_tdm" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_tdm
   (tx_ch0_ready,
    rd_ch_data_ready,
    br_ch_data_ready,
    Q,
    \sio_io_stage.tdm_user_data_flop_reg[29] ,
    rx_user_reset,
    D,
    clk_ph_out,
    p_12_in,
    int_ch1_ready5,
    send_ch0,
    tx_phy_ready,
    empty_fwft_i_reg,
    \calib_intr_gen.cal_nibble_reg[1] ,
    tx_ch0_valid,
    empty_fwft_i_reg_0,
    \calib_intr_gen.tx_ch0_data_reg[20] );
  output tx_ch0_ready;
  output rd_ch_data_ready;
  output br_ch_data_ready;
  output [2:0]Q;
  output [29:0]\sio_io_stage.tdm_user_data_flop_reg[29] ;
  input rx_user_reset;
  input [0:0]D;
  input clk_ph_out;
  input p_12_in;
  input int_ch1_ready5;
  input send_ch0;
  input tx_phy_ready;
  input empty_fwft_i_reg;
  input [1:0]\calib_intr_gen.cal_nibble_reg[1] ;
  input tx_ch0_valid;
  input empty_fwft_i_reg_0;
  input [26:0]\calib_intr_gen.tx_ch0_data_reg[20] ;

  wire [0:0]D;
  wire [2:0]Q;
  wire br_ch_data_ready;
  wire [1:0]\calib_intr_gen.cal_nibble_reg[1] ;
  wire [26:0]\calib_intr_gen.tx_ch0_data_reg[20] ;
  wire clk_ph_out;
  wire empty_fwft_i_reg;
  wire empty_fwft_i_reg_0;
  wire int_ch1_ready5;
  wire next_int_ch1_ready;
  wire next_int_ch2_ready;
  wire p_12_in;
  wire p_1_in;
  wire rd_ch_data_ready;
  wire rx_user_reset;
  wire send_ch0;
  wire [29:0]\sio_io_stage.tdm_user_data_flop_reg[29] ;
  wire [3:0]slot_count;
  wire \slot_count[0]_i_1_n_0 ;
  wire \slot_count[1]_i_1_n_0 ;
  wire \slot_count[2]_i_1_n_0 ;
  wire \slot_count[3]_i_1_n_0 ;
  wire \slot_select[2]_i_5_n_0 ;
  wire \tdm_data_out[0]_i_1_n_0 ;
  wire \tdm_data_out[1]_i_1_n_0 ;
  wire \tdm_data_out[5]_i_1_n_0 ;
  wire \tdm_data_out[5]_i_2_n_0 ;
  wire tx_ch0_ready;
  wire tx_ch0_valid;
  wire tx_phy_ready;

  FDRE int_ch0_ready_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D),
        .Q(tx_ch0_ready),
        .R(rx_user_reset));
  FDRE int_ch1_ready_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(next_int_ch1_ready),
        .Q(rd_ch_data_ready),
        .R(rx_user_reset));
  FDRE int_ch2_ready_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(next_int_ch2_ready),
        .Q(br_ch_data_ready),
        .R(rx_user_reset));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h26)) 
    \slot_count[0]_i_1 
       (.I0(slot_count[0]),
        .I1(tx_phy_ready),
        .I2(send_ch0),
        .O(\slot_count[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000FFFFF00D00000)) 
    \slot_count[1]_i_1 
       (.I0(slot_count[3]),
        .I1(slot_count[2]),
        .I2(slot_count[0]),
        .I3(send_ch0),
        .I4(tx_phy_ready),
        .I5(slot_count[1]),
        .O(\slot_count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT5 #(
    .INIT(32'h07FF0800)) 
    \slot_count[2]_i_1 
       (.I0(slot_count[0]),
        .I1(slot_count[1]),
        .I2(send_ch0),
        .I3(tx_phy_ready),
        .I4(slot_count[2]),
        .O(\slot_count[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h007BFFFF00800000)) 
    \slot_count[3]_i_1 
       (.I0(slot_count[2]),
        .I1(slot_count[0]),
        .I2(slot_count[1]),
        .I3(send_ch0),
        .I4(tx_phy_ready),
        .I5(slot_count[3]),
        .O(\slot_count[3]_i_1_n_0 ));
  FDRE \slot_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\slot_count[0]_i_1_n_0 ),
        .Q(slot_count[0]),
        .R(rx_user_reset));
  FDRE \slot_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\slot_count[1]_i_1_n_0 ),
        .Q(slot_count[1]),
        .R(rx_user_reset));
  FDRE \slot_count_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\slot_count[2]_i_1_n_0 ),
        .Q(slot_count[2]),
        .R(rx_user_reset));
  FDRE \slot_count_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\slot_count[3]_i_1_n_0 ),
        .Q(slot_count[3]),
        .R(rx_user_reset));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'h0808AA08)) 
    \slot_select[1]_i_1 
       (.I0(p_12_in),
        .I1(p_1_in),
        .I2(int_ch1_ready5),
        .I3(\slot_select[2]_i_5_n_0 ),
        .I4(send_ch0),
        .O(next_int_ch1_ready));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'h888A8888)) 
    \slot_select[2]_i_1 
       (.I0(int_ch1_ready5),
        .I1(p_1_in),
        .I2(send_ch0),
        .I3(p_12_in),
        .I4(\slot_select[2]_i_5_n_0 ),
        .O(next_int_ch2_ready));
  LUT6 #(
    .INIT(64'h0000010400010800)) 
    \slot_select[2]_i_3 
       (.I0(slot_count[1]),
        .I1(tx_phy_ready),
        .I2(send_ch0),
        .I3(slot_count[0]),
        .I4(slot_count[2]),
        .I5(slot_count[3]),
        .O(p_1_in));
  LUT6 #(
    .INIT(64'hC8C0C4D1FFEEF7FF)) 
    \slot_select[2]_i_5 
       (.I0(slot_count[1]),
        .I1(tx_phy_ready),
        .I2(send_ch0),
        .I3(slot_count[0]),
        .I4(slot_count[2]),
        .I5(slot_count[3]),
        .O(\slot_select[2]_i_5_n_0 ));
  FDRE \slot_select_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D),
        .Q(Q[0]),
        .R(rx_user_reset));
  FDRE \slot_select_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(next_int_ch1_ready),
        .Q(Q[1]),
        .R(rx_user_reset));
  FDRE \slot_select_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(next_int_ch2_ready),
        .Q(Q[2]),
        .R(rx_user_reset));
  LUT2 #(
    .INIT(4'hE)) 
    \tdm_data_out[0]_i_1 
       (.I0(Q[1]),
        .I1(\calib_intr_gen.cal_nibble_reg[1] [0]),
        .O(\tdm_data_out[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \tdm_data_out[1]_i_1 
       (.I0(Q[2]),
        .I1(\calib_intr_gen.cal_nibble_reg[1] [1]),
        .O(\tdm_data_out[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF40)) 
    \tdm_data_out[5]_i_1 
       (.I0(empty_fwft_i_reg),
        .I1(Q[1]),
        .I2(rd_ch_data_ready),
        .I3(\calib_intr_gen.cal_nibble_reg[1] [1]),
        .I4(\tdm_data_out[5]_i_2_n_0 ),
        .O(\tdm_data_out[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80808080FF808080)) 
    \tdm_data_out[5]_i_2 
       (.I0(tx_ch0_ready),
        .I1(Q[0]),
        .I2(tx_ch0_valid),
        .I3(br_ch_data_ready),
        .I4(Q[2]),
        .I5(empty_fwft_i_reg_0),
        .O(\tdm_data_out[5]_i_2_n_0 ));
  FDRE \tdm_data_out_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[0]_i_1_n_0 ),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [0]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [7]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [10]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [8]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [11]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [9]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [12]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [10]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [13]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [11]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [14]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [12]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [15]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [13]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [16]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [14]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [17]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [15]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [18]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [16]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [19]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[1]_i_1_n_0 ),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [1]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [17]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [20]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [18]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [21]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [19]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [22]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [20]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [23]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [21]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [24]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [22]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [25]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [23]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [26]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [24]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [27]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [25]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [28]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [26]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [29]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [0]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [2]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [1]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [3]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [2]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [4]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[5]_i_1_n_0 ),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [5]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [3]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [6]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [4]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [7]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [5]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [8]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_data_reg[20] [6]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[29] [9]),
        .R(rx_user_reset));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v4_2_7_unpacker" *) 
module v7_bd_axi_chip2chip_0_0_axi_chip2chip_v4_2_7_unpacker__parameterized1
   (\mux_by_2.data_count_reg[1]_0 ,
    p_0_in,
    rd_ch_data_ready,
    empty_fwft_i_reg,
    rx_user_reset,
    clk_ph_out);
  output \mux_by_2.data_count_reg[1]_0 ;
  output p_0_in;
  input rd_ch_data_ready;
  input empty_fwft_i_reg;
  input rx_user_reset;
  input clk_ph_out;

  wire clk_ph_out;
  wire empty_fwft_i_reg;
  wire \mux_by_2.data_count[0]_i_1_n_0 ;
  wire \mux_by_2.data_count[1]_i_1_n_0 ;
  wire \mux_by_2.data_count_reg[1]_0 ;
  wire p_0_in;
  wire rd_ch_data_ready;
  wire rx_user_reset;

  LUT4 #(
    .INIT(16'hFB08)) 
    \mux_by_2.data_count[0]_i_1 
       (.I0(p_0_in),
        .I1(rd_ch_data_ready),
        .I2(empty_fwft_i_reg),
        .I3(\mux_by_2.data_count_reg[1]_0 ),
        .O(\mux_by_2.data_count[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mux_by_2.data_count[1]_i_1 
       (.I0(\mux_by_2.data_count_reg[1]_0 ),
        .I1(rd_ch_data_ready),
        .I2(empty_fwft_i_reg),
        .I3(p_0_in),
        .O(\mux_by_2.data_count[1]_i_1_n_0 ));
  FDSE \mux_by_2.data_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[0]_i_1_n_0 ),
        .Q(\mux_by_2.data_count_reg[1]_0 ),
        .S(rx_user_reset));
  FDRE \mux_by_2.data_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[1]_i_1_n_0 ),
        .Q(p_0_in),
        .R(rx_user_reset));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_generic_cstr
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_generic_cstr_49
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_width_50 \ramloop[0].ram.r 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_generic_cstr__parameterized0
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    \mux_by_2.pack_reg0_reg[18] ,
    \data_out_reg[18] );
  output [37:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [18:0]\mux_by_2.pack_reg0_reg[18] ;
  input [18:0]\data_out_reg[18] ;

  wire [37:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [18:0]\mux_by_2.pack_reg0_reg[18] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_width__parameterized0 \ramloop[0].ram.r 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[18] (\mux_by_2.pack_reg0_reg[18] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_generic_cstr__parameterized1
   (D,
    clk_ph_out,
    m_aclk,
    tmp_ram_rd_en,
    WEBWE,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    m_axi_rdata,
    DIADI);
  output [35:0]D;
  input clk_ph_out;
  input m_aclk;
  input tmp_ram_rd_en;
  input [0:0]WEBWE;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;

  wire [35:0]D;
  wire [3:0]DIADI;
  wire [0:0]Q;
  wire [0:0]WEBWE;
  wire clk_ph_out;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_width__parameterized1 \ramloop[0].ram.r 
       (.D(D),
        .DIADI(DIADI),
        .Q(Q),
        .WEBWE(WEBWE),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_width
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_width_50
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_wrapper_51 \prim_noinit.ram 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_width__parameterized0
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    \mux_by_2.pack_reg0_reg[18] ,
    \data_out_reg[18] );
  output [37:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [18:0]\mux_by_2.pack_reg0_reg[18] ;
  input [18:0]\data_out_reg[18] ;

  wire [37:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [18:0]\mux_by_2.pack_reg0_reg[18] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_wrapper__parameterized0 \prim_noinit.ram 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[18] (\mux_by_2.pack_reg0_reg[18] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_width__parameterized1
   (D,
    clk_ph_out,
    m_aclk,
    tmp_ram_rd_en,
    WEBWE,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    m_axi_rdata,
    DIADI);
  output [35:0]D;
  input clk_ph_out;
  input m_aclk;
  input tmp_ram_rd_en;
  input [0:0]WEBWE;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;

  wire [35:0]D;
  wire [3:0]DIADI;
  wire [0:0]Q;
  wire [0:0]WEBWE;
  wire clk_ph_out;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_wrapper__parameterized1 \prim_noinit.ram 
       (.D(D),
        .DIADI(DIADI),
        .Q(Q),
        .WEBWE(WEBWE),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_wrapper
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_21 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_22 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_23 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_29 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_30 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_37 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_38 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_45 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_46 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_53 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_54 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_55 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_61 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_62 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_69 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_70 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_77 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_78 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_85 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_86 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_87 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_88 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_89 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_90 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_91 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_92 ;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [45:45]doutb;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,1'b0,\gc0.count_d1_reg[7] ,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,\gic0.gc0.count_d2_reg[7] ,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(m_aclk),
        .CLKBWRCLK(clk_ph_out),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,\mux_by_2.pack_reg0_reg[22] [22:18],1'b0,1'b0,\mux_by_2.pack_reg0_reg[22] [17:12],1'b0,1'b0,\mux_by_2.pack_reg0_reg[22] [11:6],1'b0,1'b0,\mux_by_2.pack_reg0_reg[22] [5:0]}),
        .DIBDI({1'b0,1'b0,1'b0,\data_out_reg[22] [22:18],1'b0,1'b0,\data_out_reg[22] [17:12],1'b0,1'b0,\data_out_reg[22] [11:6],1'b0,1'b0,\data_out_reg[22] [5:0]}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_21 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_22 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_23 ,D[22:18],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_29 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_30 ,D[17:12],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_37 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_38 ,D[11:6],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_45 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_46 ,D[5:0]}),
        .DOBDO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_53 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_54 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_55 ,doutb,D[44:41],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_61 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_62 ,D[40:35],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_69 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_70 ,D[34:29],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_77 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_78 ,D[28:23]}),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_85 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_86 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_87 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_88 }),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_89 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_90 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_91 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_92 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(tmp_ram_rd_en),
        .ENBWREN(E),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(Q),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({E,E,E,E,E,E,E,E}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_wrapper_51
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_21 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_22 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_23 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_29 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_30 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_37 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_38 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_45 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_46 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_53 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_54 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_55 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_61 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_62 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_69 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_70 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_77 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_78 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_85 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_86 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_87 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_88 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_89 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_90 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_91 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_92 ;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [45:45]doutb;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,1'b0,\gc0.count_d1_reg[7] ,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,\gic0.gc0.count_d2_reg[7] ,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(m_aclk),
        .CLKBWRCLK(clk_ph_out),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,\mux_by_2.pack_reg0_reg[22] [22:18],1'b0,1'b0,\mux_by_2.pack_reg0_reg[22] [17:12],1'b0,1'b0,\mux_by_2.pack_reg0_reg[22] [11:6],1'b0,1'b0,\mux_by_2.pack_reg0_reg[22] [5:0]}),
        .DIBDI({1'b0,1'b0,1'b0,\data_out_reg[22] [22:18],1'b0,1'b0,\data_out_reg[22] [17:12],1'b0,1'b0,\data_out_reg[22] [11:6],1'b0,1'b0,\data_out_reg[22] [5:0]}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_21 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_22 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_23 ,D[22:18],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_29 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_30 ,D[17:12],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_37 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_38 ,D[11:6],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_45 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_46 ,D[5:0]}),
        .DOBDO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_53 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_54 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_55 ,doutb,D[44:41],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_61 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_62 ,D[40:35],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_69 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_70 ,D[34:29],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_77 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_78 ,D[28:23]}),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_85 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_86 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_87 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_88 }),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_89 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_90 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_91 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_92 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(tmp_ram_rd_en),
        .ENBWREN(E),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(Q),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({E,E,E,E,E,E,E,E}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_wrapper__parameterized0
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    \mux_by_2.pack_reg0_reg[18] ,
    \data_out_reg[18] );
  output [37:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [18:0]\mux_by_2.pack_reg0_reg[18] ;
  input [18:0]\data_out_reg[18] ;

  wire [37:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_21 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_22 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_23 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_24 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_29 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_30 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_31 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_37 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_38 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_39 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_45 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_46 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_47 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_53 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_54 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_55 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_56 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_61 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_62 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_63 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_69 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_70 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_71 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_77 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_78 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_79 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_85 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_86 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_87 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_88 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_89 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_90 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_91 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_92 ;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [18:0]\mux_by_2.pack_reg0_reg[18] ;
  wire tmp_ram_rd_en;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,\gc0.count_d1_reg[8] ,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,\gic0.gc0.count_d2_reg[8] ,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(m_aclk),
        .CLKBWRCLK(clk_ph_out),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,\mux_by_2.pack_reg0_reg[18] [18:15],1'b0,1'b0,1'b0,\mux_by_2.pack_reg0_reg[18] [14:10],1'b0,1'b0,1'b0,\mux_by_2.pack_reg0_reg[18] [9:5],1'b0,1'b0,1'b0,\mux_by_2.pack_reg0_reg[18] [4:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,\data_out_reg[18] [18:15],1'b0,1'b0,1'b0,\data_out_reg[18] [14:10],1'b0,1'b0,1'b0,\data_out_reg[18] [9:5],1'b0,1'b0,1'b0,\data_out_reg[18] [4:0]}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_21 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_22 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_23 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_24 ,D[18:15],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_29 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_30 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_31 ,D[14:10],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_37 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_38 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_39 ,D[9:5],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_45 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_46 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_47 ,D[4:0]}),
        .DOBDO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_53 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_54 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_55 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_56 ,D[37:34],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_61 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_62 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_63 ,D[33:29],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_69 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_70 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_71 ,D[28:24],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_77 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_78 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_79 ,D[23:19]}),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_85 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_86 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_87 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_88 }),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_89 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_90 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_91 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_92 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(tmp_ram_rd_en),
        .ENBWREN(E),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(Q),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({E,E,E,E,E,E,E,E}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_prim_wrapper__parameterized1
   (D,
    clk_ph_out,
    m_aclk,
    tmp_ram_rd_en,
    WEBWE,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    m_axi_rdata,
    DIADI);
  output [35:0]D;
  input clk_ph_out;
  input m_aclk;
  input tmp_ram_rd_en;
  input [0:0]WEBWE;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;

  wire [35:0]D;
  wire [3:0]DIADI;
  wire [0:0]Q;
  wire [0:0]WEBWE;
  wire clk_ph_out;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire tmp_ram_rd_en;

  (* CLOCK_DOMAINS = "INDEPENDENT" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({\gc0.count_d1_reg[8] ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({\gic0.gc0.count_d2_reg[8] ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clk_ph_out),
        .CLKBWRCLK(m_aclk),
        .DIADI({m_axi_rdata[12:5],m_axi_rdata[3:0],DIADI}),
        .DIBDI({m_axi_rdata[30:23],m_axi_rdata[21:14]}),
        .DIPADIP({m_axi_rdata[13],m_axi_rdata[4]}),
        .DIPBDIP({m_axi_rdata[31],m_axi_rdata[22]}),
        .DOADO({D[16:9],D[7:0]}),
        .DOBDO({D[34:27],D[25:18]}),
        .DOPADOP({D[17],D[8]}),
        .DOPBDOP({D[35],D[26]}),
        .ENARDEN(tmp_ram_rd_en),
        .ENBWREN(WEBWE),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(Q),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({WEBWE,WEBWE,WEBWE,WEBWE}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_top
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_top_48
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_generic_cstr_49 \valid.cstr 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_top__parameterized0
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    \mux_by_2.pack_reg0_reg[18] ,
    \data_out_reg[18] );
  output [37:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [18:0]\mux_by_2.pack_reg0_reg[18] ;
  input [18:0]\data_out_reg[18] ;

  wire [37:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [18:0]\mux_by_2.pack_reg0_reg[18] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_generic_cstr__parameterized0 \valid.cstr 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[18] (\mux_by_2.pack_reg0_reg[18] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_top__parameterized1
   (D,
    clk_ph_out,
    m_aclk,
    tmp_ram_rd_en,
    WEBWE,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    m_axi_rdata,
    DIADI);
  output [35:0]D;
  input clk_ph_out;
  input m_aclk;
  input tmp_ram_rd_en;
  input [0:0]WEBWE;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;

  wire [35:0]D;
  wire [3:0]DIADI;
  wire [0:0]Q;
  wire [0:0]WEBWE;
  wire clk_ph_out;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_generic_cstr__parameterized1 \valid.cstr 
       (.D(D),
        .DIADI(DIADI),
        .Q(Q),
        .WEBWE(WEBWE),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_1" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1_synth inst_blk_mem_gen
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_1" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1_46
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1_synth_47 inst_blk_mem_gen
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_1" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1__parameterized1
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    \mux_by_2.pack_reg0_reg[18] ,
    \data_out_reg[18] );
  output [37:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [18:0]\mux_by_2.pack_reg0_reg[18] ;
  input [18:0]\data_out_reg[18] ;

  wire [37:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [18:0]\mux_by_2.pack_reg0_reg[18] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1_synth__parameterized0 inst_blk_mem_gen
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[18] (\mux_by_2.pack_reg0_reg[18] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_1" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1__parameterized3
   (D,
    clk_ph_out,
    m_aclk,
    tmp_ram_rd_en,
    WEBWE,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    m_axi_rdata,
    DIADI);
  output [35:0]D;
  input clk_ph_out;
  input m_aclk;
  input tmp_ram_rd_en;
  input [0:0]WEBWE;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;

  wire [35:0]D;
  wire [3:0]DIADI;
  wire [0:0]Q;
  wire [0:0]WEBWE;
  wire clk_ph_out;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1_synth__parameterized1 inst_blk_mem_gen
       (.D(D),
        .DIADI(DIADI),
        .Q(Q),
        .WEBWE(WEBWE),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_1_synth" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1_synth
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_top \gnativebmg.native_blk_mem_gen 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_1_synth" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1_synth_47
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] );
  output [44:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;

  wire [44:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire m_aclk;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_top_48 \gnativebmg.native_blk_mem_gen 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_1_synth" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1_synth__parameterized0
   (D,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    \mux_by_2.pack_reg0_reg[18] ,
    \data_out_reg[18] );
  output [37:0]D;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [18:0]\mux_by_2.pack_reg0_reg[18] ;
  input [18:0]\data_out_reg[18] ;

  wire [37:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [18:0]\mux_by_2.pack_reg0_reg[18] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_top__parameterized0 \gnativebmg.native_blk_mem_gen 
       (.D(D),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[18] (\mux_by_2.pack_reg0_reg[18] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_1_synth" *) 
module v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1_synth__parameterized1
   (D,
    clk_ph_out,
    m_aclk,
    tmp_ram_rd_en,
    WEBWE,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    m_axi_rdata,
    DIADI);
  output [35:0]D;
  input clk_ph_out;
  input m_aclk;
  input tmp_ram_rd_en;
  input [0:0]WEBWE;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;

  wire [35:0]D;
  wire [3:0]DIADI;
  wire [0:0]Q;
  wire [0:0]WEBWE;
  wire clk_ph_out;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_top__parameterized1 \gnativebmg.native_blk_mem_gen 
       (.D(D),
        .DIADI(DIADI),
        .Q(Q),
        .WEBWE(WEBWE),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .tmp_ram_rd_en(tmp_ram_rd_en));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module v7_bd_axi_chip2chip_0_0_clk_x_pntrs
   (ram_empty_fb_i_reg,
    WR_PNTR_RD,
    ram_empty_fb_i_reg_0,
    RD_PNTR_WR,
    \wr_pntr_bin_reg[0]_0 ,
    Q,
    \gc0.count_reg[7] ,
    p_0_in6_out,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ,
    I41);
  output ram_empty_fb_i_reg;
  output [1:0]WR_PNTR_RD;
  output ram_empty_fb_i_reg_0;
  output [7:0]RD_PNTR_WR;
  input \wr_pntr_bin_reg[0]_0 ;
  input [7:0]Q;
  input [5:0]\gc0.count_reg[7] ;
  input [7:0]p_0_in6_out;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  input [6:0]I41;

  wire [6:0]I41;
  wire [7:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire [1:0]WR_PNTR_RD;
  wire clk_ph_out;
  wire [5:0]\gc0.count_reg[7] ;
  wire \gsync_stage[5].wr_stg_inst_n_1 ;
  wire \gsync_stage[5].wr_stg_inst_n_2 ;
  wire \gsync_stage[5].wr_stg_inst_n_3 ;
  wire \gsync_stage[5].wr_stg_inst_n_4 ;
  wire \gsync_stage[5].wr_stg_inst_n_5 ;
  wire \gsync_stage[5].wr_stg_inst_n_6 ;
  wire \gsync_stage[5].wr_stg_inst_n_7 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire [6:0]p_0_in;
  wire [7:0]p_0_in6_out;
  wire [7:7]p_0_out;
  wire [7:7]p_1_out;
  wire [7:2]p_21_out;
  wire [7:0]p_2_out;
  wire [7:0]p_3_out;
  wire [7:0]p_4_out;
  wire [7:0]p_5_out;
  wire [7:0]p_6_out;
  wire [7:0]p_7_out;
  wire [7:0]p_8_out;
  wire [7:0]p_9_out;
  wire ram_empty_fb_i_i_2_n_0;
  wire ram_empty_fb_i_i_4_n_0;
  wire ram_empty_fb_i_i_5_n_0;
  wire ram_empty_fb_i_i_6_n_0;
  wire ram_empty_fb_i_i_8_n_0;
  wire ram_empty_fb_i_i_9_n_0;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire [7:0]rd_pntr_gc;
  wire \wr_pntr_bin_reg[0]_0 ;
  wire [7:0]wr_pntr_gc;

  v7_bd_axi_chip2chip_0_0_synchronizer_ff \gsync_stage[1].rd_stg_inst 
       (.D(p_9_out),
        .Q(wr_pntr_gc),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_6 \gsync_stage[1].wr_stg_inst 
       (.D(p_8_out),
        .Q(rd_pntr_gc),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_7 \gsync_stage[2].rd_stg_inst 
       (.D(p_7_out),
        .\Q_reg_reg[7]_0 (p_9_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_8 \gsync_stage[2].wr_stg_inst 
       (.D(p_6_out),
        .\Q_reg_reg[7]_0 (p_8_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_9 \gsync_stage[3].rd_stg_inst 
       (.D(p_5_out),
        .\Q_reg_reg[7]_0 (p_7_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_10 \gsync_stage[3].wr_stg_inst 
       (.D(p_4_out),
        .\Q_reg_reg[7]_0 (p_6_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_11 \gsync_stage[4].rd_stg_inst 
       (.D(p_3_out),
        .\Q_reg_reg[7]_0 (p_5_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_12 \gsync_stage[4].wr_stg_inst 
       (.D(p_2_out),
        .\Q_reg_reg[7]_0 (p_4_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_13 \gsync_stage[5].rd_stg_inst 
       (.D(p_3_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(p_1_out),
        .\wr_pntr_bin_reg[6] (p_0_in));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_14 \gsync_stage[5].wr_stg_inst 
       (.D(p_2_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .out(p_0_out),
        .\rd_pntr_bin_reg[6] ({\gsync_stage[5].wr_stg_inst_n_1 ,\gsync_stage[5].wr_stg_inst_n_2 ,\gsync_stage[5].wr_stg_inst_n_3 ,\gsync_stage[5].wr_stg_inst_n_4 ,\gsync_stage[5].wr_stg_inst_n_5 ,\gsync_stage[5].wr_stg_inst_n_6 ,\gsync_stage[5].wr_stg_inst_n_7 }));
  LUT4 #(
    .INIT(16'h444F)) 
    ram_empty_fb_i_i_1__0
       (.I0(ram_empty_fb_i_i_2_n_0),
        .I1(\wr_pntr_bin_reg[0]_0 ),
        .I2(ram_empty_fb_i_i_4_n_0),
        .I3(ram_empty_fb_i_i_5_n_0),
        .O(ram_empty_fb_i_reg));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_empty_fb_i_i_2
       (.I0(\gc0.count_reg[7] [3]),
        .I1(p_21_out[5]),
        .I2(\gc0.count_reg[7] [2]),
        .I3(p_21_out[4]),
        .I4(ram_empty_fb_i_i_6_n_0),
        .O(ram_empty_fb_i_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_empty_fb_i_i_4
       (.I0(Q[1]),
        .I1(WR_PNTR_RD[1]),
        .I2(Q[0]),
        .I3(WR_PNTR_RD[0]),
        .I4(ram_empty_fb_i_i_8_n_0),
        .O(ram_empty_fb_i_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_empty_fb_i_i_5
       (.I0(Q[5]),
        .I1(p_21_out[5]),
        .I2(Q[4]),
        .I3(p_21_out[4]),
        .I4(ram_empty_fb_i_i_9_n_0),
        .O(ram_empty_fb_i_i_5_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_6
       (.I0(p_21_out[7]),
        .I1(\gc0.count_reg[7] [5]),
        .I2(p_21_out[6]),
        .I3(\gc0.count_reg[7] [4]),
        .O(ram_empty_fb_i_i_6_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_7
       (.I0(p_21_out[2]),
        .I1(\gc0.count_reg[7] [0]),
        .I2(p_21_out[3]),
        .I3(\gc0.count_reg[7] [1]),
        .O(ram_empty_fb_i_reg_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_8
       (.I0(p_21_out[2]),
        .I1(Q[2]),
        .I2(p_21_out[3]),
        .I3(Q[3]),
        .O(ram_empty_fb_i_i_8_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_9
       (.I0(p_21_out[7]),
        .I1(Q[7]),
        .I2(p_21_out[6]),
        .I3(Q[6]),
        .O(ram_empty_fb_i_i_9_n_0));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_7 ),
        .Q(RD_PNTR_WR[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_6 ),
        .Q(RD_PNTR_WR[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_5 ),
        .Q(RD_PNTR_WR[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_4 ),
        .Q(RD_PNTR_WR[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_3 ),
        .Q(RD_PNTR_WR[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_2 ),
        .Q(RD_PNTR_WR[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_1 ),
        .Q(RD_PNTR_WR[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_out),
        .Q(RD_PNTR_WR[7]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I41[0]),
        .Q(rd_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I41[1]),
        .Q(rd_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I41[2]),
        .Q(rd_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I41[3]),
        .Q(rd_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I41[4]),
        .Q(rd_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I41[5]),
        .Q(rd_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I41[6]),
        .Q(rd_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[7]),
        .Q(rd_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[0]),
        .Q(WR_PNTR_RD[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[1]),
        .Q(WR_PNTR_RD[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[2]),
        .Q(p_21_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[3]),
        .Q(p_21_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[4]),
        .Q(p_21_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[5]),
        .Q(p_21_out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[6]),
        .Q(p_21_out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_1_out),
        .Q(p_21_out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[0]),
        .Q(wr_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[1]),
        .Q(wr_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[2]),
        .Q(wr_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[3]),
        .Q(wr_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[4]),
        .Q(wr_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[5]),
        .Q(wr_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[6]),
        .Q(wr_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[7]),
        .Q(wr_pntr_gc[7]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module v7_bd_axi_chip2chip_0_0_clk_x_pntrs_16
   (ram_empty_fb_i_reg,
    RD_PNTR_WR,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    p_0_in6_out,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ,
    I10);
  output ram_empty_fb_i_reg;
  output [7:0]RD_PNTR_WR;
  input [0:0]E;
  input [7:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]p_0_in6_out;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  input [6:0]I10;

  wire [0:0]E;
  wire [6:0]I10;
  wire [7:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire clk_ph_out;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire \gsync_stage[5].wr_stg_inst_n_1 ;
  wire \gsync_stage[5].wr_stg_inst_n_2 ;
  wire \gsync_stage[5].wr_stg_inst_n_3 ;
  wire \gsync_stage[5].wr_stg_inst_n_4 ;
  wire \gsync_stage[5].wr_stg_inst_n_5 ;
  wire \gsync_stage[5].wr_stg_inst_n_6 ;
  wire \gsync_stage[5].wr_stg_inst_n_7 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire [6:0]p_0_in;
  wire [7:0]p_0_in6_out;
  wire [7:7]p_0_out;
  wire [7:7]p_1_out;
  wire [7:0]p_21_out;
  wire [7:0]p_2_out;
  wire [7:0]p_3_out;
  wire [7:0]p_4_out;
  wire [7:0]p_5_out;
  wire [7:0]p_6_out;
  wire [7:0]p_7_out;
  wire [7:0]p_8_out;
  wire [7:0]p_9_out;
  wire ram_empty_fb_i_i_2__1_n_0;
  wire ram_empty_fb_i_i_3__1_n_0;
  wire ram_empty_fb_i_i_4__1_n_0;
  wire ram_empty_fb_i_i_5__0_n_0;
  wire ram_empty_fb_i_i_6__0_n_0;
  wire ram_empty_fb_i_i_7__0_n_0;
  wire ram_empty_fb_i_i_8__0_n_0;
  wire ram_empty_fb_i_i_9__0_n_0;
  wire ram_empty_fb_i_reg;
  wire [7:0]rd_pntr_gc;
  wire [7:0]wr_pntr_gc;

  v7_bd_axi_chip2chip_0_0_synchronizer_ff_24 \gsync_stage[1].rd_stg_inst 
       (.D(p_9_out),
        .Q(wr_pntr_gc),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_25 \gsync_stage[1].wr_stg_inst 
       (.D(p_8_out),
        .Q(rd_pntr_gc),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_26 \gsync_stage[2].rd_stg_inst 
       (.D(p_7_out),
        .\Q_reg_reg[7]_0 (p_9_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_27 \gsync_stage[2].wr_stg_inst 
       (.D(p_6_out),
        .\Q_reg_reg[7]_0 (p_8_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_28 \gsync_stage[3].rd_stg_inst 
       (.D(p_5_out),
        .\Q_reg_reg[7]_0 (p_7_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_29 \gsync_stage[3].wr_stg_inst 
       (.D(p_4_out),
        .\Q_reg_reg[7]_0 (p_6_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_30 \gsync_stage[4].rd_stg_inst 
       (.D(p_3_out),
        .\Q_reg_reg[7]_0 (p_5_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_31 \gsync_stage[4].wr_stg_inst 
       (.D(p_2_out),
        .\Q_reg_reg[7]_0 (p_4_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_32 \gsync_stage[5].rd_stg_inst 
       (.D(p_3_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(p_1_out),
        .\wr_pntr_bin_reg[6] (p_0_in));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_33 \gsync_stage[5].wr_stg_inst 
       (.D(p_2_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .out(p_0_out),
        .\rd_pntr_bin_reg[6] ({\gsync_stage[5].wr_stg_inst_n_1 ,\gsync_stage[5].wr_stg_inst_n_2 ,\gsync_stage[5].wr_stg_inst_n_3 ,\gsync_stage[5].wr_stg_inst_n_4 ,\gsync_stage[5].wr_stg_inst_n_5 ,\gsync_stage[5].wr_stg_inst_n_6 ,\gsync_stage[5].wr_stg_inst_n_7 }));
  LUT5 #(
    .INIT(32'h111111F1)) 
    ram_empty_fb_i_i_1__2
       (.I0(ram_empty_fb_i_i_2__1_n_0),
        .I1(ram_empty_fb_i_i_3__1_n_0),
        .I2(E),
        .I3(ram_empty_fb_i_i_4__1_n_0),
        .I4(ram_empty_fb_i_i_5__0_n_0),
        .O(ram_empty_fb_i_reg));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_empty_fb_i_i_2__1
       (.I0(\gc0.count_d1_reg[7] [2]),
        .I1(p_21_out[2]),
        .I2(\gc0.count_d1_reg[7] [3]),
        .I3(p_21_out[3]),
        .I4(ram_empty_fb_i_i_6__0_n_0),
        .O(ram_empty_fb_i_i_2__1_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_empty_fb_i_i_3__1
       (.I0(\gc0.count_d1_reg[7] [7]),
        .I1(p_21_out[7]),
        .I2(\gc0.count_d1_reg[7] [6]),
        .I3(p_21_out[6]),
        .I4(ram_empty_fb_i_i_7__0_n_0),
        .O(ram_empty_fb_i_i_3__1_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_empty_fb_i_i_4__1
       (.I0(Q[7]),
        .I1(p_21_out[7]),
        .I2(Q[6]),
        .I3(p_21_out[6]),
        .I4(ram_empty_fb_i_i_8__0_n_0),
        .O(ram_empty_fb_i_i_4__1_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_empty_fb_i_i_5__0
       (.I0(Q[2]),
        .I1(p_21_out[2]),
        .I2(Q[3]),
        .I3(p_21_out[3]),
        .I4(ram_empty_fb_i_i_9__0_n_0),
        .O(ram_empty_fb_i_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_6__0
       (.I0(p_21_out[1]),
        .I1(\gc0.count_d1_reg[7] [1]),
        .I2(p_21_out[0]),
        .I3(\gc0.count_d1_reg[7] [0]),
        .O(ram_empty_fb_i_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_7__0
       (.I0(p_21_out[5]),
        .I1(\gc0.count_d1_reg[7] [5]),
        .I2(p_21_out[4]),
        .I3(\gc0.count_d1_reg[7] [4]),
        .O(ram_empty_fb_i_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_8__0
       (.I0(p_21_out[5]),
        .I1(Q[5]),
        .I2(p_21_out[4]),
        .I3(Q[4]),
        .O(ram_empty_fb_i_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_9__0
       (.I0(p_21_out[1]),
        .I1(Q[1]),
        .I2(p_21_out[0]),
        .I3(Q[0]),
        .O(ram_empty_fb_i_i_9__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_7 ),
        .Q(RD_PNTR_WR[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_6 ),
        .Q(RD_PNTR_WR[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_5 ),
        .Q(RD_PNTR_WR[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_4 ),
        .Q(RD_PNTR_WR[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_3 ),
        .Q(RD_PNTR_WR[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_2 ),
        .Q(RD_PNTR_WR[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_1 ),
        .Q(RD_PNTR_WR[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_out),
        .Q(RD_PNTR_WR[7]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I10[0]),
        .Q(rd_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I10[1]),
        .Q(rd_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I10[2]),
        .Q(rd_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I10[3]),
        .Q(rd_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I10[4]),
        .Q(rd_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I10[5]),
        .Q(rd_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(I10[6]),
        .Q(rd_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[7] [7]),
        .Q(rd_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[0]),
        .Q(p_21_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[1]),
        .Q(p_21_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[2]),
        .Q(p_21_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[3]),
        .Q(p_21_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[4]),
        .Q(p_21_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[5]),
        .Q(p_21_out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[6]),
        .Q(p_21_out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_1_out),
        .Q(p_21_out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[0]),
        .Q(wr_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[1]),
        .Q(wr_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[2]),
        .Q(wr_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[3]),
        .Q(wr_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[4]),
        .Q(wr_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[5]),
        .Q(wr_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[6]),
        .Q(wr_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in6_out[7]),
        .Q(wr_pntr_gc[7]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module v7_bd_axi_chip2chip_0_0_clk_x_pntrs_41
   (ram_empty_fb_i_reg,
    \gdiff.diff_pntr_pad_reg[8] ,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    D,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ,
    \gc0.count_d1_reg[6] );
  output ram_empty_fb_i_reg;
  output [7:0]\gdiff.diff_pntr_pad_reg[8] ;
  input [0:0]E;
  input [7:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]D;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  input [6:0]\gc0.count_d1_reg[6] ;

  wire [7:0]D;
  wire [0:0]E;
  wire [7:0]Q;
  wire clk_ph_out;
  wire [6:0]\gc0.count_d1_reg[6] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gdiff.diff_pntr_pad_reg[8] ;
  wire \gsync_stage[5].wr_stg_inst_n_1 ;
  wire \gsync_stage[5].wr_stg_inst_n_2 ;
  wire \gsync_stage[5].wr_stg_inst_n_3 ;
  wire \gsync_stage[5].wr_stg_inst_n_4 ;
  wire \gsync_stage[5].wr_stg_inst_n_5 ;
  wire \gsync_stage[5].wr_stg_inst_n_6 ;
  wire \gsync_stage[5].wr_stg_inst_n_7 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire [6:0]p_0_in;
  wire [7:7]p_0_out;
  wire [7:7]p_1_out;
  wire [7:0]p_21_out;
  wire [7:0]p_2_out;
  wire [7:0]p_3_out;
  wire [7:0]p_4_out;
  wire [7:0]p_5_out;
  wire [7:0]p_6_out;
  wire [7:0]p_7_out;
  wire [7:0]p_8_out;
  wire [7:0]p_9_out;
  wire ram_empty_fb_i_i_2__2_n_0;
  wire ram_empty_fb_i_i_3__2_n_0;
  wire ram_empty_fb_i_i_4__2_n_0;
  wire ram_empty_fb_i_i_5__1_n_0;
  wire ram_empty_fb_i_i_6__1_n_0;
  wire ram_empty_fb_i_i_7__1_n_0;
  wire ram_empty_fb_i_i_8__1_n_0;
  wire ram_empty_fb_i_i_9__1_n_0;
  wire ram_empty_fb_i_reg;
  wire [7:0]rd_pntr_gc;
  wire [7:0]wr_pntr_gc;

  v7_bd_axi_chip2chip_0_0_synchronizer_ff_58 \gsync_stage[1].rd_stg_inst 
       (.D(p_9_out),
        .Q(wr_pntr_gc),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_59 \gsync_stage[1].wr_stg_inst 
       (.D(p_8_out),
        .Q(rd_pntr_gc),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_60 \gsync_stage[2].rd_stg_inst 
       (.D(p_7_out),
        .\Q_reg_reg[7]_0 (p_9_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_61 \gsync_stage[2].wr_stg_inst 
       (.D(p_6_out),
        .\Q_reg_reg[7]_0 (p_8_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_62 \gsync_stage[3].rd_stg_inst 
       (.D(p_5_out),
        .\Q_reg_reg[7]_0 (p_7_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_63 \gsync_stage[3].wr_stg_inst 
       (.D(p_4_out),
        .\Q_reg_reg[7]_0 (p_6_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_64 \gsync_stage[4].rd_stg_inst 
       (.D(p_3_out),
        .\Q_reg_reg[7]_0 (p_5_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_65 \gsync_stage[4].wr_stg_inst 
       (.D(p_2_out),
        .\Q_reg_reg[7]_0 (p_4_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_66 \gsync_stage[5].rd_stg_inst 
       (.D(p_3_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(p_1_out),
        .\wr_pntr_bin_reg[6] (p_0_in));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff_67 \gsync_stage[5].wr_stg_inst 
       (.D(p_2_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .out(p_0_out),
        .\rd_pntr_bin_reg[6] ({\gsync_stage[5].wr_stg_inst_n_1 ,\gsync_stage[5].wr_stg_inst_n_2 ,\gsync_stage[5].wr_stg_inst_n_3 ,\gsync_stage[5].wr_stg_inst_n_4 ,\gsync_stage[5].wr_stg_inst_n_5 ,\gsync_stage[5].wr_stg_inst_n_6 ,\gsync_stage[5].wr_stg_inst_n_7 }));
  LUT5 #(
    .INIT(32'h111111F1)) 
    ram_empty_fb_i_i_1__3
       (.I0(ram_empty_fb_i_i_2__2_n_0),
        .I1(ram_empty_fb_i_i_3__2_n_0),
        .I2(E),
        .I3(ram_empty_fb_i_i_4__2_n_0),
        .I4(ram_empty_fb_i_i_5__1_n_0),
        .O(ram_empty_fb_i_reg));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_empty_fb_i_i_2__2
       (.I0(\gc0.count_d1_reg[7] [2]),
        .I1(p_21_out[2]),
        .I2(\gc0.count_d1_reg[7] [3]),
        .I3(p_21_out[3]),
        .I4(ram_empty_fb_i_i_6__1_n_0),
        .O(ram_empty_fb_i_i_2__2_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_empty_fb_i_i_3__2
       (.I0(\gc0.count_d1_reg[7] [7]),
        .I1(p_21_out[7]),
        .I2(\gc0.count_d1_reg[7] [6]),
        .I3(p_21_out[6]),
        .I4(ram_empty_fb_i_i_7__1_n_0),
        .O(ram_empty_fb_i_i_3__2_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_empty_fb_i_i_4__2
       (.I0(Q[7]),
        .I1(p_21_out[7]),
        .I2(Q[6]),
        .I3(p_21_out[6]),
        .I4(ram_empty_fb_i_i_8__1_n_0),
        .O(ram_empty_fb_i_i_4__2_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_empty_fb_i_i_5__1
       (.I0(Q[2]),
        .I1(p_21_out[2]),
        .I2(Q[3]),
        .I3(p_21_out[3]),
        .I4(ram_empty_fb_i_i_9__1_n_0),
        .O(ram_empty_fb_i_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_6__1
       (.I0(p_21_out[1]),
        .I1(\gc0.count_d1_reg[7] [1]),
        .I2(p_21_out[0]),
        .I3(\gc0.count_d1_reg[7] [0]),
        .O(ram_empty_fb_i_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_7__1
       (.I0(p_21_out[5]),
        .I1(\gc0.count_d1_reg[7] [5]),
        .I2(p_21_out[4]),
        .I3(\gc0.count_d1_reg[7] [4]),
        .O(ram_empty_fb_i_i_7__1_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_8__1
       (.I0(p_21_out[5]),
        .I1(Q[5]),
        .I2(p_21_out[4]),
        .I3(Q[4]),
        .O(ram_empty_fb_i_i_8__1_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_9__1
       (.I0(p_21_out[1]),
        .I1(Q[1]),
        .I2(p_21_out[0]),
        .I3(Q[0]),
        .O(ram_empty_fb_i_i_9__1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_7 ),
        .Q(\gdiff.diff_pntr_pad_reg[8] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_6 ),
        .Q(\gdiff.diff_pntr_pad_reg[8] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_5 ),
        .Q(\gdiff.diff_pntr_pad_reg[8] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_4 ),
        .Q(\gdiff.diff_pntr_pad_reg[8] [3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_3 ),
        .Q(\gdiff.diff_pntr_pad_reg[8] [4]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_2 ),
        .Q(\gdiff.diff_pntr_pad_reg[8] [5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_1 ),
        .Q(\gdiff.diff_pntr_pad_reg[8] [6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_out),
        .Q(\gdiff.diff_pntr_pad_reg[8] [7]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[6] [0]),
        .Q(rd_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[6] [1]),
        .Q(rd_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[6] [2]),
        .Q(rd_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[6] [3]),
        .Q(rd_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[6] [4]),
        .Q(rd_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[6] [5]),
        .Q(rd_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[6] [6]),
        .Q(rd_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[7] [7]),
        .Q(rd_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[0]),
        .Q(p_21_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[1]),
        .Q(p_21_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[2]),
        .Q(p_21_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[3]),
        .Q(p_21_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[4]),
        .Q(p_21_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[5]),
        .Q(p_21_out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[6]),
        .Q(p_21_out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_1_out),
        .Q(p_21_out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[0]),
        .Q(wr_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[1]),
        .Q(wr_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[2]),
        .Q(wr_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[3]),
        .Q(wr_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[4]),
        .Q(wr_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[5]),
        .Q(wr_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[6]),
        .Q(wr_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[7]),
        .Q(wr_pntr_gc[7]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module v7_bd_axi_chip2chip_0_0_clk_x_pntrs__parameterized0
   (v1_reg,
    RD_PNTR_WR,
    v1_reg_0,
    v1_reg_1,
    WR_PNTR_RD,
    v1_reg_2,
    Q,
    \gic0.gc0.count_reg[8] ,
    \gc0.count_d1_reg[8] ,
    \gc0.count_reg[7] ,
    \gic0.gc0.count_d2_reg[8] ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [4:0]v1_reg;
  output [8:0]RD_PNTR_WR;
  output [4:0]v1_reg_0;
  output [3:0]v1_reg_1;
  output [0:0]WR_PNTR_RD;
  output [3:0]v1_reg_2;
  input [8:0]Q;
  input [8:0]\gic0.gc0.count_reg[8] ;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [7:0]\gc0.count_reg[7] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [0:0]WR_PNTR_RD;
  wire clk_ph_out;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [7:0]\gc0.count_reg[7] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire [8:0]\gic0.gc0.count_reg[8] ;
  wire \gsync_stage[5].wr_stg_inst_n_1 ;
  wire \gsync_stage[5].wr_stg_inst_n_2 ;
  wire \gsync_stage[5].wr_stg_inst_n_3 ;
  wire \gsync_stage[5].wr_stg_inst_n_4 ;
  wire \gsync_stage[5].wr_stg_inst_n_5 ;
  wire \gsync_stage[5].wr_stg_inst_n_6 ;
  wire \gsync_stage[5].wr_stg_inst_n_7 ;
  wire \gsync_stage[5].wr_stg_inst_n_8 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire [7:0]p_0_in;
  wire [7:0]p_0_in7_out;
  wire [8:8]p_0_out;
  wire [8:8]p_1_out;
  wire [7:0]p_21_out;
  wire [8:0]p_2_out;
  wire [8:0]p_3_out;
  wire [8:0]p_4_out;
  wire [8:0]p_5_out;
  wire [8:0]p_6_out;
  wire [8:0]p_7_out;
  wire [8:0]p_8_out;
  wire [8:0]p_9_out;
  wire [8:0]rd_pntr_gc;
  wire \rd_pntr_gc[0]_i_1_n_0 ;
  wire \rd_pntr_gc[1]_i_1_n_0 ;
  wire \rd_pntr_gc[2]_i_1_n_0 ;
  wire \rd_pntr_gc[3]_i_1_n_0 ;
  wire \rd_pntr_gc[4]_i_1_n_0 ;
  wire \rd_pntr_gc[5]_i_1_n_0 ;
  wire \rd_pntr_gc[6]_i_1_n_0 ;
  wire \rd_pntr_gc[7]_i_1_n_0 ;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;
  wire [3:0]v1_reg_1;
  wire [3:0]v1_reg_2;
  wire [8:0]wr_pntr_gc;

  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(RD_PNTR_WR[0]),
        .I1(Q[0]),
        .I2(RD_PNTR_WR[1]),
        .I3(Q[1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(RD_PNTR_WR[0]),
        .I1(\gic0.gc0.count_reg[8] [0]),
        .I2(RD_PNTR_WR[1]),
        .I3(\gic0.gc0.count_reg[8] [1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__3 
       (.I0(p_21_out[0]),
        .I1(\gc0.count_d1_reg[8] [0]),
        .I2(p_21_out[1]),
        .I3(\gc0.count_d1_reg[8] [1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__4 
       (.I0(p_21_out[0]),
        .I1(\gc0.count_reg[7] [0]),
        .I2(p_21_out[1]),
        .I3(\gc0.count_reg[7] [1]),
        .O(v1_reg_2[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(RD_PNTR_WR[2]),
        .I1(Q[2]),
        .I2(RD_PNTR_WR[3]),
        .I3(Q[3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gic0.gc0.count_reg[8] [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gic0.gc0.count_reg[8] [3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__3 
       (.I0(p_21_out[2]),
        .I1(\gc0.count_d1_reg[8] [2]),
        .I2(p_21_out[3]),
        .I3(\gc0.count_d1_reg[8] [3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__4 
       (.I0(p_21_out[2]),
        .I1(\gc0.count_reg[7] [2]),
        .I2(p_21_out[3]),
        .I3(\gc0.count_reg[7] [3]),
        .O(v1_reg_2[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(RD_PNTR_WR[4]),
        .I1(Q[4]),
        .I2(RD_PNTR_WR[5]),
        .I3(Q[5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[4]),
        .I1(\gic0.gc0.count_reg[8] [4]),
        .I2(RD_PNTR_WR[5]),
        .I3(\gic0.gc0.count_reg[8] [5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__3 
       (.I0(p_21_out[4]),
        .I1(\gc0.count_d1_reg[8] [4]),
        .I2(p_21_out[5]),
        .I3(\gc0.count_d1_reg[8] [5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__4 
       (.I0(p_21_out[4]),
        .I1(\gc0.count_reg[7] [4]),
        .I2(p_21_out[5]),
        .I3(\gc0.count_reg[7] [5]),
        .O(v1_reg_2[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(RD_PNTR_WR[6]),
        .I1(Q[6]),
        .I2(RD_PNTR_WR[7]),
        .I3(Q[7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gic0.gc0.count_reg[8] [6]),
        .I2(RD_PNTR_WR[7]),
        .I3(\gic0.gc0.count_reg[8] [7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__3 
       (.I0(p_21_out[6]),
        .I1(\gc0.count_d1_reg[8] [6]),
        .I2(p_21_out[7]),
        .I3(\gc0.count_d1_reg[8] [7]),
        .O(v1_reg_1[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__4 
       (.I0(p_21_out[6]),
        .I1(\gc0.count_reg[7] [6]),
        .I2(p_21_out[7]),
        .I3(\gc0.count_reg[7] [7]),
        .O(v1_reg_2[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(RD_PNTR_WR[8]),
        .I1(Q[8]),
        .O(v1_reg[4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__0 
       (.I0(RD_PNTR_WR[8]),
        .I1(\gic0.gc0.count_reg[8] [8]),
        .O(v1_reg_0[4]));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized0 \gsync_stage[1].rd_stg_inst 
       (.D(p_9_out),
        .Q(wr_pntr_gc),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized1 \gsync_stage[1].wr_stg_inst 
       (.D(p_8_out),
        .Q(rd_pntr_gc),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized2 \gsync_stage[2].rd_stg_inst 
       (.D(p_7_out),
        .\Q_reg_reg[8]_0 (p_9_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized3 \gsync_stage[2].wr_stg_inst 
       (.D(p_6_out),
        .\Q_reg_reg[8]_0 (p_8_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized4 \gsync_stage[3].rd_stg_inst 
       (.D(p_5_out),
        .\Q_reg_reg[8]_0 (p_7_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized5 \gsync_stage[3].wr_stg_inst 
       (.D(p_4_out),
        .\Q_reg_reg[8]_0 (p_6_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized6 \gsync_stage[4].rd_stg_inst 
       (.D(p_3_out),
        .\Q_reg_reg[8]_0 (p_5_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized7 \gsync_stage[4].wr_stg_inst 
       (.D(p_2_out),
        .\Q_reg_reg[8]_0 (p_4_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized8 \gsync_stage[5].rd_stg_inst 
       (.D(p_0_in),
        .\Q_reg_reg[8]_0 (p_3_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(p_1_out));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized9 \gsync_stage[5].wr_stg_inst 
       (.D({\gsync_stage[5].wr_stg_inst_n_1 ,\gsync_stage[5].wr_stg_inst_n_2 ,\gsync_stage[5].wr_stg_inst_n_3 ,\gsync_stage[5].wr_stg_inst_n_4 ,\gsync_stage[5].wr_stg_inst_n_5 ,\gsync_stage[5].wr_stg_inst_n_6 ,\gsync_stage[5].wr_stg_inst_n_7 ,\gsync_stage[5].wr_stg_inst_n_8 }),
        .\Q_reg_reg[8]_0 (p_2_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .out(p_0_out));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_8 ),
        .Q(RD_PNTR_WR[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_7 ),
        .Q(RD_PNTR_WR[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_6 ),
        .Q(RD_PNTR_WR[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_5 ),
        .Q(RD_PNTR_WR[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_4 ),
        .Q(RD_PNTR_WR[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_3 ),
        .Q(RD_PNTR_WR[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_2 ),
        .Q(RD_PNTR_WR[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_1 ),
        .Q(RD_PNTR_WR[7]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_out),
        .Q(RD_PNTR_WR[8]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[0]_i_1 
       (.I0(\gc0.count_d1_reg[8] [0]),
        .I1(\gc0.count_d1_reg[8] [1]),
        .O(\rd_pntr_gc[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[1]_i_1 
       (.I0(\gc0.count_d1_reg[8] [1]),
        .I1(\gc0.count_d1_reg[8] [2]),
        .O(\rd_pntr_gc[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[2]_i_1 
       (.I0(\gc0.count_d1_reg[8] [2]),
        .I1(\gc0.count_d1_reg[8] [3]),
        .O(\rd_pntr_gc[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[3]_i_1 
       (.I0(\gc0.count_d1_reg[8] [3]),
        .I1(\gc0.count_d1_reg[8] [4]),
        .O(\rd_pntr_gc[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[4]_i_1 
       (.I0(\gc0.count_d1_reg[8] [4]),
        .I1(\gc0.count_d1_reg[8] [5]),
        .O(\rd_pntr_gc[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[5]_i_1 
       (.I0(\gc0.count_d1_reg[8] [5]),
        .I1(\gc0.count_d1_reg[8] [6]),
        .O(\rd_pntr_gc[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[6]_i_1 
       (.I0(\gc0.count_d1_reg[8] [6]),
        .I1(\gc0.count_d1_reg[8] [7]),
        .O(\rd_pntr_gc[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[7]_i_1 
       (.I0(\gc0.count_d1_reg[8] [7]),
        .I1(\gc0.count_d1_reg[8] [8]),
        .O(\rd_pntr_gc[7]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[0]_i_1_n_0 ),
        .Q(rd_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[1]_i_1_n_0 ),
        .Q(rd_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[2]_i_1_n_0 ),
        .Q(rd_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[3]_i_1_n_0 ),
        .Q(rd_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[4]_i_1_n_0 ),
        .Q(rd_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[5]_i_1_n_0 ),
        .Q(rd_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[6]_i_1_n_0 ),
        .Q(rd_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[7]_i_1_n_0 ),
        .Q(rd_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[8] [8]),
        .Q(rd_pntr_gc[8]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[0]),
        .Q(p_21_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[1]),
        .Q(p_21_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[2]),
        .Q(p_21_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[3]),
        .Q(p_21_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[4]),
        .Q(p_21_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[5]),
        .Q(p_21_out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[6]),
        .Q(p_21_out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[7]),
        .Q(p_21_out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_1_out),
        .Q(WR_PNTR_RD));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[0]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [0]),
        .I1(\gic0.gc0.count_d2_reg[8] [1]),
        .O(p_0_in7_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[1]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [1]),
        .I1(\gic0.gc0.count_d2_reg[8] [2]),
        .O(p_0_in7_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[2]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [2]),
        .I1(\gic0.gc0.count_d2_reg[8] [3]),
        .O(p_0_in7_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[3]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [3]),
        .I1(\gic0.gc0.count_d2_reg[8] [4]),
        .O(p_0_in7_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[4]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [4]),
        .I1(\gic0.gc0.count_d2_reg[8] [5]),
        .O(p_0_in7_out[4]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[5]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [5]),
        .I1(\gic0.gc0.count_d2_reg[8] [6]),
        .O(p_0_in7_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[6]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [6]),
        .I1(\gic0.gc0.count_d2_reg[8] [7]),
        .O(p_0_in7_out[6]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[7]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [7]),
        .I1(\gic0.gc0.count_d2_reg[8] [8]),
        .O(p_0_in7_out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[0]),
        .Q(wr_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[1]),
        .Q(wr_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[2]),
        .Q(wr_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[3]),
        .Q(wr_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[4]),
        .Q(wr_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[5]),
        .Q(wr_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[6]),
        .Q(wr_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[7]),
        .Q(wr_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gic0.gc0.count_d2_reg[8] [8]),
        .Q(wr_pntr_gc[8]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module v7_bd_axi_chip2chip_0_0_clk_x_pntrs__parameterized1
   (ram_full_fb_i_reg,
    RD_PNTR_WR,
    ram_full_fb_i_reg_0,
    WR_PNTR_RD,
    Q,
    \gic0.gc0.count_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    \gc0.count_d1_reg[8] ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output ram_full_fb_i_reg;
  output [7:0]RD_PNTR_WR;
  output ram_full_fb_i_reg_0;
  output [8:0]WR_PNTR_RD;
  input [0:0]Q;
  input [0:0]\gic0.gc0.count_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [8:0]\gc0.count_d1_reg[8] ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [0:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire [8:0]WR_PNTR_RD;
  wire clk_ph_out;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire [0:0]\gic0.gc0.count_reg[8] ;
  wire \gsync_stage[5].wr_stg_inst_n_1 ;
  wire \gsync_stage[5].wr_stg_inst_n_2 ;
  wire \gsync_stage[5].wr_stg_inst_n_3 ;
  wire \gsync_stage[5].wr_stg_inst_n_4 ;
  wire \gsync_stage[5].wr_stg_inst_n_5 ;
  wire \gsync_stage[5].wr_stg_inst_n_6 ;
  wire \gsync_stage[5].wr_stg_inst_n_7 ;
  wire \gsync_stage[5].wr_stg_inst_n_8 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire [7:0]p_0_in;
  wire [7:0]p_0_in7_out;
  wire [8:8]p_0_out;
  wire [8:8]p_1_out;
  wire [8:8]p_22_out;
  wire [8:0]p_2_out;
  wire [8:0]p_3_out;
  wire [8:0]p_4_out;
  wire [8:0]p_5_out;
  wire [8:0]p_6_out;
  wire [8:0]p_7_out;
  wire [8:0]p_8_out;
  wire [8:0]p_9_out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire [8:0]rd_pntr_gc;
  wire \rd_pntr_gc[0]_i_1_n_0 ;
  wire \rd_pntr_gc[1]_i_1_n_0 ;
  wire \rd_pntr_gc[2]_i_1_n_0 ;
  wire \rd_pntr_gc[3]_i_1_n_0 ;
  wire \rd_pntr_gc[4]_i_1_n_0 ;
  wire \rd_pntr_gc[5]_i_1_n_0 ;
  wire \rd_pntr_gc[6]_i_1_n_0 ;
  wire \rd_pntr_gc[7]_i_1_n_0 ;
  wire [8:0]wr_pntr_gc;

  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__5 
       (.I0(p_22_out),
        .I1(Q),
        .O(ram_full_fb_i_reg));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__6 
       (.I0(p_22_out),
        .I1(\gic0.gc0.count_reg[8] ),
        .O(ram_full_fb_i_reg_0));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized10 \gsync_stage[1].rd_stg_inst 
       (.D(p_9_out),
        .Q(wr_pntr_gc),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized11 \gsync_stage[1].wr_stg_inst 
       (.D(p_8_out),
        .Q(rd_pntr_gc),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized12 \gsync_stage[2].rd_stg_inst 
       (.D(p_7_out),
        .\Q_reg_reg[8]_0 (p_9_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized13 \gsync_stage[2].wr_stg_inst 
       (.D(p_6_out),
        .\Q_reg_reg[8]_0 (p_8_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized14 \gsync_stage[3].rd_stg_inst 
       (.D(p_5_out),
        .\Q_reg_reg[8]_0 (p_7_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized15 \gsync_stage[3].wr_stg_inst 
       (.D(p_4_out),
        .\Q_reg_reg[8]_0 (p_6_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized16 \gsync_stage[4].rd_stg_inst 
       (.D(p_3_out),
        .\Q_reg_reg[8]_0 (p_5_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized17 \gsync_stage[4].wr_stg_inst 
       (.D(p_2_out),
        .\Q_reg_reg[8]_0 (p_4_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized18 \gsync_stage[5].rd_stg_inst 
       (.D(p_0_in),
        .\Q_reg_reg[8]_0 (p_3_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(p_1_out));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized19 \gsync_stage[5].wr_stg_inst 
       (.D({\gsync_stage[5].wr_stg_inst_n_1 ,\gsync_stage[5].wr_stg_inst_n_2 ,\gsync_stage[5].wr_stg_inst_n_3 ,\gsync_stage[5].wr_stg_inst_n_4 ,\gsync_stage[5].wr_stg_inst_n_5 ,\gsync_stage[5].wr_stg_inst_n_6 ,\gsync_stage[5].wr_stg_inst_n_7 ,\gsync_stage[5].wr_stg_inst_n_8 }),
        .\Q_reg_reg[8]_0 (p_2_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .out(p_0_out));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_8 ),
        .Q(RD_PNTR_WR[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_7 ),
        .Q(RD_PNTR_WR[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_6 ),
        .Q(RD_PNTR_WR[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_5 ),
        .Q(RD_PNTR_WR[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_4 ),
        .Q(RD_PNTR_WR[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_3 ),
        .Q(RD_PNTR_WR[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_2 ),
        .Q(RD_PNTR_WR[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_1 ),
        .Q(RD_PNTR_WR[7]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_out),
        .Q(p_22_out));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[0]_i_1 
       (.I0(\gc0.count_d1_reg[8] [0]),
        .I1(\gc0.count_d1_reg[8] [1]),
        .O(\rd_pntr_gc[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[1]_i_1 
       (.I0(\gc0.count_d1_reg[8] [1]),
        .I1(\gc0.count_d1_reg[8] [2]),
        .O(\rd_pntr_gc[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[2]_i_1 
       (.I0(\gc0.count_d1_reg[8] [2]),
        .I1(\gc0.count_d1_reg[8] [3]),
        .O(\rd_pntr_gc[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[3]_i_1 
       (.I0(\gc0.count_d1_reg[8] [3]),
        .I1(\gc0.count_d1_reg[8] [4]),
        .O(\rd_pntr_gc[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[4]_i_1 
       (.I0(\gc0.count_d1_reg[8] [4]),
        .I1(\gc0.count_d1_reg[8] [5]),
        .O(\rd_pntr_gc[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[5]_i_1 
       (.I0(\gc0.count_d1_reg[8] [5]),
        .I1(\gc0.count_d1_reg[8] [6]),
        .O(\rd_pntr_gc[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[6]_i_1 
       (.I0(\gc0.count_d1_reg[8] [6]),
        .I1(\gc0.count_d1_reg[8] [7]),
        .O(\rd_pntr_gc[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[7]_i_1 
       (.I0(\gc0.count_d1_reg[8] [7]),
        .I1(\gc0.count_d1_reg[8] [8]),
        .O(\rd_pntr_gc[7]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[0]_i_1_n_0 ),
        .Q(rd_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[1]_i_1_n_0 ),
        .Q(rd_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[2]_i_1_n_0 ),
        .Q(rd_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[3]_i_1_n_0 ),
        .Q(rd_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[4]_i_1_n_0 ),
        .Q(rd_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[5]_i_1_n_0 ),
        .Q(rd_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[6]_i_1_n_0 ),
        .Q(rd_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\rd_pntr_gc[7]_i_1_n_0 ),
        .Q(rd_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[8] [8]),
        .Q(rd_pntr_gc[8]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[0]),
        .Q(WR_PNTR_RD[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[1]),
        .Q(WR_PNTR_RD[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[2]),
        .Q(WR_PNTR_RD[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[3]),
        .Q(WR_PNTR_RD[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[4]),
        .Q(WR_PNTR_RD[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[5]),
        .Q(WR_PNTR_RD[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[6]),
        .Q(WR_PNTR_RD[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in[7]),
        .Q(WR_PNTR_RD[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_1_out),
        .Q(WR_PNTR_RD[8]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[0]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [0]),
        .I1(\gic0.gc0.count_d2_reg[8] [1]),
        .O(p_0_in7_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[1]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [1]),
        .I1(\gic0.gc0.count_d2_reg[8] [2]),
        .O(p_0_in7_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[2]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [2]),
        .I1(\gic0.gc0.count_d2_reg[8] [3]),
        .O(p_0_in7_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[3]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [3]),
        .I1(\gic0.gc0.count_d2_reg[8] [4]),
        .O(p_0_in7_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[4]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [4]),
        .I1(\gic0.gc0.count_d2_reg[8] [5]),
        .O(p_0_in7_out[4]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[5]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [5]),
        .I1(\gic0.gc0.count_d2_reg[8] [6]),
        .O(p_0_in7_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[6]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [6]),
        .I1(\gic0.gc0.count_d2_reg[8] [7]),
        .O(p_0_in7_out[6]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[7]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[8] [7]),
        .I1(\gic0.gc0.count_d2_reg[8] [8]),
        .O(p_0_in7_out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[0]),
        .Q(wr_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[1]),
        .Q(wr_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[2]),
        .Q(wr_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[3]),
        .Q(wr_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[4]),
        .Q(wr_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[5]),
        .Q(wr_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[6]),
        .Q(wr_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in7_out[7]),
        .Q(wr_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gic0.gc0.count_d2_reg[8] [8]),
        .Q(wr_pntr_gc[8]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module v7_bd_axi_chip2chip_0_0_clk_x_pntrs__parameterized2
   (ram_empty_fb_i_reg,
    \gdiff.diff_pntr_pad_reg[4] ,
    Q,
    \gc0.count_reg[3] ,
    E,
    \gic0.gc0.count_d2_reg[3] ,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ,
    D);
  output ram_empty_fb_i_reg;
  output [3:0]\gdiff.diff_pntr_pad_reg[4] ;
  input [3:0]Q;
  input [3:0]\gc0.count_reg[3] ;
  input [0:0]E;
  input [3:0]\gic0.gc0.count_d2_reg[3] ;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  input [2:0]D;

  wire [2:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire clk_ph_out;
  wire [3:0]\gc0.count_reg[3] ;
  wire [3:0]\gdiff.diff_pntr_pad_reg[4] ;
  wire [3:0]\gic0.gc0.count_d2_reg[3] ;
  wire \gsync_stage[5].rd_stg_inst_n_2 ;
  wire \gsync_stage[5].rd_stg_inst_n_3 ;
  wire \gsync_stage[5].wr_stg_inst_n_1 ;
  wire \gsync_stage[5].wr_stg_inst_n_2 ;
  wire \gsync_stage[5].wr_stg_inst_n_3 ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire p_0_in0;
  wire [2:0]p_0_in2_out;
  wire [3:3]p_0_out;
  wire [3:3]p_1_out;
  wire [3:0]p_21_out;
  wire [3:0]p_2_out;
  wire [3:0]p_3_out;
  wire [3:0]p_4_out;
  wire [3:0]p_5_out;
  wire [3:0]p_6_out;
  wire [3:0]p_7_out;
  wire [3:0]p_8_out;
  wire [3:0]p_9_out;
  wire ram_empty_fb_i_i_2__0_n_0;
  wire ram_empty_fb_i_i_3__0_n_0;
  wire ram_empty_fb_i_i_4__0_n_0;
  wire ram_empty_fb_i_reg;
  wire [3:0]rd_pntr_gc;
  wire [3:0]wr_pntr_gc;

  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized20 \gsync_stage[1].rd_stg_inst 
       (.D(p_9_out),
        .Q(wr_pntr_gc),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized21 \gsync_stage[1].wr_stg_inst 
       (.D(p_8_out),
        .Q(rd_pntr_gc),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized22 \gsync_stage[2].rd_stg_inst 
       (.D(p_7_out),
        .\Q_reg_reg[3]_0 (p_9_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized23 \gsync_stage[2].wr_stg_inst 
       (.D(p_6_out),
        .\Q_reg_reg[3]_0 (p_8_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized24 \gsync_stage[3].rd_stg_inst 
       (.D(p_5_out),
        .\Q_reg_reg[3]_0 (p_7_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized25 \gsync_stage[3].wr_stg_inst 
       (.D(p_4_out),
        .\Q_reg_reg[3]_0 (p_6_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized26 \gsync_stage[4].rd_stg_inst 
       (.D(p_3_out),
        .\Q_reg_reg[3]_0 (p_5_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized27 \gsync_stage[4].wr_stg_inst 
       (.D(p_2_out),
        .\Q_reg_reg[3]_0 (p_4_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized28 \gsync_stage[5].rd_stg_inst 
       (.D(p_3_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(p_1_out),
        .\wr_pntr_bin_reg[2] ({p_0_in0,\gsync_stage[5].rd_stg_inst_n_2 ,\gsync_stage[5].rd_stg_inst_n_3 }));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized29 \gsync_stage[5].wr_stg_inst 
       (.D(p_2_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .out(p_0_out),
        .\rd_pntr_bin_reg[2] ({\gsync_stage[5].wr_stg_inst_n_1 ,\gsync_stage[5].wr_stg_inst_n_2 ,\gsync_stage[5].wr_stg_inst_n_3 }));
  LUT6 #(
    .INIT(64'hBAABAAAAAAAABAAB)) 
    ram_empty_fb_i_i_1__1
       (.I0(ram_empty_fb_i_i_2__0_n_0),
        .I1(ram_empty_fb_i_i_3__0_n_0),
        .I2(p_21_out[3]),
        .I3(Q[3]),
        .I4(p_21_out[2]),
        .I5(Q[2]),
        .O(ram_empty_fb_i_reg));
  LUT6 #(
    .INIT(64'h4100004100000000)) 
    ram_empty_fb_i_i_2__0
       (.I0(ram_empty_fb_i_i_4__0_n_0),
        .I1(p_21_out[3]),
        .I2(\gc0.count_reg[3] [3]),
        .I3(p_21_out[2]),
        .I4(\gc0.count_reg[3] [2]),
        .I5(E),
        .O(ram_empty_fb_i_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_3__0
       (.I0(p_21_out[0]),
        .I1(Q[0]),
        .I2(p_21_out[1]),
        .I3(Q[1]),
        .O(ram_empty_fb_i_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_4__0
       (.I0(p_21_out[0]),
        .I1(\gc0.count_reg[3] [0]),
        .I2(p_21_out[1]),
        .I3(\gc0.count_reg[3] [1]),
        .O(ram_empty_fb_i_i_4__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_3 ),
        .Q(\gdiff.diff_pntr_pad_reg[4] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_2 ),
        .Q(\gdiff.diff_pntr_pad_reg[4] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_1 ),
        .Q(\gdiff.diff_pntr_pad_reg[4] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_out),
        .Q(\gdiff.diff_pntr_pad_reg[4] [3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[0]),
        .Q(rd_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[1]),
        .Q(rd_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[2]),
        .Q(rd_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(rd_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gsync_stage[5].rd_stg_inst_n_3 ),
        .Q(p_21_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gsync_stage[5].rd_stg_inst_n_2 ),
        .Q(p_21_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_in0),
        .Q(p_21_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_1_out),
        .Q(p_21_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[0]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[3] [0]),
        .I1(\gic0.gc0.count_d2_reg[3] [1]),
        .O(p_0_in2_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[1]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[3] [1]),
        .I1(\gic0.gc0.count_d2_reg[3] [2]),
        .O(p_0_in2_out[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[2]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[3] [2]),
        .I1(\gic0.gc0.count_d2_reg[3] [3]),
        .O(p_0_in2_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in2_out[0]),
        .Q(wr_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in2_out[1]),
        .Q(wr_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in2_out[2]),
        .Q(wr_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gic0.gc0.count_d2_reg[3] [3]),
        .Q(wr_pntr_gc[3]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module v7_bd_axi_chip2chip_0_0_clk_x_pntrs__parameterized3
   (ram_full_i_reg,
    ram_full_i_reg_0,
    ram_empty_fb_i_reg,
    Q,
    rst_full_gen_i,
    \gc0.count_d1_reg[3] ,
    \gc0.count_reg[3] ,
    E,
    \gic0.gc0.count_d2_reg[3] ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ,
    D);
  output ram_full_i_reg;
  output [3:0]ram_full_i_reg_0;
  output ram_empty_fb_i_reg;
  input [3:0]Q;
  input rst_full_gen_i;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]\gc0.count_reg[3] ;
  input [0:0]E;
  input [3:0]\gic0.gc0.count_d2_reg[3] ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  input [2:0]D;

  wire [2:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire clk_ph_out;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [3:0]\gc0.count_reg[3] ;
  wire [3:0]\gic0.gc0.count_d2_reg[3] ;
  wire \gsync_stage[5].rd_stg_inst_n_1 ;
  wire \gsync_stage[5].rd_stg_inst_n_2 ;
  wire \gsync_stage[5].rd_stg_inst_n_3 ;
  wire \gsync_stage[5].wr_stg_inst_n_1 ;
  wire \gsync_stage[5].wr_stg_inst_n_2 ;
  wire \gsync_stage[5].wr_stg_inst_n_3 ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire [2:0]p_0_in2_out;
  wire [3:3]p_0_out;
  wire [3:3]p_1_out;
  wire [3:0]p_21_out;
  wire [3:0]p_2_out;
  wire [3:0]p_3_out;
  wire [3:0]p_4_out;
  wire [3:0]p_5_out;
  wire [3:0]p_6_out;
  wire [3:0]p_7_out;
  wire [3:0]p_8_out;
  wire [3:0]p_9_out;
  wire ram_empty_fb_i_i_2__3_n_0;
  wire ram_empty_fb_i_i_3__3_n_0;
  wire ram_empty_fb_i_i_4__3_n_0;
  wire ram_empty_fb_i_reg;
  wire ram_full_fb_i_i_5_n_0;
  wire ram_full_i_reg;
  wire [3:0]ram_full_i_reg_0;
  wire \rd_pntr_gc_reg_n_0_[0] ;
  wire \rd_pntr_gc_reg_n_0_[1] ;
  wire \rd_pntr_gc_reg_n_0_[2] ;
  wire \rd_pntr_gc_reg_n_0_[3] ;
  wire rst_full_gen_i;
  wire \wr_pntr_gc_reg_n_0_[0] ;
  wire \wr_pntr_gc_reg_n_0_[1] ;
  wire \wr_pntr_gc_reg_n_0_[2] ;
  wire \wr_pntr_gc_reg_n_0_[3] ;

  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized30 \gsync_stage[1].rd_stg_inst 
       (.D(p_9_out),
        .Q({\wr_pntr_gc_reg_n_0_[3] ,\wr_pntr_gc_reg_n_0_[2] ,\wr_pntr_gc_reg_n_0_[1] ,\wr_pntr_gc_reg_n_0_[0] }),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized31 \gsync_stage[1].wr_stg_inst 
       (.D(p_8_out),
        .Q({\rd_pntr_gc_reg_n_0_[3] ,\rd_pntr_gc_reg_n_0_[2] ,\rd_pntr_gc_reg_n_0_[1] ,\rd_pntr_gc_reg_n_0_[0] }),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized32 \gsync_stage[2].rd_stg_inst 
       (.D(p_7_out),
        .\Q_reg_reg[3]_0 (p_9_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized33 \gsync_stage[2].wr_stg_inst 
       (.D(p_6_out),
        .\Q_reg_reg[3]_0 (p_8_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized34 \gsync_stage[3].rd_stg_inst 
       (.D(p_5_out),
        .\Q_reg_reg[3]_0 (p_7_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized35 \gsync_stage[3].wr_stg_inst 
       (.D(p_4_out),
        .\Q_reg_reg[3]_0 (p_6_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized36 \gsync_stage[4].rd_stg_inst 
       (.D(p_3_out),
        .\Q_reg_reg[3]_0 (p_5_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized37 \gsync_stage[4].wr_stg_inst 
       (.D(p_2_out),
        .\Q_reg_reg[3]_0 (p_4_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized38 \gsync_stage[5].rd_stg_inst 
       (.D(p_3_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(p_1_out),
        .\wr_pntr_bin_reg[2] ({\gsync_stage[5].rd_stg_inst_n_1 ,\gsync_stage[5].rd_stg_inst_n_2 ,\gsync_stage[5].rd_stg_inst_n_3 }));
  v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized39 \gsync_stage[5].wr_stg_inst 
       (.D(p_2_out),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .out(p_0_out),
        .\rd_pntr_bin_reg[2] ({\gsync_stage[5].wr_stg_inst_n_1 ,\gsync_stage[5].wr_stg_inst_n_2 ,\gsync_stage[5].wr_stg_inst_n_3 }));
  LUT6 #(
    .INIT(64'hFFFFFFFF41000041)) 
    ram_empty_fb_i_i_1__5
       (.I0(ram_empty_fb_i_i_2__3_n_0),
        .I1(p_21_out[2]),
        .I2(\gc0.count_d1_reg[3] [2]),
        .I3(p_21_out[3]),
        .I4(\gc0.count_d1_reg[3] [3]),
        .I5(ram_empty_fb_i_i_3__3_n_0),
        .O(ram_empty_fb_i_reg));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_2__3
       (.I0(p_21_out[1]),
        .I1(\gc0.count_d1_reg[3] [1]),
        .I2(p_21_out[0]),
        .I3(\gc0.count_d1_reg[3] [0]),
        .O(ram_empty_fb_i_i_2__3_n_0));
  LUT6 #(
    .INIT(64'h4100004100000000)) 
    ram_empty_fb_i_i_3__3
       (.I0(ram_empty_fb_i_i_4__3_n_0),
        .I1(p_21_out[2]),
        .I2(\gc0.count_reg[3] [2]),
        .I3(p_21_out[3]),
        .I4(\gc0.count_reg[3] [3]),
        .I5(E),
        .O(ram_empty_fb_i_i_3__3_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_empty_fb_i_i_4__3
       (.I0(p_21_out[1]),
        .I1(\gc0.count_reg[3] [1]),
        .I2(p_21_out[0]),
        .I3(\gc0.count_reg[3] [0]),
        .O(ram_empty_fb_i_i_4__3_n_0));
  LUT5 #(
    .INIT(32'h82000082)) 
    ram_full_fb_i_i_3
       (.I0(ram_full_fb_i_i_5_n_0),
        .I1(Q[2]),
        .I2(ram_full_i_reg_0[2]),
        .I3(ram_full_i_reg_0[3]),
        .I4(Q[3]),
        .O(ram_full_i_reg));
  LUT5 #(
    .INIT(32'h00009009)) 
    ram_full_fb_i_i_5
       (.I0(ram_full_i_reg_0[0]),
        .I1(Q[0]),
        .I2(ram_full_i_reg_0[1]),
        .I3(Q[1]),
        .I4(rst_full_gen_i),
        .O(ram_full_fb_i_i_5_n_0));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_3 ),
        .Q(ram_full_i_reg_0[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_2 ),
        .Q(ram_full_i_reg_0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gsync_stage[5].wr_stg_inst_n_1 ),
        .Q(ram_full_i_reg_0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_bin_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_out),
        .Q(ram_full_i_reg_0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[0]),
        .Q(\rd_pntr_gc_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[1]),
        .Q(\rd_pntr_gc_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[2]),
        .Q(\rd_pntr_gc_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \rd_pntr_gc_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc0.count_d1_reg[3] [3]),
        .Q(\rd_pntr_gc_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gsync_stage[5].rd_stg_inst_n_3 ),
        .Q(p_21_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gsync_stage[5].rd_stg_inst_n_2 ),
        .Q(p_21_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gsync_stage[5].rd_stg_inst_n_1 ),
        .Q(p_21_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_bin_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_1_out),
        .Q(p_21_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[0]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[3] [0]),
        .I1(\gic0.gc0.count_d2_reg[3] [1]),
        .O(p_0_in2_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[1]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[3] [1]),
        .I1(\gic0.gc0.count_d2_reg[3] [2]),
        .O(p_0_in2_out[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[2]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[3] [2]),
        .I1(\gic0.gc0.count_d2_reg[3] [3]),
        .O(p_0_in2_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in2_out[0]),
        .Q(\wr_pntr_gc_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in2_out[1]),
        .Q(\wr_pntr_gc_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(p_0_in2_out[2]),
        .Q(\wr_pntr_gc_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \wr_pntr_gc_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\gic0.gc0.count_d2_reg[3] [3]),
        .Q(\wr_pntr_gc_reg_n_0_[3] ));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module v7_bd_axi_chip2chip_0_0_compare__parameterized0
   (ram_empty_fb_i_reg,
    v1_reg,
    \gc0.count_d1_reg[8] ,
    E,
    comp1);
  output ram_empty_fb_i_reg;
  input [3:0]v1_reg;
  input \gc0.count_d1_reg[8] ;
  input [0:0]E;
  input comp1;

  wire [0:0]E;
  wire comp0;
  wire comp1;
  wire \gc0.count_d1_reg[8] ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire ram_empty_fb_i_reg;
  wire [3:0]v1_reg;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp0}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],\gc0.count_d1_reg[8] }));
  LUT3 #(
    .INIT(8'hEA)) 
    ram_empty_fb_i_i_1__4
       (.I0(comp0),
        .I1(E),
        .I2(comp1),
        .O(ram_empty_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module v7_bd_axi_chip2chip_0_0_compare__parameterized1
   (comp1,
    v1_reg_0,
    \gc0.count_reg[8] );
  output comp1;
  input [3:0]v1_reg_0;
  input \gc0.count_reg[8] ;

  wire comp1;
  wire \gc0.count_reg[8] ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire [3:0]v1_reg_0;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],\gc0.count_reg[8] }));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module v7_bd_axi_chip2chip_0_0_compare__parameterized2
   (comp1,
    v1_reg);
  output comp1;
  input [4:0]v1_reg;

  wire comp1;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire [4:0]v1_reg;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module v7_bd_axi_chip2chip_0_0_compare__parameterized3
   (ram_full_i,
    v1_reg_0,
    E,
    rst_full_gen_i,
    comp1);
  output ram_full_i;
  input [4:0]v1_reg_0;
  input [0:0]E;
  input rst_full_gen_i;
  input comp1;

  wire [0:0]E;
  wire comp1;
  wire comp2;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire ram_full_i;
  wire rst_full_gen_i;
  wire [4:0]v1_reg_0;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp2}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg_0[4]}));
  LUT4 #(
    .INIT(16'h0F08)) 
    ram_full_i_i_1__1
       (.I0(E),
        .I1(comp2),
        .I2(rst_full_gen_i),
        .I3(comp1),
        .O(ram_full_i));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module v7_bd_axi_chip2chip_0_0_compare__parameterized4
   (comp0,
    v1_reg);
  output comp0;
  input [4:0]v1_reg;

  wire comp0;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire [4:0]v1_reg;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp0}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module v7_bd_axi_chip2chip_0_0_compare__parameterized5
   (ram_empty_fb_i_reg,
    v1_reg_0,
    E,
    comp0);
  output ram_empty_fb_i_reg;
  input [4:0]v1_reg_0;
  input [0:0]E;
  input comp0;

  wire [0:0]E;
  wire comp0;
  wire comp1;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire ram_empty_fb_i_reg;
  wire [4:0]v1_reg_0;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg_0[4]}));
  LUT3 #(
    .INIT(8'hF8)) 
    ram_empty_fb_i_i_1
       (.I0(E),
        .I1(comp1),
        .I2(comp0),
        .O(ram_empty_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module v7_bd_axi_chip2chip_0_0_compare__parameterized6
   (comp1,
    v1_reg,
    \rd_pntr_bin_reg[8] );
  output comp1;
  input [3:0]v1_reg;
  input \rd_pntr_bin_reg[8] ;

  wire comp1;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire \rd_pntr_bin_reg[8] ;
  wire [3:0]v1_reg;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],\rd_pntr_bin_reg[8] }));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module v7_bd_axi_chip2chip_0_0_compare__parameterized7
   (ram_full_i,
    v1_reg_0,
    \rd_pntr_bin_reg[8] ,
    rst_full_gen_i,
    p_1_out,
    m_axi_rvalid,
    ram_full_i_reg,
    comp1);
  output ram_full_i;
  input [3:0]v1_reg_0;
  input \rd_pntr_bin_reg[8] ;
  input rst_full_gen_i;
  input p_1_out;
  input m_axi_rvalid;
  input ram_full_i_reg;
  input comp1;

  wire comp1;
  wire comp2;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire m_axi_rvalid;
  wire p_1_out;
  wire ram_full_i;
  wire ram_full_i_reg;
  wire \rd_pntr_bin_reg[8] ;
  wire rst_full_gen_i;
  wire [3:0]v1_reg_0;
  wire [2:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\NLW_gmux.gm[0].gm1.m1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp2}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],\rd_pntr_bin_reg[8] }));
  LUT6 #(
    .INIT(64'h5555555500000400)) 
    ram_full_i_i_1__2
       (.I0(rst_full_gen_i),
        .I1(comp2),
        .I2(p_1_out),
        .I3(m_axi_rvalid),
        .I4(ram_full_i_reg),
        .I5(comp1),
        .O(ram_full_i));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module v7_bd_axi_chip2chip_0_0_dmem
   (\gpr1.dout_i_reg[0]_0 ,
    \gpr1.dout_i_reg[1]_0 ,
    \gpr1.dout_i_reg[2]_0 ,
    m_aclk,
    bfifo_data,
    ram_full_fb_i_reg,
    \gc0.count_d1_reg[7] ,
    Q,
    \gic0.gc0.count_d2_reg[7] ,
    \gic0.gc0.count_d2_reg[6] ,
    ram_full_fb_i_reg_0,
    p_6_out,
    p_2_out,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] );
  output \gpr1.dout_i_reg[0]_0 ;
  output \gpr1.dout_i_reg[1]_0 ;
  output \gpr1.dout_i_reg[2]_0 ;
  input m_aclk;
  input [2:0]bfifo_data;
  input ram_full_fb_i_reg;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [5:0]Q;
  input \gic0.gc0.count_d2_reg[7] ;
  input \gic0.gc0.count_d2_reg[6] ;
  input ram_full_fb_i_reg_0;
  input p_6_out;
  input p_2_out;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;

  wire [5:0]Q;
  wire RAM_reg_0_63_0_2_n_0;
  wire RAM_reg_0_63_0_2_n_1;
  wire RAM_reg_0_63_0_2_n_2;
  wire RAM_reg_128_191_0_2_n_0;
  wire RAM_reg_128_191_0_2_n_1;
  wire RAM_reg_128_191_0_2_n_2;
  wire RAM_reg_192_255_0_2_n_0;
  wire RAM_reg_192_255_0_2_n_1;
  wire RAM_reg_192_255_0_2_n_2;
  wire RAM_reg_64_127_0_2_n_0;
  wire RAM_reg_64_127_0_2_n_1;
  wire RAM_reg_64_127_0_2_n_2;
  wire [2:0]bfifo_data;
  wire clk_ph_out;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire \gic0.gc0.count_d2_reg[6] ;
  wire \gic0.gc0.count_d2_reg[7] ;
  wire \gpr1.dout_i[0]_i_1_n_0 ;
  wire \gpr1.dout_i[0]_i_2_n_0 ;
  wire \gpr1.dout_i[1]_i_1_n_0 ;
  wire \gpr1.dout_i[1]_i_2_n_0 ;
  wire \gpr1.dout_i[2]_i_1_n_0 ;
  wire \gpr1.dout_i[2]_i_2_n_0 ;
  wire \gpr1.dout_i_reg[0]_0 ;
  wire \gpr1.dout_i_reg[1]_0 ;
  wire \gpr1.dout_i_reg[2]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;
  wire p_2_out;
  wire p_6_out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire NLW_RAM_reg_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_RAM_reg_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_RAM_reg_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_RAM_reg_64_127_0_2_DOD_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M RAM_reg_0_63_0_2
       (.ADDRA(\gc0.count_d1_reg[7] [5:0]),
        .ADDRB(\gc0.count_d1_reg[7] [5:0]),
        .ADDRC(\gc0.count_d1_reg[7] [5:0]),
        .ADDRD(Q),
        .DIA(bfifo_data[0]),
        .DIB(bfifo_data[1]),
        .DIC(bfifo_data[2]),
        .DID(1'b0),
        .DOA(RAM_reg_0_63_0_2_n_0),
        .DOB(RAM_reg_0_63_0_2_n_1),
        .DOC(RAM_reg_0_63_0_2_n_2),
        .DOD(NLW_RAM_reg_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(m_aclk),
        .WE(ram_full_fb_i_reg));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M RAM_reg_128_191_0_2
       (.ADDRA(\gc0.count_d1_reg[7] [5:0]),
        .ADDRB(\gc0.count_d1_reg[7] [5:0]),
        .ADDRC(\gc0.count_d1_reg[7] [5:0]),
        .ADDRD(Q),
        .DIA(bfifo_data[0]),
        .DIB(bfifo_data[1]),
        .DIC(bfifo_data[2]),
        .DID(1'b0),
        .DOA(RAM_reg_128_191_0_2_n_0),
        .DOB(RAM_reg_128_191_0_2_n_1),
        .DOC(RAM_reg_128_191_0_2_n_2),
        .DOD(NLW_RAM_reg_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(m_aclk),
        .WE(\gic0.gc0.count_d2_reg[6] ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M RAM_reg_192_255_0_2
       (.ADDRA(\gc0.count_d1_reg[7] [5:0]),
        .ADDRB(\gc0.count_d1_reg[7] [5:0]),
        .ADDRC(\gc0.count_d1_reg[7] [5:0]),
        .ADDRD(Q),
        .DIA(bfifo_data[0]),
        .DIB(bfifo_data[1]),
        .DIC(bfifo_data[2]),
        .DID(1'b0),
        .DOA(RAM_reg_192_255_0_2_n_0),
        .DOB(RAM_reg_192_255_0_2_n_1),
        .DOC(RAM_reg_192_255_0_2_n_2),
        .DOD(NLW_RAM_reg_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(m_aclk),
        .WE(ram_full_fb_i_reg_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M RAM_reg_64_127_0_2
       (.ADDRA(\gc0.count_d1_reg[7] [5:0]),
        .ADDRB(\gc0.count_d1_reg[7] [5:0]),
        .ADDRC(\gc0.count_d1_reg[7] [5:0]),
        .ADDRD(Q),
        .DIA(bfifo_data[0]),
        .DIB(bfifo_data[1]),
        .DIC(bfifo_data[2]),
        .DID(1'b0),
        .DOA(RAM_reg_64_127_0_2_n_0),
        .DOB(RAM_reg_64_127_0_2_n_1),
        .DOC(RAM_reg_64_127_0_2_n_2),
        .DOD(NLW_RAM_reg_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(m_aclk),
        .WE(\gic0.gc0.count_d2_reg[7] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \gpr1.dout_i[0]_i_1 
       (.I0(\gpr1.dout_i[0]_i_2_n_0 ),
        .I1(p_6_out),
        .I2(p_2_out),
        .I3(\gpr1.dout_i_reg[0]_0 ),
        .O(\gpr1.dout_i[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gpr1.dout_i[0]_i_2 
       (.I0(RAM_reg_192_255_0_2_n_0),
        .I1(RAM_reg_128_191_0_2_n_0),
        .I2(\gc0.count_d1_reg[7] [7]),
        .I3(RAM_reg_64_127_0_2_n_0),
        .I4(\gc0.count_d1_reg[7] [6]),
        .I5(RAM_reg_0_63_0_2_n_0),
        .O(\gpr1.dout_i[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \gpr1.dout_i[1]_i_1 
       (.I0(\gpr1.dout_i[1]_i_2_n_0 ),
        .I1(p_6_out),
        .I2(p_2_out),
        .I3(\gpr1.dout_i_reg[1]_0 ),
        .O(\gpr1.dout_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gpr1.dout_i[1]_i_2 
       (.I0(RAM_reg_192_255_0_2_n_1),
        .I1(RAM_reg_128_191_0_2_n_1),
        .I2(\gc0.count_d1_reg[7] [7]),
        .I3(RAM_reg_64_127_0_2_n_1),
        .I4(\gc0.count_d1_reg[7] [6]),
        .I5(RAM_reg_0_63_0_2_n_1),
        .O(\gpr1.dout_i[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \gpr1.dout_i[2]_i_1 
       (.I0(\gpr1.dout_i[2]_i_2_n_0 ),
        .I1(p_6_out),
        .I2(p_2_out),
        .I3(\gpr1.dout_i_reg[2]_0 ),
        .O(\gpr1.dout_i[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gpr1.dout_i[2]_i_2 
       (.I0(RAM_reg_192_255_0_2_n_2),
        .I1(RAM_reg_128_191_0_2_n_2),
        .I2(\gc0.count_d1_reg[7] [7]),
        .I3(RAM_reg_64_127_0_2_n_2),
        .I4(\gc0.count_d1_reg[7] [6]),
        .I5(RAM_reg_0_63_0_2_n_2),
        .O(\gpr1.dout_i[2]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gpr1.dout_i[0]_i_1_n_0 ),
        .Q(\gpr1.dout_i_reg[0]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gpr1.dout_i[1]_i_1_n_0 ),
        .Q(\gpr1.dout_i_reg[1]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gpr1.dout_i[2]_i_1_n_0 ),
        .Q(\gpr1.dout_i_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module v7_bd_axi_chip2chip_0_0_dmem__parameterized0
   (\goreg_dm.dout_i_reg[19] ,
    m_axi_lite_aclk,
    wr_pntr_plus1_pad,
    Q,
    \gc0.count_d1_reg[3] ,
    \gic0.gc0.count_d2_reg[3] ,
    E,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] );
  output [19:0]\goreg_dm.dout_i_reg[19] ;
  input m_axi_lite_aclk;
  input [0:0]wr_pntr_plus1_pad;
  input [18:0]Q;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]\gic0.gc0.count_d2_reg[3] ;
  input [0:0]E;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;

  wire [0:0]E;
  wire [18:0]Q;
  wire RAM_reg_0_15_0_5_n_0;
  wire RAM_reg_0_15_0_5_n_1;
  wire RAM_reg_0_15_0_5_n_2;
  wire RAM_reg_0_15_0_5_n_3;
  wire RAM_reg_0_15_0_5_n_4;
  wire RAM_reg_0_15_0_5_n_5;
  wire RAM_reg_0_15_12_17_n_0;
  wire RAM_reg_0_15_12_17_n_1;
  wire RAM_reg_0_15_12_17_n_2;
  wire RAM_reg_0_15_12_17_n_3;
  wire RAM_reg_0_15_12_17_n_4;
  wire RAM_reg_0_15_12_17_n_5;
  wire RAM_reg_0_15_18_19_n_0;
  wire RAM_reg_0_15_18_19_n_1;
  wire RAM_reg_0_15_6_11_n_0;
  wire RAM_reg_0_15_6_11_n_1;
  wire RAM_reg_0_15_6_11_n_2;
  wire RAM_reg_0_15_6_11_n_3;
  wire RAM_reg_0_15_6_11_n_4;
  wire RAM_reg_0_15_6_11_n_5;
  wire clk_ph_out;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [3:0]\gic0.gc0.count_d2_reg[3] ;
  wire [19:0]\goreg_dm.dout_i_reg[19] ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;
  wire [0:0]wr_pntr_plus1_pad;
  wire [1:0]NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_18_19_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_18_19_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_18_19_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_11_DOD_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_15_0_5
       (.ADDRA({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRB({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRC({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRD({1'b0,\gic0.gc0.count_d2_reg[3] }),
        .DIA(Q[1:0]),
        .DIB(Q[3:2]),
        .DIC(Q[5:4]),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_15_0_5_n_0,RAM_reg_0_15_0_5_n_1}),
        .DOB({RAM_reg_0_15_0_5_n_2,RAM_reg_0_15_0_5_n_3}),
        .DOC({RAM_reg_0_15_0_5_n_4,RAM_reg_0_15_0_5_n_5}),
        .DOD(NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(m_axi_lite_aclk),
        .WE(wr_pntr_plus1_pad));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_15_12_17
       (.ADDRA({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRB({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRC({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRD({1'b0,\gic0.gc0.count_d2_reg[3] }),
        .DIA(Q[13:12]),
        .DIB(Q[15:14]),
        .DIC(Q[17:16]),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_15_12_17_n_0,RAM_reg_0_15_12_17_n_1}),
        .DOB({RAM_reg_0_15_12_17_n_2,RAM_reg_0_15_12_17_n_3}),
        .DOC({RAM_reg_0_15_12_17_n_4,RAM_reg_0_15_12_17_n_5}),
        .DOD(NLW_RAM_reg_0_15_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(m_axi_lite_aclk),
        .WE(wr_pntr_plus1_pad));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_15_18_19
       (.ADDRA({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRB({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRC({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRD({1'b0,\gic0.gc0.count_d2_reg[3] }),
        .DIA({1'b0,Q[18]}),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_15_18_19_n_0,RAM_reg_0_15_18_19_n_1}),
        .DOB(NLW_RAM_reg_0_15_18_19_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_RAM_reg_0_15_18_19_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_15_18_19_DOD_UNCONNECTED[1:0]),
        .WCLK(m_axi_lite_aclk),
        .WE(wr_pntr_plus1_pad));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_15_6_11
       (.ADDRA({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRB({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRC({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRD({1'b0,\gic0.gc0.count_d2_reg[3] }),
        .DIA(Q[7:6]),
        .DIB(Q[9:8]),
        .DIC(Q[11:10]),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_15_6_11_n_0,RAM_reg_0_15_6_11_n_1}),
        .DOB({RAM_reg_0_15_6_11_n_2,RAM_reg_0_15_6_11_n_3}),
        .DOC({RAM_reg_0_15_6_11_n_4,RAM_reg_0_15_6_11_n_5}),
        .DOD(NLW_RAM_reg_0_15_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(m_axi_lite_aclk),
        .WE(wr_pntr_plus1_pad));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_1),
        .Q(\goreg_dm.dout_i_reg[19] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[10] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_5),
        .Q(\goreg_dm.dout_i_reg[19] [10]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[11] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_4),
        .Q(\goreg_dm.dout_i_reg[19] [11]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[12] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_1),
        .Q(\goreg_dm.dout_i_reg[19] [12]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[13] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_0),
        .Q(\goreg_dm.dout_i_reg[19] [13]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[14] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_3),
        .Q(\goreg_dm.dout_i_reg[19] [14]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[15] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_2),
        .Q(\goreg_dm.dout_i_reg[19] [15]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[16] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_5),
        .Q(\goreg_dm.dout_i_reg[19] [16]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[17] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_4),
        .Q(\goreg_dm.dout_i_reg[19] [17]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[18] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_18_19_n_1),
        .Q(\goreg_dm.dout_i_reg[19] [18]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[19] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_18_19_n_0),
        .Q(\goreg_dm.dout_i_reg[19] [19]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_0),
        .Q(\goreg_dm.dout_i_reg[19] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_3),
        .Q(\goreg_dm.dout_i_reg[19] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_2),
        .Q(\goreg_dm.dout_i_reg[19] [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_5),
        .Q(\goreg_dm.dout_i_reg[19] [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_4),
        .Q(\goreg_dm.dout_i_reg[19] [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_1),
        .Q(\goreg_dm.dout_i_reg[19] [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_0),
        .Q(\goreg_dm.dout_i_reg[19] [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_3),
        .Q(\goreg_dm.dout_i_reg[19] [8]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[9] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_2),
        .Q(\goreg_dm.dout_i_reg[19] [9]));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module v7_bd_axi_chip2chip_0_0_dmem__parameterized1
   (Q,
    clk_ph_out,
    E,
    \axi_lite_rx_gen.axi_lite_rx_data_reg[19] ,
    \gc0.count_d1_reg[3] ,
    \gic0.gc0.count_d2_reg[3] ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] );
  output [19:0]Q;
  input clk_ph_out;
  input [0:0]E;
  input [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]\gic0.gc0.count_d2_reg[3] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;

  wire [0:0]E;
  wire [19:0]Q;
  wire RAM_reg_0_15_0_5_n_0;
  wire RAM_reg_0_15_0_5_n_1;
  wire RAM_reg_0_15_0_5_n_2;
  wire RAM_reg_0_15_0_5_n_3;
  wire RAM_reg_0_15_0_5_n_4;
  wire RAM_reg_0_15_0_5_n_5;
  wire RAM_reg_0_15_12_17_n_0;
  wire RAM_reg_0_15_12_17_n_1;
  wire RAM_reg_0_15_12_17_n_2;
  wire RAM_reg_0_15_12_17_n_3;
  wire RAM_reg_0_15_12_17_n_4;
  wire RAM_reg_0_15_12_17_n_5;
  wire RAM_reg_0_15_18_19_n_0;
  wire RAM_reg_0_15_18_19_n_1;
  wire RAM_reg_0_15_6_11_n_0;
  wire RAM_reg_0_15_6_11_n_1;
  wire RAM_reg_0_15_6_11_n_2;
  wire RAM_reg_0_15_6_11_n_3;
  wire RAM_reg_0_15_6_11_n_4;
  wire RAM_reg_0_15_6_11_n_5;
  wire [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  wire clk_ph_out;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [3:0]\gic0.gc0.count_d2_reg[3] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;
  wire [1:0]NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_18_19_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_18_19_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_18_19_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_15_6_11_DOD_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_15_0_5
       (.ADDRA({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRB({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRC({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRD({1'b0,\gic0.gc0.count_d2_reg[3] }),
        .DIA(\axi_lite_rx_gen.axi_lite_rx_data_reg[19] [1:0]),
        .DIB(\axi_lite_rx_gen.axi_lite_rx_data_reg[19] [3:2]),
        .DIC(\axi_lite_rx_gen.axi_lite_rx_data_reg[19] [5:4]),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_15_0_5_n_0,RAM_reg_0_15_0_5_n_1}),
        .DOB({RAM_reg_0_15_0_5_n_2,RAM_reg_0_15_0_5_n_3}),
        .DOC({RAM_reg_0_15_0_5_n_4,RAM_reg_0_15_0_5_n_5}),
        .DOD(NLW_RAM_reg_0_15_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(clk_ph_out),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_15_12_17
       (.ADDRA({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRB({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRC({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRD({1'b0,\gic0.gc0.count_d2_reg[3] }),
        .DIA(\axi_lite_rx_gen.axi_lite_rx_data_reg[19] [13:12]),
        .DIB(\axi_lite_rx_gen.axi_lite_rx_data_reg[19] [15:14]),
        .DIC(\axi_lite_rx_gen.axi_lite_rx_data_reg[19] [17:16]),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_15_12_17_n_0,RAM_reg_0_15_12_17_n_1}),
        .DOB({RAM_reg_0_15_12_17_n_2,RAM_reg_0_15_12_17_n_3}),
        .DOC({RAM_reg_0_15_12_17_n_4,RAM_reg_0_15_12_17_n_5}),
        .DOD(NLW_RAM_reg_0_15_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(clk_ph_out),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_15_18_19
       (.ADDRA({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRB({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRC({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRD({1'b0,\gic0.gc0.count_d2_reg[3] }),
        .DIA(\axi_lite_rx_gen.axi_lite_rx_data_reg[19] [19:18]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_15_18_19_n_0,RAM_reg_0_15_18_19_n_1}),
        .DOB(NLW_RAM_reg_0_15_18_19_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_RAM_reg_0_15_18_19_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_15_18_19_DOD_UNCONNECTED[1:0]),
        .WCLK(clk_ph_out),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_15_6_11
       (.ADDRA({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRB({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRC({1'b0,\gc0.count_d1_reg[3] }),
        .ADDRD({1'b0,\gic0.gc0.count_d2_reg[3] }),
        .DIA(\axi_lite_rx_gen.axi_lite_rx_data_reg[19] [7:6]),
        .DIB(\axi_lite_rx_gen.axi_lite_rx_data_reg[19] [9:8]),
        .DIC(\axi_lite_rx_gen.axi_lite_rx_data_reg[19] [11:10]),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_15_6_11_n_0,RAM_reg_0_15_6_11_n_1}),
        .DOB({RAM_reg_0_15_6_11_n_2,RAM_reg_0_15_6_11_n_3}),
        .DOC({RAM_reg_0_15_6_11_n_4,RAM_reg_0_15_6_11_n_5}),
        .DOD(NLW_RAM_reg_0_15_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(clk_ph_out),
        .WE(E));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_1),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[10] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_5),
        .Q(Q[10]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[11] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_4),
        .Q(Q[11]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[12] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_1),
        .Q(Q[12]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[13] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_0),
        .Q(Q[13]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[14] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_3),
        .Q(Q[14]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[15] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_2),
        .Q(Q[15]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[16] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_5),
        .Q(Q[16]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[17] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_12_17_n_4),
        .Q(Q[17]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[18] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_18_19_n_1),
        .Q(Q[18]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[19] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_18_19_n_0),
        .Q(Q[19]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_0),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_3),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_2),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_5),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_0_5_n_4),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[6] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_1),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[7] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_0),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[8] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_3),
        .Q(Q[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[9] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(RAM_reg_0_15_6_11_n_2),
        .Q(Q[9]));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo
   (\gic0.gc0.count_reg[0] ,
    aw_ch_fc,
    m_axi_awvalid,
    \m_axi_awaddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[22] ,
    br_fifo_reset,
    p_0_in,
    aw_ch_data_valid,
    m_axi_awready);
  output \gic0.gc0.count_reg[0] ;
  output aw_ch_fc;
  output m_axi_awvalid;
  output [44:0]\m_axi_awaddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input [22:0]\data_out_reg[22] ;
  input br_fifo_reset;
  input p_0_in;
  input aw_ch_data_valid;
  input m_axi_awready;

  wire [22:0]Q;
  wire RD_RST;
  wire WR_RST;
  wire aw_ch_data_valid;
  wire aw_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \gic0.gc0.count_reg[0] ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_20 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_21 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_22 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_23 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_24 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_25 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_26 ;
  wire m_aclk;
  wire [44:0]\m_axi_awaddr[31] ;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire p_0_in;
  wire [6:0]p_0_in6_out;
  wire [7:0]p_0_out;
  wire [7:0]p_11_out;
  wire p_17_out;
  wire [7:0]p_22_out;
  wire p_5_out;
  wire p_6_out;
  wire [7:0]rd_pntr_plus1;
  wire [1:0]rd_rst_i;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire tmp_ram_rd_en;
  wire [0:0]wr_rst_i;

  v7_bd_axi_chip2chip_0_0_clk_x_pntrs_16 \gntv_or_sync_fifo.gcx.clkx 
       (.E(p_6_out),
        .I10({\gntv_or_sync_fifo.gl0.rd_n_20 ,\gntv_or_sync_fifo.gl0.rd_n_21 ,\gntv_or_sync_fifo.gl0.rd_n_22 ,\gntv_or_sync_fifo.gl0.rd_n_23 ,\gntv_or_sync_fifo.gl0.rd_n_24 ,\gntv_or_sync_fifo.gl0.rd_n_25 ,\gntv_or_sync_fifo.gl0.rd_n_26 }),
        .Q(rd_pntr_plus1),
        .RD_PNTR_WR(p_22_out),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[7] (p_0_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (rd_rst_i[1]),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (wr_rst_i),
        .p_0_in6_out({p_11_out[7],p_0_in6_out}),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ));
  v7_bd_axi_chip2chip_0_0_rd_logic_17 \gntv_or_sync_fifo.gl0.rd 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (p_0_out),
        .E(p_6_out),
        .I10({\gntv_or_sync_fifo.gl0.rd_n_20 ,\gntv_or_sync_fifo.gl0.rd_n_21 ,\gntv_or_sync_fifo.gl0.rd_n_22 ,\gntv_or_sync_fifo.gl0.rd_n_23 ,\gntv_or_sync_fifo.gl0.rd_n_24 ,\gntv_or_sync_fifo.gl0.rd_n_25 ,\gntv_or_sync_fifo.gl0.rd_n_26 }),
        .Q({RD_RST,rd_rst_i[0]}),
        .\gc0.count_d1_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .\gc0.count_d1_reg[7] (rd_pntr_plus1),
        .\goreg_bm.dout_i_reg[44] (p_5_out),
        .m_aclk(m_aclk),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  v7_bd_axi_chip2chip_0_0_wr_logic_18 \gntv_or_sync_fifo.gl0.wr 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (p_11_out),
        .E(p_17_out),
        .Q(WR_RST),
        .RD_PNTR_WR(p_22_out),
        .aw_ch_data_valid(aw_ch_data_valid),
        .aw_ch_fc(aw_ch_fc),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_reg[0] (\gic0.gc0.count_reg[0] ),
        .p_0_in(p_0_in),
        .p_0_in6_out(p_0_in6_out),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
  v7_bd_axi_chip2chip_0_0_memory \gntv_or_sync_fifo.mem 
       (.E(p_17_out),
        .Q(rd_rst_i[0]),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (p_0_out),
        .\gic0.gc0.count_d2_reg[7] (p_11_out),
        .\gpregsm1.curr_fwft_state_reg[1] (p_5_out),
        .m_aclk(m_aclk),
        .\m_axi_awaddr[31] (\m_axi_awaddr[31] ),
        .\mux_by_2.pack_reg0_reg[22] (Q),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized0 rstblk
       (.Q({RD_RST,rd_rst_i}),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_reg[0] ({WR_RST,wr_rst_i}),
        .m_aclk(m_aclk),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo_40
   (\gic0.gc0.count_reg[7] ,
    ar_ch_fc,
    m_axi_arvalid,
    \m_axi_araddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[22] ,
    br_fifo_reset,
    p_0_in,
    ar_ch_data_valid,
    m_axi_arready);
  output \gic0.gc0.count_reg[7] ;
  output ar_ch_fc;
  output m_axi_arvalid;
  output [44:0]\m_axi_araddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input [22:0]\data_out_reg[22] ;
  input br_fifo_reset;
  input p_0_in;
  input ar_ch_data_valid;
  input m_axi_arready;

  wire [22:0]Q;
  wire ar_ch_data_valid;
  wire ar_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \gic0.gc0.count_reg[7] ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_20 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_21 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_22 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_23 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_24 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_25 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_26 ;
  wire m_aclk;
  wire [44:0]\m_axi_araddr[31] ;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire p_0_in;
  wire [6:0]p_0_in6_out;
  wire [7:0]p_0_out;
  wire [7:0]p_11_out;
  wire p_17_out;
  wire [7:0]p_22_out;
  wire p_5_out;
  wire p_6_out;
  wire [7:0]rd_pntr_plus1;
  wire [1:0]rd_rst_i;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_2;
  wire rstblk_n_5;
  wire tmp_ram_rd_en;
  wire [0:0]wr_rst_i;

  v7_bd_axi_chip2chip_0_0_clk_x_pntrs_41 \gntv_or_sync_fifo.gcx.clkx 
       (.D({p_11_out[7],p_0_in6_out}),
        .E(p_6_out),
        .Q(rd_pntr_plus1),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[6] ({\gntv_or_sync_fifo.gl0.rd_n_20 ,\gntv_or_sync_fifo.gl0.rd_n_21 ,\gntv_or_sync_fifo.gl0.rd_n_22 ,\gntv_or_sync_fifo.gl0.rd_n_23 ,\gntv_or_sync_fifo.gl0.rd_n_24 ,\gntv_or_sync_fifo.gl0.rd_n_25 ,\gntv_or_sync_fifo.gl0.rd_n_26 }),
        .\gc0.count_d1_reg[7] (p_0_out),
        .\gdiff.diff_pntr_pad_reg[8] (p_22_out),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (rd_rst_i[1]),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (wr_rst_i),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ));
  v7_bd_axi_chip2chip_0_0_rd_logic_42 \gntv_or_sync_fifo.gl0.rd 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (p_0_out),
        .E(p_6_out),
        .Q({rstblk_n_2,rd_rst_i[0]}),
        .\gc0.count_d1_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .\gc0.count_d1_reg[7] (rd_pntr_plus1),
        .\goreg_bm.dout_i_reg[44] (p_5_out),
        .m_aclk(m_aclk),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .\rd_pntr_gc_reg[6] ({\gntv_or_sync_fifo.gl0.rd_n_20 ,\gntv_or_sync_fifo.gl0.rd_n_21 ,\gntv_or_sync_fifo.gl0.rd_n_22 ,\gntv_or_sync_fifo.gl0.rd_n_23 ,\gntv_or_sync_fifo.gl0.rd_n_24 ,\gntv_or_sync_fifo.gl0.rd_n_25 ,\gntv_or_sync_fifo.gl0.rd_n_26 }),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  v7_bd_axi_chip2chip_0_0_wr_logic_43 \gntv_or_sync_fifo.gl0.wr 
       (.D(p_0_in6_out),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (p_11_out),
        .E(p_17_out),
        .Q(rstblk_n_5),
        .ar_ch_data_valid(ar_ch_data_valid),
        .ar_ch_fc(ar_ch_fc),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_reg[7] (\gic0.gc0.count_reg[7] ),
        .p_0_in(p_0_in),
        .\rd_pntr_bin_reg[7] (p_22_out),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
  v7_bd_axi_chip2chip_0_0_memory_44 \gntv_or_sync_fifo.mem 
       (.E(p_17_out),
        .Q(rd_rst_i[0]),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (p_0_out),
        .\gic0.gc0.count_d2_reg[7] (p_11_out),
        .\gpregsm1.curr_fwft_state_reg[1] (p_5_out),
        .m_aclk(m_aclk),
        .\m_axi_araddr[31] (\m_axi_araddr[31] ),
        .\mux_by_2.pack_reg0_reg[22] (Q),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized0_45 rstblk
       (.Q({rstblk_n_2,rd_rst_i}),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_d2_reg[0] ({rstblk_n_5,wr_rst_i}),
        .m_aclk(m_aclk),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo__parameterized0
   (\gic0.gc0.count_reg[8] ,
    wd_ch_fc,
    m_axi_wvalid,
    \m_axi_wdata[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[18] ,
    br_fifo_reset,
    p_0_in,
    wd_ch_data_valid,
    m_axi_wready);
  output \gic0.gc0.count_reg[8] ;
  output wd_ch_fc;
  output m_axi_wvalid;
  output [37:0]\m_axi_wdata[31] ;
  input m_aclk;
  input clk_ph_out;
  input [18:0]Q;
  input [18:0]\data_out_reg[18] ;
  input br_fifo_reset;
  input p_0_in;
  input wd_ch_data_valid;
  input m_axi_wready;

  wire [18:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire \gic0.gc0.count_reg[8] ;
  wire [3:0]\gras.rsts/c0/v1_reg ;
  wire [3:0]\gras.rsts/c1/v1_reg ;
  wire [4:0]\gwas.wsts/c1/v1_reg ;
  wire [4:0]\gwas.wsts/c2/v1_reg ;
  wire m_aclk;
  wire [37:0]\m_axi_wdata[31] ;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire p_0_in;
  wire [8:0]p_0_out;
  wire [8:0]p_11_out;
  wire [8:0]p_12_out;
  wire p_17_out;
  wire [8:8]p_21_out;
  wire [8:0]p_22_out;
  wire p_5_out;
  wire [7:0]rd_pntr_plus1;
  wire [1:0]rd_rst_i;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_2;
  wire rstblk_n_5;
  wire tmp_ram_rd_en;
  wire wd_ch_data_valid;
  wire wd_ch_fc;
  wire [8:0]wr_pntr_plus2;
  wire [0:0]wr_rst_i;

  v7_bd_axi_chip2chip_0_0_clk_x_pntrs__parameterized0 \gntv_or_sync_fifo.gcx.clkx 
       (.Q(p_12_out),
        .RD_PNTR_WR(p_22_out),
        .WR_PNTR_RD(p_21_out),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[8] (p_0_out),
        .\gc0.count_reg[7] (rd_pntr_plus1),
        .\gic0.gc0.count_d2_reg[8] (p_11_out),
        .\gic0.gc0.count_reg[8] (wr_pntr_plus2),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (rd_rst_i[1]),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (wr_rst_i),
        .v1_reg(\gwas.wsts/c1/v1_reg ),
        .v1_reg_0(\gwas.wsts/c2/v1_reg ),
        .v1_reg_1(\gras.rsts/c0/v1_reg ),
        .v1_reg_2(\gras.rsts/c1/v1_reg ));
  v7_bd_axi_chip2chip_0_0_rd_logic__parameterized0 \gntv_or_sync_fifo.gl0.rd 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (p_0_out),
        .E(p_5_out),
        .Q({rstblk_n_2,rd_rst_i[0]}),
        .WR_PNTR_RD(p_21_out),
        .\gc0.count_d1_reg[7] (rd_pntr_plus1),
        .m_aclk(m_aclk),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .v1_reg(\gras.rsts/c0/v1_reg ),
        .v1_reg_0(\gras.rsts/c1/v1_reg ));
  v7_bd_axi_chip2chip_0_0_wr_logic__parameterized0 \gntv_or_sync_fifo.gl0.wr 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (p_11_out),
        .E(p_17_out),
        .Q(wr_pntr_plus2),
        .RD_PNTR_WR(p_22_out),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_d2_reg[8] (p_12_out),
        .\gic0.gc0.count_reg[8] (\gic0.gc0.count_reg[8] ),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] (rstblk_n_5),
        .p_0_in(p_0_in),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i),
        .v1_reg(\gwas.wsts/c1/v1_reg ),
        .v1_reg_0(\gwas.wsts/c2/v1_reg ),
        .wd_ch_data_valid(wd_ch_data_valid),
        .wd_ch_fc(wd_ch_fc));
  v7_bd_axi_chip2chip_0_0_memory__parameterized0 \gntv_or_sync_fifo.mem 
       (.E(p_17_out),
        .Q(rd_rst_i[0]),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gc0.count_d1_reg[8] (p_0_out),
        .\gic0.gc0.count_d2_reg[8] (p_11_out),
        .\gpregsm1.curr_fwft_state_reg[1] (p_5_out),
        .m_aclk(m_aclk),
        .\m_axi_wdata[31] (\m_axi_wdata[31] ),
        .\mux_by_2.pack_reg0_reg[18] (Q),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized1 rstblk
       (.Q({rstblk_n_2,rd_rst_i}),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_d2_reg[0] ({rstblk_n_5,wr_rst_i}),
        .m_aclk(m_aclk),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo__parameterized1
   (\gpregsm1.curr_fwft_state_reg[0] ,
    \tdm_data_out_reg[6] ,
    \tdm_data_out_reg[7] ,
    \tdm_data_out_reg[8] ,
    \tdm_data_out_reg[9] ,
    \tdm_data_out_reg[10] ,
    \tdm_data_out_reg[11] ,
    \tdm_data_out_reg[12] ,
    \tdm_data_out_reg[13] ,
    \tdm_data_out_reg[14] ,
    \tdm_data_out_reg[15] ,
    \tdm_data_out_reg[16] ,
    \tdm_data_out_reg[17] ,
    \tdm_data_out_reg[18] ,
    \tdm_data_out_reg[19] ,
    \tdm_data_out_reg[20] ,
    \tdm_data_out_reg[21] ,
    \tdm_data_out_reg[22] ,
    \tdm_data_out_reg[23] ,
    p_12_in,
    m_axi_rready,
    clk_ph_out,
    m_aclk,
    m_axi_rdata,
    DIADI,
    br_fifo_reset,
    p_0_in,
    Q,
    \mux_by_2.data_count_reg[0] ,
    rd_ch_data_ready,
    tx_phy_ready,
    \ctrl_info_reg[0] ,
    m_axi_rvalid);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output \tdm_data_out_reg[6] ;
  output \tdm_data_out_reg[7] ;
  output \tdm_data_out_reg[8] ;
  output \tdm_data_out_reg[9] ;
  output \tdm_data_out_reg[10] ;
  output \tdm_data_out_reg[11] ;
  output \tdm_data_out_reg[12] ;
  output \tdm_data_out_reg[13] ;
  output \tdm_data_out_reg[14] ;
  output \tdm_data_out_reg[15] ;
  output \tdm_data_out_reg[16] ;
  output \tdm_data_out_reg[17] ;
  output \tdm_data_out_reg[18] ;
  output \tdm_data_out_reg[19] ;
  output \tdm_data_out_reg[20] ;
  output \tdm_data_out_reg[21] ;
  output \tdm_data_out_reg[22] ;
  output \tdm_data_out_reg[23] ;
  output p_12_in;
  output m_axi_rready;
  input clk_ph_out;
  input m_aclk;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;
  input br_fifo_reset;
  input p_0_in;
  input [0:0]Q;
  input \mux_by_2.data_count_reg[0] ;
  input rd_ch_data_ready;
  input tx_phy_ready;
  input [0:0]\ctrl_info_reg[0] ;
  input m_axi_rvalid;

  wire [3:0]DIADI;
  wire [0:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [0:0]\ctrl_info_reg[0] ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_9 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_0 ;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire \mux_by_2.data_count_reg[0] ;
  wire p_0_in;
  wire [8:0]p_0_out;
  wire [8:0]p_11_out;
  wire p_12_in;
  wire [8:8]p_12_out;
  wire [8:0]p_21_out;
  wire [7:0]p_22_out;
  wire p_5_out;
  wire rd_ch_data_ready;
  wire [1:0]rd_rst_i;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_2;
  wire rstblk_n_5;
  wire \tdm_data_out_reg[10] ;
  wire \tdm_data_out_reg[11] ;
  wire \tdm_data_out_reg[12] ;
  wire \tdm_data_out_reg[13] ;
  wire \tdm_data_out_reg[14] ;
  wire \tdm_data_out_reg[15] ;
  wire \tdm_data_out_reg[16] ;
  wire \tdm_data_out_reg[17] ;
  wire \tdm_data_out_reg[18] ;
  wire \tdm_data_out_reg[19] ;
  wire \tdm_data_out_reg[20] ;
  wire \tdm_data_out_reg[21] ;
  wire \tdm_data_out_reg[22] ;
  wire \tdm_data_out_reg[23] ;
  wire \tdm_data_out_reg[6] ;
  wire \tdm_data_out_reg[7] ;
  wire \tdm_data_out_reg[8] ;
  wire \tdm_data_out_reg[9] ;
  wire tmp_ram_rd_en;
  wire tx_phy_ready;
  wire [8:8]wr_pntr_plus2;
  wire [0:0]wr_rst_i;

  v7_bd_axi_chip2chip_0_0_clk_x_pntrs__parameterized1 \gntv_or_sync_fifo.gcx.clkx 
       (.Q(p_12_out),
        .RD_PNTR_WR(p_22_out),
        .WR_PNTR_RD(p_21_out),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[8] (p_0_out),
        .\gic0.gc0.count_d2_reg[8] (p_11_out),
        .\gic0.gc0.count_reg[8] (wr_pntr_plus2),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (rd_rst_i[1]),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (wr_rst_i),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .ram_full_fb_i_reg_0(\gntv_or_sync_fifo.gcx.clkx_n_9 ));
  v7_bd_axi_chip2chip_0_0_rd_logic__parameterized1 \gntv_or_sync_fifo.gl0.rd 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_0_out),
        .E(p_5_out),
        .Q({rstblk_n_2,rd_rst_i[0]}),
        .WR_PNTR_RD(p_21_out),
        .clk_ph_out(clk_ph_out),
        .\ctrl_info_reg[0] (\ctrl_info_reg[0] ),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .p_0_in(p_0_in),
        .p_12_in(p_12_in),
        .rd_ch_data_ready(rd_ch_data_ready),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .tx_phy_ready(tx_phy_ready));
  v7_bd_axi_chip2chip_0_0_wr_logic__parameterized1 \gntv_or_sync_fifo.gl0.wr 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_11_out),
        .Q(wr_pntr_plus2),
        .RD_PNTR_WR(p_22_out),
        .WEBWE(\gntv_or_sync_fifo.gl0.wr_n_0 ),
        .\gic0.gc0.count_d2_reg[8] (p_12_out),
        .m_aclk(m_aclk),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] (rstblk_n_5),
        .\rd_pntr_bin_reg[8] (\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .\rd_pntr_bin_reg[8]_0 (\gntv_or_sync_fifo.gcx.clkx_n_9 ),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
  v7_bd_axi_chip2chip_0_0_memory__parameterized1 \gntv_or_sync_fifo.mem 
       (.DIADI(DIADI),
        .E(p_5_out),
        .Q(rd_rst_i[0]),
        .WEBWE(\gntv_or_sync_fifo.gl0.wr_n_0 ),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[8] (p_0_out),
        .\gic0.gc0.count_d2_reg[8] (p_11_out),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .\mux_by_2.data_count_reg[0] (\mux_by_2.data_count_reg[0] ),
        .p_0_in(p_0_in),
        .\slot_select_reg[1] (Q),
        .\tdm_data_out_reg[10] (\tdm_data_out_reg[10] ),
        .\tdm_data_out_reg[11] (\tdm_data_out_reg[11] ),
        .\tdm_data_out_reg[12] (\tdm_data_out_reg[12] ),
        .\tdm_data_out_reg[13] (\tdm_data_out_reg[13] ),
        .\tdm_data_out_reg[14] (\tdm_data_out_reg[14] ),
        .\tdm_data_out_reg[15] (\tdm_data_out_reg[15] ),
        .\tdm_data_out_reg[16] (\tdm_data_out_reg[16] ),
        .\tdm_data_out_reg[17] (\tdm_data_out_reg[17] ),
        .\tdm_data_out_reg[18] (\tdm_data_out_reg[18] ),
        .\tdm_data_out_reg[19] (\tdm_data_out_reg[19] ),
        .\tdm_data_out_reg[20] (\tdm_data_out_reg[20] ),
        .\tdm_data_out_reg[21] (\tdm_data_out_reg[21] ),
        .\tdm_data_out_reg[22] (\tdm_data_out_reg[22] ),
        .\tdm_data_out_reg[23] (\tdm_data_out_reg[23] ),
        .\tdm_data_out_reg[6] (\tdm_data_out_reg[6] ),
        .\tdm_data_out_reg[7] (\tdm_data_out_reg[7] ),
        .\tdm_data_out_reg[8] (\tdm_data_out_reg[8] ),
        .\tdm_data_out_reg[9] (\tdm_data_out_reg[9] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized2 rstblk
       (.Q({rstblk_n_2,rd_rst_i}),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_d2_reg[0] ({rstblk_n_5,wr_rst_i}),
        .m_aclk(m_aclk),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo__parameterized2
   (\gpregsm1.curr_fwft_state_reg[0] ,
    int_ch1_ready5,
    m_axi_bready,
    br_ch_data,
    m_aclk,
    br_fifo_reset,
    clk_ph_out,
    br_ch_data_ready,
    tx_phy_ready,
    Q,
    m_axi_bvalid,
    bfifo_data);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output int_ch1_ready5;
  output m_axi_bready;
  output [2:0]br_ch_data;
  input m_aclk;
  input br_fifo_reset;
  input clk_ph_out;
  input br_ch_data_ready;
  input tx_phy_ready;
  input [0:0]Q;
  input m_axi_bvalid;
  input [2:0]bfifo_data;

  wire [0:0]Q;
  wire [2:0]bfifo_data;
  wire [2:0]br_ch_data;
  wire br_ch_data_ready;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_3 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_10 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_21 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_22 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_23 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_24 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_25 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_26 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_27 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_8 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_1 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_16 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_17 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_18 ;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire [0:0]\gr1.rfwft/curr_fwft_state ;
  wire int_ch1_ready5;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire [6:0]p_0_in6_out;
  wire [7:0]p_0_out;
  wire [7:0]p_11_out;
  wire [1:0]p_21_out;
  wire [7:0]p_22_out;
  wire p_2_out;
  wire p_6_out;
  wire [7:2]rd_pntr_plus1;
  wire [1:1]rd_rst_i;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_2;
  wire rstblk_n_4;
  wire rstblk_n_6;
  wire tx_phy_ready;
  wire [0:0]wr_rst_i;

  v7_bd_axi_chip2chip_0_0_clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.I41({\gntv_or_sync_fifo.gl0.rd_n_21 ,\gntv_or_sync_fifo.gl0.rd_n_22 ,\gntv_or_sync_fifo.gl0.rd_n_23 ,\gntv_or_sync_fifo.gl0.rd_n_24 ,\gntv_or_sync_fifo.gl0.rd_n_25 ,\gntv_or_sync_fifo.gl0.rd_n_26 ,\gntv_or_sync_fifo.gl0.rd_n_27 }),
        .Q(p_0_out),
        .RD_PNTR_WR(p_22_out),
        .WR_PNTR_RD(p_21_out),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_reg[7] (rd_pntr_plus1),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (rd_rst_i),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (wr_rst_i),
        .p_0_in6_out({p_11_out[7],p_0_in6_out}),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .ram_empty_fb_i_reg_0(\gntv_or_sync_fifo.gcx.clkx_n_3 ),
        .\wr_pntr_bin_reg[0]_0 (\gntv_or_sync_fifo.gl0.rd_n_8 ));
  v7_bd_axi_chip2chip_0_0_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.I41({\gntv_or_sync_fifo.gl0.rd_n_21 ,\gntv_or_sync_fifo.gl0.rd_n_22 ,\gntv_or_sync_fifo.gl0.rd_n_23 ,\gntv_or_sync_fifo.gl0.rd_n_24 ,\gntv_or_sync_fifo.gl0.rd_n_25 ,\gntv_or_sync_fifo.gl0.rd_n_26 ,\gntv_or_sync_fifo.gl0.rd_n_27 }),
        .Q(rstblk_n_4),
        .WR_PNTR_RD(p_21_out),
        .br_ch_data_ready(br_ch_data_ready),
        .clk_ph_out(clk_ph_out),
        .\ctrl_info_reg[1] (Q),
        .\gc0.count_d1_reg[7] (rd_pntr_plus1),
        .\gc0.count_reg[5] (\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .\gpregsm1.curr_fwft_state_reg[0]_0 ({\gntv_or_sync_fifo.gl0.rd_n_10 ,\gr1.rfwft/curr_fwft_state }),
        .int_ch1_ready5(int_ch1_ready5),
        .p_2_out(p_2_out),
        .p_6_out(p_6_out),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gl0.rd_n_8 ),
        .\rd_pntr_gc_reg[7] (p_0_out),
        .tx_phy_ready(tx_phy_ready),
        .\wr_pntr_bin_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_3 ));
  v7_bd_axi_chip2chip_0_0_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.Q(p_11_out[5:0]),
        .RD_PNTR_WR(p_22_out),
        .\gpr1.dout_i_reg[0] (\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .\gpr1.dout_i_reg[0]_0 (\gntv_or_sync_fifo.gl0.wr_n_16 ),
        .\gpr1.dout_i_reg[0]_1 (\gntv_or_sync_fifo.gl0.wr_n_17 ),
        .\gpr1.dout_i_reg[0]_2 (\gntv_or_sync_fifo.gl0.wr_n_18 ),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] (rstblk_n_2),
        .p_0_in6_out({p_11_out[7],p_0_in6_out}),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
  v7_bd_axi_chip2chip_0_0_memory__parameterized2 \gntv_or_sync_fifo.mem 
       (.Q(p_11_out[5:0]),
        .bfifo_data(bfifo_data),
        .br_ch_data(br_ch_data),
        .br_ch_data_ready(br_ch_data_ready),
        .clk_ph_out(clk_ph_out),
        .empty_fwft_i_reg(\gpregsm1.curr_fwft_state_reg[0] ),
        .\gc0.count_d1_reg[7] (p_0_out),
        .\gic0.gc0.count_d2_reg[6] (\gntv_or_sync_fifo.gl0.wr_n_17 ),
        .\gic0.gc0.count_d2_reg[7] (\gntv_or_sync_fifo.gl0.wr_n_16 ),
        .\gpregsm1.curr_fwft_state_reg[1] ({\gntv_or_sync_fifo.gl0.rd_n_10 ,\gr1.rfwft/curr_fwft_state }),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] (rstblk_n_6),
        .p_2_out(p_2_out),
        .p_6_out(p_6_out),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_full_fb_i_reg_0(\gntv_or_sync_fifo.gl0.wr_n_18 ));
  v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized4 rstblk
       (.Q({rstblk_n_2,wr_rst_i}),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[7] ({rstblk_n_4,rd_rst_i,rstblk_n_6}),
        .m_aclk(m_aclk),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo__parameterized3
   (\gpr1.dout_i_reg[0] ,
    prog_full_i,
    \calib_intr_gen.tx_ch0_data_reg[19] ,
    \calib_intr_gen.tx_ch0_data_reg[18] ,
    \calib_intr_gen.tx_ch0_data_reg[17] ,
    \calib_intr_gen.tx_ch0_data_reg[16] ,
    \calib_intr_gen.tx_ch0_data_reg[15] ,
    \calib_intr_gen.tx_ch0_data_reg[14] ,
    \calib_intr_gen.tx_ch0_data_reg[13] ,
    \calib_intr_gen.tx_ch0_data_reg[12] ,
    \calib_intr_gen.tx_ch0_data_reg[11] ,
    \calib_intr_gen.tx_ch0_data_reg[10] ,
    \calib_intr_gen.tx_ch0_data_reg[9] ,
    \calib_intr_gen.tx_ch0_data_reg[8] ,
    \calib_intr_gen.tx_ch0_data_reg[7] ,
    \calib_intr_gen.tx_ch0_data_reg[6] ,
    \calib_intr_gen.tx_ch0_data_reg[5] ,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    \calib_intr_gen.tx_ch0_data_reg[3] ,
    m_axi_lite_aclk,
    fifo_reset,
    clk_ph_out,
    rx_user_reset,
    axi_lite_tx_ready,
    tx_fifo_we,
    Q);
  output \gpr1.dout_i_reg[0] ;
  output prog_full_i;
  output \calib_intr_gen.tx_ch0_data_reg[19] ;
  output \calib_intr_gen.tx_ch0_data_reg[18] ;
  output \calib_intr_gen.tx_ch0_data_reg[17] ;
  output \calib_intr_gen.tx_ch0_data_reg[16] ;
  output \calib_intr_gen.tx_ch0_data_reg[15] ;
  output \calib_intr_gen.tx_ch0_data_reg[14] ;
  output \calib_intr_gen.tx_ch0_data_reg[13] ;
  output \calib_intr_gen.tx_ch0_data_reg[12] ;
  output \calib_intr_gen.tx_ch0_data_reg[11] ;
  output \calib_intr_gen.tx_ch0_data_reg[10] ;
  output \calib_intr_gen.tx_ch0_data_reg[9] ;
  output \calib_intr_gen.tx_ch0_data_reg[8] ;
  output \calib_intr_gen.tx_ch0_data_reg[7] ;
  output \calib_intr_gen.tx_ch0_data_reg[6] ;
  output \calib_intr_gen.tx_ch0_data_reg[5] ;
  output \calib_intr_gen.tx_ch0_data_reg[4] ;
  output [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  input m_axi_lite_aclk;
  input fifo_reset;
  input clk_ph_out;
  input rx_user_reset;
  input axi_lite_tx_ready;
  input tx_fifo_we;
  input [18:0]Q;

  wire [18:0]Q;
  wire RD_RST;
  wire RST;
  wire WR_RST;
  wire axi_lite_tx_ready;
  wire \calib_intr_gen.tx_ch0_data_reg[10] ;
  wire \calib_intr_gen.tx_ch0_data_reg[11] ;
  wire \calib_intr_gen.tx_ch0_data_reg[12] ;
  wire \calib_intr_gen.tx_ch0_data_reg[13] ;
  wire \calib_intr_gen.tx_ch0_data_reg[14] ;
  wire \calib_intr_gen.tx_ch0_data_reg[15] ;
  wire \calib_intr_gen.tx_ch0_data_reg[16] ;
  wire \calib_intr_gen.tx_ch0_data_reg[17] ;
  wire \calib_intr_gen.tx_ch0_data_reg[18] ;
  wire \calib_intr_gen.tx_ch0_data_reg[19] ;
  wire [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire \calib_intr_gen.tx_ch0_data_reg[5] ;
  wire \calib_intr_gen.tx_ch0_data_reg[6] ;
  wire \calib_intr_gen.tx_ch0_data_reg[7] ;
  wire \calib_intr_gen.tx_ch0_data_reg[8] ;
  wire \calib_intr_gen.tx_ch0_data_reg[9] ;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_10 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_8 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_9 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_1 ;
  wire \gpr1.dout_i_reg[0] ;
  wire m_axi_lite_aclk;
  wire [3:0]p_0_out;
  wire [3:0]p_11_out;
  wire [3:0]p_22_out;
  wire p_5_out;
  wire p_6_out;
  wire prog_full_i;
  wire ram_rd_en_i;
  wire [3:0]rd_pntr_plus1;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_2;
  wire rstblk_n_4;
  wire rx_user_reset;
  wire tx_fifo_we;

  v7_bd_axi_chip2chip_0_0_clk_x_pntrs__parameterized2 \gntv_or_sync_fifo.gcx.clkx 
       (.D({\gntv_or_sync_fifo.gl0.rd_n_8 ,\gntv_or_sync_fifo.gl0.rd_n_9 ,\gntv_or_sync_fifo.gl0.rd_n_10 }),
        .E(p_6_out),
        .Q(p_0_out),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_reg[3] (rd_pntr_plus1),
        .\gdiff.diff_pntr_pad_reg[4] (p_22_out),
        .\gic0.gc0.count_d2_reg[3] (p_11_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (RD_RST),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (RST),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ));
  v7_bd_axi_chip2chip_0_0_rd_logic__parameterized2 \gntv_or_sync_fifo.gl0.rd 
       (.D({\gntv_or_sync_fifo.gl0.rd_n_8 ,\gntv_or_sync_fifo.gl0.rd_n_9 ,\gntv_or_sync_fifo.gl0.rd_n_10 }),
        .E(ram_rd_en_i),
        .Q(rstblk_n_2),
        .axi_lite_tx_ready(axi_lite_tx_ready),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[3] (rd_pntr_plus1),
        .\gc0.count_reg[3] (p_6_out),
        .\goreg_dm.dout_i_reg[19] (p_5_out),
        .\gpr1.dout_i_reg[0] (\gpr1.dout_i_reg[0] ),
        .\rd_pntr_gc_reg[3] (p_0_out),
        .\wr_pntr_bin_reg[3] (\gntv_or_sync_fifo.gcx.clkx_n_0 ));
  v7_bd_axi_chip2chip_0_0_wr_logic__parameterized2 \gntv_or_sync_fifo.gl0.wr 
       (.E(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .Q(WR_RST),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .prog_full_i(prog_full_i),
        .\rd_pntr_bin_reg[3] (p_22_out),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i),
        .tx_fifo_we(tx_fifo_we),
        .\wr_pntr_gc_reg[3] (p_11_out));
  v7_bd_axi_chip2chip_0_0_memory__parameterized3 \gntv_or_sync_fifo.mem 
       (.E(ram_rd_en_i),
        .Q(Q),
        .\calib_intr_gen.axi_lite_tx_ready_reg (p_5_out),
        .\calib_intr_gen.tx_ch0_data_reg[10] (\calib_intr_gen.tx_ch0_data_reg[10] ),
        .\calib_intr_gen.tx_ch0_data_reg[11] (\calib_intr_gen.tx_ch0_data_reg[11] ),
        .\calib_intr_gen.tx_ch0_data_reg[12] (\calib_intr_gen.tx_ch0_data_reg[12] ),
        .\calib_intr_gen.tx_ch0_data_reg[13] (\calib_intr_gen.tx_ch0_data_reg[13] ),
        .\calib_intr_gen.tx_ch0_data_reg[14] (\calib_intr_gen.tx_ch0_data_reg[14] ),
        .\calib_intr_gen.tx_ch0_data_reg[15] (\calib_intr_gen.tx_ch0_data_reg[15] ),
        .\calib_intr_gen.tx_ch0_data_reg[16] (\calib_intr_gen.tx_ch0_data_reg[16] ),
        .\calib_intr_gen.tx_ch0_data_reg[17] (\calib_intr_gen.tx_ch0_data_reg[17] ),
        .\calib_intr_gen.tx_ch0_data_reg[18] (\calib_intr_gen.tx_ch0_data_reg[18] ),
        .\calib_intr_gen.tx_ch0_data_reg[19] (\calib_intr_gen.tx_ch0_data_reg[19] ),
        .\calib_intr_gen.tx_ch0_data_reg[3] (\calib_intr_gen.tx_ch0_data_reg[3] ),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\calib_intr_gen.tx_ch0_data_reg[4] ),
        .\calib_intr_gen.tx_ch0_data_reg[5] (\calib_intr_gen.tx_ch0_data_reg[5] ),
        .\calib_intr_gen.tx_ch0_data_reg[6] (\calib_intr_gen.tx_ch0_data_reg[6] ),
        .\calib_intr_gen.tx_ch0_data_reg[7] (\calib_intr_gen.tx_ch0_data_reg[7] ),
        .\calib_intr_gen.tx_ch0_data_reg[8] (\calib_intr_gen.tx_ch0_data_reg[8] ),
        .\calib_intr_gen.tx_ch0_data_reg[9] (\calib_intr_gen.tx_ch0_data_reg[9] ),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[3] (p_0_out),
        .\gic0.gc0.count_d2_reg[3] (p_11_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] (rstblk_n_4),
        .rx_user_reset(rx_user_reset),
        .wr_pntr_plus1_pad(\gntv_or_sync_fifo.gl0.wr_n_1 ));
  v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized6 rstblk
       (.Q({rstblk_n_2,RD_RST,rstblk_n_4}),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gic0.gc0.count_reg[0] ({WR_RST,RST}),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo__parameterized4
   (\gpregsm1.curr_fwft_state_reg[0] ,
    D,
    Q,
    ch0_valid_out_reg,
    ch1_valid_out_reg,
    ch2_valid_out_reg,
    m_axi_lite_aclk,
    clk_ph_out,
    fifo_reset,
    axi_lite_rx_valid,
    rx_fifo_re,
    \state_reg[5] ,
    axi_wready_rs,
    axi_arready_rs,
    axi_awready_rs,
    \axi_lite_rx_gen.axi_lite_rx_data_reg[19] );
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output [2:0]D;
  output [19:0]Q;
  output ch0_valid_out_reg;
  output ch1_valid_out_reg;
  output ch2_valid_out_reg;
  input m_axi_lite_aclk;
  input clk_ph_out;
  input fifo_reset;
  input axi_lite_rx_valid;
  input rx_fifo_re;
  input [3:0]\state_reg[5] ;
  input axi_wready_rs;
  input axi_arready_rs;
  input axi_awready_rs;
  input [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;

  wire [2:0]D;
  wire [19:0]Q;
  wire axi_arready_rs;
  wire axi_awready_rs;
  wire [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  wire axi_lite_rx_valid;
  wire axi_wready_rs;
  wire ch0_valid_out_reg;
  wire ch1_valid_out_reg;
  wire ch2_valid_out_reg;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_5 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_1 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_7 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_8 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_9 ;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_axi_lite_aclk;
  wire [3:0]p_0_out;
  wire [3:0]p_11_out;
  wire [3:0]p_12_out;
  wire p_17_out;
  wire [3:0]p_22_out;
  wire p_5_out;
  wire p_6_out;
  wire [3:0]rd_pntr_plus1;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_2;
  wire rstblk_n_3;
  wire rstblk_n_4;
  wire rstblk_n_5;
  wire rstblk_n_6;
  wire rx_fifo_re;
  wire [3:0]\state_reg[5] ;

  v7_bd_axi_chip2chip_0_0_clk_x_pntrs__parameterized3 \gntv_or_sync_fifo.gcx.clkx 
       (.D({\gntv_or_sync_fifo.gl0.rd_n_7 ,\gntv_or_sync_fifo.gl0.rd_n_8 ,\gntv_or_sync_fifo.gl0.rd_n_9 }),
        .E(p_6_out),
        .Q(p_12_out),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[3] (p_0_out),
        .\gc0.count_reg[3] (rd_pntr_plus1),
        .\gic0.gc0.count_d2_reg[3] (p_11_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (rstblk_n_3),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] (rstblk_n_6),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .ram_full_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .ram_full_i_reg_0(p_22_out),
        .rst_full_gen_i(rst_full_gen_i));
  v7_bd_axi_chip2chip_0_0_rd_logic__parameterized3 \gntv_or_sync_fifo.gl0.rd 
       (.D({\gntv_or_sync_fifo.gl0.rd_n_7 ,\gntv_or_sync_fifo.gl0.rd_n_8 ,\gntv_or_sync_fifo.gl0.rd_n_9 }),
        .E(\gntv_or_sync_fifo.gl0.rd_n_1 ),
        .Q(rstblk_n_2),
        .\gc0.count_d1_reg[3] (rd_pntr_plus1),
        .\gc0.count_reg[3] (p_6_out),
        .\goreg_dm.dout_i_reg[19] (p_5_out),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\rd_pntr_gc_reg[3] (p_0_out),
        .rx_fifo_re(rx_fifo_re),
        .\wr_pntr_bin_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_5 ));
  v7_bd_axi_chip2chip_0_0_wr_logic__parameterized3 \gntv_or_sync_fifo.gl0.wr 
       (.E(p_17_out),
        .Q(p_12_out),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_d1_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] (rstblk_n_5),
        .\rd_pntr_bin_reg[3] (p_22_out),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i),
        .\wr_pntr_gc_reg[3] (p_11_out));
  v7_bd_axi_chip2chip_0_0_memory__parameterized4 \gntv_or_sync_fifo.mem 
       (.D(D),
        .E(p_17_out),
        .Q(Q),
        .axi_arready_rs(axi_arready_rs),
        .axi_awready_rs(axi_awready_rs),
        .\axi_lite_rx_gen.axi_lite_rx_data_reg[19] (\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ),
        .axi_wready_rs(axi_wready_rs),
        .ch0_valid_out_reg(ch0_valid_out_reg),
        .ch1_valid_out_reg(ch1_valid_out_reg),
        .ch2_valid_out_reg(ch2_valid_out_reg),
        .clk_ph_out(clk_ph_out),
        .empty_fwft_i_reg(\gpregsm1.curr_fwft_state_reg[0] ),
        .\gc0.count_d1_reg[3] (p_0_out),
        .\gic0.gc0.count_d2_reg[3] (p_11_out),
        .\gpregsm1.curr_fwft_state_reg[1] (\gntv_or_sync_fifo.gl0.rd_n_1 ),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (p_5_out),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] (rstblk_n_4),
        .\state_reg[5] (\state_reg[5] ));
  v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized8 rstblk
       (.Q({rstblk_n_2,rstblk_n_3,rstblk_n_4}),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gic0.gc0.count_d1_reg[1] ({rstblk_n_5,rstblk_n_6}),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_top
   (\gic0.gc0.count_reg[0] ,
    aw_ch_fc,
    m_axi_awvalid,
    \m_axi_awaddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[22] ,
    br_fifo_reset,
    p_0_in,
    aw_ch_data_valid,
    m_axi_awready);
  output \gic0.gc0.count_reg[0] ;
  output aw_ch_fc;
  output m_axi_awvalid;
  output [44:0]\m_axi_awaddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input [22:0]\data_out_reg[22] ;
  input br_fifo_reset;
  input p_0_in;
  input aw_ch_data_valid;
  input m_axi_awready;

  wire [22:0]Q;
  wire aw_ch_data_valid;
  wire aw_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \gic0.gc0.count_reg[0] ;
  wire m_aclk;
  wire [44:0]\m_axi_awaddr[31] ;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire p_0_in;

  v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo \grf.rf 
       (.Q(Q),
        .aw_ch_data_valid(aw_ch_data_valid),
        .aw_ch_fc(aw_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gic0.gc0.count_reg[0] (\gic0.gc0.count_reg[0] ),
        .m_aclk(m_aclk),
        .\m_axi_awaddr[31] (\m_axi_awaddr[31] ),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .p_0_in(p_0_in));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_top_38
   (\gic0.gc0.count_reg[7] ,
    ar_ch_fc,
    m_axi_arvalid,
    \m_axi_araddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[22] ,
    br_fifo_reset,
    p_0_in,
    ar_ch_data_valid,
    m_axi_arready);
  output \gic0.gc0.count_reg[7] ;
  output ar_ch_fc;
  output m_axi_arvalid;
  output [44:0]\m_axi_araddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input [22:0]\data_out_reg[22] ;
  input br_fifo_reset;
  input p_0_in;
  input ar_ch_data_valid;
  input m_axi_arready;

  wire [22:0]Q;
  wire ar_ch_data_valid;
  wire ar_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \gic0.gc0.count_reg[7] ;
  wire m_aclk;
  wire [44:0]\m_axi_araddr[31] ;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire p_0_in;

  v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo_40 \grf.rf 
       (.Q(Q),
        .ar_ch_data_valid(ar_ch_data_valid),
        .ar_ch_fc(ar_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gic0.gc0.count_reg[7] (\gic0.gc0.count_reg[7] ),
        .m_aclk(m_aclk),
        .\m_axi_araddr[31] (\m_axi_araddr[31] ),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .p_0_in(p_0_in));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_top__parameterized0
   (\gic0.gc0.count_reg[8] ,
    wd_ch_fc,
    m_axi_wvalid,
    \m_axi_wdata[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[18] ,
    br_fifo_reset,
    p_0_in,
    wd_ch_data_valid,
    m_axi_wready);
  output \gic0.gc0.count_reg[8] ;
  output wd_ch_fc;
  output m_axi_wvalid;
  output [37:0]\m_axi_wdata[31] ;
  input m_aclk;
  input clk_ph_out;
  input [18:0]Q;
  input [18:0]\data_out_reg[18] ;
  input br_fifo_reset;
  input p_0_in;
  input wd_ch_data_valid;
  input m_axi_wready;

  wire [18:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire \gic0.gc0.count_reg[8] ;
  wire m_aclk;
  wire [37:0]\m_axi_wdata[31] ;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire p_0_in;
  wire wd_ch_data_valid;
  wire wd_ch_fc;

  v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo__parameterized0 \grf.rf 
       (.Q(Q),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gic0.gc0.count_reg[8] (\gic0.gc0.count_reg[8] ),
        .m_aclk(m_aclk),
        .\m_axi_wdata[31] (\m_axi_wdata[31] ),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .p_0_in(p_0_in),
        .wd_ch_data_valid(wd_ch_data_valid),
        .wd_ch_fc(wd_ch_fc));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_top__parameterized1
   (\gpregsm1.curr_fwft_state_reg[0] ,
    \tdm_data_out_reg[6] ,
    \tdm_data_out_reg[7] ,
    \tdm_data_out_reg[8] ,
    \tdm_data_out_reg[9] ,
    \tdm_data_out_reg[10] ,
    \tdm_data_out_reg[11] ,
    \tdm_data_out_reg[12] ,
    \tdm_data_out_reg[13] ,
    \tdm_data_out_reg[14] ,
    \tdm_data_out_reg[15] ,
    \tdm_data_out_reg[16] ,
    \tdm_data_out_reg[17] ,
    \tdm_data_out_reg[18] ,
    \tdm_data_out_reg[19] ,
    \tdm_data_out_reg[20] ,
    \tdm_data_out_reg[21] ,
    \tdm_data_out_reg[22] ,
    \tdm_data_out_reg[23] ,
    p_12_in,
    m_axi_rready,
    clk_ph_out,
    m_aclk,
    m_axi_rdata,
    DIADI,
    br_fifo_reset,
    p_0_in,
    Q,
    \mux_by_2.data_count_reg[0] ,
    rd_ch_data_ready,
    tx_phy_ready,
    \ctrl_info_reg[0] ,
    m_axi_rvalid);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output \tdm_data_out_reg[6] ;
  output \tdm_data_out_reg[7] ;
  output \tdm_data_out_reg[8] ;
  output \tdm_data_out_reg[9] ;
  output \tdm_data_out_reg[10] ;
  output \tdm_data_out_reg[11] ;
  output \tdm_data_out_reg[12] ;
  output \tdm_data_out_reg[13] ;
  output \tdm_data_out_reg[14] ;
  output \tdm_data_out_reg[15] ;
  output \tdm_data_out_reg[16] ;
  output \tdm_data_out_reg[17] ;
  output \tdm_data_out_reg[18] ;
  output \tdm_data_out_reg[19] ;
  output \tdm_data_out_reg[20] ;
  output \tdm_data_out_reg[21] ;
  output \tdm_data_out_reg[22] ;
  output \tdm_data_out_reg[23] ;
  output p_12_in;
  output m_axi_rready;
  input clk_ph_out;
  input m_aclk;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;
  input br_fifo_reset;
  input p_0_in;
  input [0:0]Q;
  input \mux_by_2.data_count_reg[0] ;
  input rd_ch_data_ready;
  input tx_phy_ready;
  input [0:0]\ctrl_info_reg[0] ;
  input m_axi_rvalid;

  wire [3:0]DIADI;
  wire [0:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [0:0]\ctrl_info_reg[0] ;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire \mux_by_2.data_count_reg[0] ;
  wire p_0_in;
  wire p_12_in;
  wire rd_ch_data_ready;
  wire \tdm_data_out_reg[10] ;
  wire \tdm_data_out_reg[11] ;
  wire \tdm_data_out_reg[12] ;
  wire \tdm_data_out_reg[13] ;
  wire \tdm_data_out_reg[14] ;
  wire \tdm_data_out_reg[15] ;
  wire \tdm_data_out_reg[16] ;
  wire \tdm_data_out_reg[17] ;
  wire \tdm_data_out_reg[18] ;
  wire \tdm_data_out_reg[19] ;
  wire \tdm_data_out_reg[20] ;
  wire \tdm_data_out_reg[21] ;
  wire \tdm_data_out_reg[22] ;
  wire \tdm_data_out_reg[23] ;
  wire \tdm_data_out_reg[6] ;
  wire \tdm_data_out_reg[7] ;
  wire \tdm_data_out_reg[8] ;
  wire \tdm_data_out_reg[9] ;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo__parameterized1 \grf.rf 
       (.DIADI(DIADI),
        .Q(Q),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\ctrl_info_reg[0] (\ctrl_info_reg[0] ),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .\mux_by_2.data_count_reg[0] (\mux_by_2.data_count_reg[0] ),
        .p_0_in(p_0_in),
        .p_12_in(p_12_in),
        .rd_ch_data_ready(rd_ch_data_ready),
        .\tdm_data_out_reg[10] (\tdm_data_out_reg[10] ),
        .\tdm_data_out_reg[11] (\tdm_data_out_reg[11] ),
        .\tdm_data_out_reg[12] (\tdm_data_out_reg[12] ),
        .\tdm_data_out_reg[13] (\tdm_data_out_reg[13] ),
        .\tdm_data_out_reg[14] (\tdm_data_out_reg[14] ),
        .\tdm_data_out_reg[15] (\tdm_data_out_reg[15] ),
        .\tdm_data_out_reg[16] (\tdm_data_out_reg[16] ),
        .\tdm_data_out_reg[17] (\tdm_data_out_reg[17] ),
        .\tdm_data_out_reg[18] (\tdm_data_out_reg[18] ),
        .\tdm_data_out_reg[19] (\tdm_data_out_reg[19] ),
        .\tdm_data_out_reg[20] (\tdm_data_out_reg[20] ),
        .\tdm_data_out_reg[21] (\tdm_data_out_reg[21] ),
        .\tdm_data_out_reg[22] (\tdm_data_out_reg[22] ),
        .\tdm_data_out_reg[23] (\tdm_data_out_reg[23] ),
        .\tdm_data_out_reg[6] (\tdm_data_out_reg[6] ),
        .\tdm_data_out_reg[7] (\tdm_data_out_reg[7] ),
        .\tdm_data_out_reg[8] (\tdm_data_out_reg[8] ),
        .\tdm_data_out_reg[9] (\tdm_data_out_reg[9] ),
        .tx_phy_ready(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_top__parameterized2
   (\gpregsm1.curr_fwft_state_reg[0] ,
    int_ch1_ready5,
    m_axi_bready,
    br_ch_data,
    m_aclk,
    br_fifo_reset,
    clk_ph_out,
    br_ch_data_ready,
    tx_phy_ready,
    Q,
    m_axi_bvalid,
    bfifo_data);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output int_ch1_ready5;
  output m_axi_bready;
  output [2:0]br_ch_data;
  input m_aclk;
  input br_fifo_reset;
  input clk_ph_out;
  input br_ch_data_ready;
  input tx_phy_ready;
  input [0:0]Q;
  input m_axi_bvalid;
  input [2:0]bfifo_data;

  wire [0:0]Q;
  wire [2:0]bfifo_data;
  wire [2:0]br_ch_data;
  wire br_ch_data_ready;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire int_ch1_ready5;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo__parameterized2 \grf.rf 
       (.Q(Q),
        .bfifo_data(bfifo_data),
        .br_ch_data(br_ch_data),
        .br_ch_data_ready(br_ch_data_ready),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .int_ch1_ready5(int_ch1_ready5),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .tx_phy_ready(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_top__parameterized3
   (\gpr1.dout_i_reg[0] ,
    prog_full_i,
    \calib_intr_gen.tx_ch0_data_reg[19] ,
    \calib_intr_gen.tx_ch0_data_reg[18] ,
    \calib_intr_gen.tx_ch0_data_reg[17] ,
    \calib_intr_gen.tx_ch0_data_reg[16] ,
    \calib_intr_gen.tx_ch0_data_reg[15] ,
    \calib_intr_gen.tx_ch0_data_reg[14] ,
    \calib_intr_gen.tx_ch0_data_reg[13] ,
    \calib_intr_gen.tx_ch0_data_reg[12] ,
    \calib_intr_gen.tx_ch0_data_reg[11] ,
    \calib_intr_gen.tx_ch0_data_reg[10] ,
    \calib_intr_gen.tx_ch0_data_reg[9] ,
    \calib_intr_gen.tx_ch0_data_reg[8] ,
    \calib_intr_gen.tx_ch0_data_reg[7] ,
    \calib_intr_gen.tx_ch0_data_reg[6] ,
    \calib_intr_gen.tx_ch0_data_reg[5] ,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    \calib_intr_gen.tx_ch0_data_reg[3] ,
    m_axi_lite_aclk,
    fifo_reset,
    clk_ph_out,
    rx_user_reset,
    axi_lite_tx_ready,
    tx_fifo_we,
    Q);
  output \gpr1.dout_i_reg[0] ;
  output prog_full_i;
  output \calib_intr_gen.tx_ch0_data_reg[19] ;
  output \calib_intr_gen.tx_ch0_data_reg[18] ;
  output \calib_intr_gen.tx_ch0_data_reg[17] ;
  output \calib_intr_gen.tx_ch0_data_reg[16] ;
  output \calib_intr_gen.tx_ch0_data_reg[15] ;
  output \calib_intr_gen.tx_ch0_data_reg[14] ;
  output \calib_intr_gen.tx_ch0_data_reg[13] ;
  output \calib_intr_gen.tx_ch0_data_reg[12] ;
  output \calib_intr_gen.tx_ch0_data_reg[11] ;
  output \calib_intr_gen.tx_ch0_data_reg[10] ;
  output \calib_intr_gen.tx_ch0_data_reg[9] ;
  output \calib_intr_gen.tx_ch0_data_reg[8] ;
  output \calib_intr_gen.tx_ch0_data_reg[7] ;
  output \calib_intr_gen.tx_ch0_data_reg[6] ;
  output \calib_intr_gen.tx_ch0_data_reg[5] ;
  output \calib_intr_gen.tx_ch0_data_reg[4] ;
  output [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  input m_axi_lite_aclk;
  input fifo_reset;
  input clk_ph_out;
  input rx_user_reset;
  input axi_lite_tx_ready;
  input tx_fifo_we;
  input [18:0]Q;

  wire [18:0]Q;
  wire axi_lite_tx_ready;
  wire \calib_intr_gen.tx_ch0_data_reg[10] ;
  wire \calib_intr_gen.tx_ch0_data_reg[11] ;
  wire \calib_intr_gen.tx_ch0_data_reg[12] ;
  wire \calib_intr_gen.tx_ch0_data_reg[13] ;
  wire \calib_intr_gen.tx_ch0_data_reg[14] ;
  wire \calib_intr_gen.tx_ch0_data_reg[15] ;
  wire \calib_intr_gen.tx_ch0_data_reg[16] ;
  wire \calib_intr_gen.tx_ch0_data_reg[17] ;
  wire \calib_intr_gen.tx_ch0_data_reg[18] ;
  wire \calib_intr_gen.tx_ch0_data_reg[19] ;
  wire [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire \calib_intr_gen.tx_ch0_data_reg[5] ;
  wire \calib_intr_gen.tx_ch0_data_reg[6] ;
  wire \calib_intr_gen.tx_ch0_data_reg[7] ;
  wire \calib_intr_gen.tx_ch0_data_reg[8] ;
  wire \calib_intr_gen.tx_ch0_data_reg[9] ;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gpr1.dout_i_reg[0] ;
  wire m_axi_lite_aclk;
  wire prog_full_i;
  wire rx_user_reset;
  wire tx_fifo_we;

  v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo__parameterized3 \grf.rf 
       (.Q(Q),
        .axi_lite_tx_ready(axi_lite_tx_ready),
        .\calib_intr_gen.tx_ch0_data_reg[10] (\calib_intr_gen.tx_ch0_data_reg[10] ),
        .\calib_intr_gen.tx_ch0_data_reg[11] (\calib_intr_gen.tx_ch0_data_reg[11] ),
        .\calib_intr_gen.tx_ch0_data_reg[12] (\calib_intr_gen.tx_ch0_data_reg[12] ),
        .\calib_intr_gen.tx_ch0_data_reg[13] (\calib_intr_gen.tx_ch0_data_reg[13] ),
        .\calib_intr_gen.tx_ch0_data_reg[14] (\calib_intr_gen.tx_ch0_data_reg[14] ),
        .\calib_intr_gen.tx_ch0_data_reg[15] (\calib_intr_gen.tx_ch0_data_reg[15] ),
        .\calib_intr_gen.tx_ch0_data_reg[16] (\calib_intr_gen.tx_ch0_data_reg[16] ),
        .\calib_intr_gen.tx_ch0_data_reg[17] (\calib_intr_gen.tx_ch0_data_reg[17] ),
        .\calib_intr_gen.tx_ch0_data_reg[18] (\calib_intr_gen.tx_ch0_data_reg[18] ),
        .\calib_intr_gen.tx_ch0_data_reg[19] (\calib_intr_gen.tx_ch0_data_reg[19] ),
        .\calib_intr_gen.tx_ch0_data_reg[3] (\calib_intr_gen.tx_ch0_data_reg[3] ),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\calib_intr_gen.tx_ch0_data_reg[4] ),
        .\calib_intr_gen.tx_ch0_data_reg[5] (\calib_intr_gen.tx_ch0_data_reg[5] ),
        .\calib_intr_gen.tx_ch0_data_reg[6] (\calib_intr_gen.tx_ch0_data_reg[6] ),
        .\calib_intr_gen.tx_ch0_data_reg[7] (\calib_intr_gen.tx_ch0_data_reg[7] ),
        .\calib_intr_gen.tx_ch0_data_reg[8] (\calib_intr_gen.tx_ch0_data_reg[8] ),
        .\calib_intr_gen.tx_ch0_data_reg[9] (\calib_intr_gen.tx_ch0_data_reg[9] ),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpr1.dout_i_reg[0] (\gpr1.dout_i_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .prog_full_i(prog_full_i),
        .rx_user_reset(rx_user_reset),
        .tx_fifo_we(tx_fifo_we));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_top__parameterized4
   (\gpregsm1.curr_fwft_state_reg[0] ,
    D,
    Q,
    ch0_valid_out_reg,
    ch1_valid_out_reg,
    ch2_valid_out_reg,
    m_axi_lite_aclk,
    clk_ph_out,
    fifo_reset,
    axi_lite_rx_valid,
    rx_fifo_re,
    \state_reg[5] ,
    axi_wready_rs,
    axi_arready_rs,
    axi_awready_rs,
    \axi_lite_rx_gen.axi_lite_rx_data_reg[19] );
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output [2:0]D;
  output [19:0]Q;
  output ch0_valid_out_reg;
  output ch1_valid_out_reg;
  output ch2_valid_out_reg;
  input m_axi_lite_aclk;
  input clk_ph_out;
  input fifo_reset;
  input axi_lite_rx_valid;
  input rx_fifo_re;
  input [3:0]\state_reg[5] ;
  input axi_wready_rs;
  input axi_arready_rs;
  input axi_awready_rs;
  input [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;

  wire [2:0]D;
  wire [19:0]Q;
  wire axi_arready_rs;
  wire axi_awready_rs;
  wire [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  wire axi_lite_rx_valid;
  wire axi_wready_rs;
  wire ch0_valid_out_reg;
  wire ch1_valid_out_reg;
  wire ch2_valid_out_reg;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_axi_lite_aclk;
  wire rx_fifo_re;
  wire [3:0]\state_reg[5] ;

  v7_bd_axi_chip2chip_0_0_fifo_generator_ramfifo__parameterized4 \grf.rf 
       (.D(D),
        .Q(Q),
        .axi_arready_rs(axi_arready_rs),
        .axi_awready_rs(axi_awready_rs),
        .\axi_lite_rx_gen.axi_lite_rx_data_reg[19] (\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .axi_wready_rs(axi_wready_rs),
        .ch0_valid_out_reg(ch0_valid_out_reg),
        .ch1_valid_out_reg(ch1_valid_out_reg),
        .ch2_valid_out_reg(ch2_valid_out_reg),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .rx_fifo_re(rx_fifo_re),
        .\state_reg[5] (\state_reg[5] ));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1
   (\gic0.gc0.count_reg[0] ,
    aw_ch_fc,
    m_axi_awvalid,
    \m_axi_awaddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[22] ,
    br_fifo_reset,
    p_0_in,
    aw_ch_data_valid,
    m_axi_awready);
  output \gic0.gc0.count_reg[0] ;
  output aw_ch_fc;
  output m_axi_awvalid;
  output [44:0]\m_axi_awaddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input [22:0]\data_out_reg[22] ;
  input br_fifo_reset;
  input p_0_in;
  input aw_ch_data_valid;
  input m_axi_awready;

  wire [22:0]Q;
  wire aw_ch_data_valid;
  wire aw_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \gic0.gc0.count_reg[0] ;
  wire m_aclk;
  wire [44:0]\m_axi_awaddr[31] ;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire p_0_in;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth inst_fifo_gen
       (.Q(Q),
        .aw_ch_data_valid(aw_ch_data_valid),
        .aw_ch_fc(aw_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gic0.gc0.count_reg[0] (\gic0.gc0.count_reg[0] ),
        .m_aclk(m_aclk),
        .\m_axi_awaddr[31] (\m_axi_awaddr[31] ),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .p_0_in(p_0_in));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_36
   (\gic0.gc0.count_reg[7] ,
    ar_ch_fc,
    m_axi_arvalid,
    \m_axi_araddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[22] ,
    br_fifo_reset,
    p_0_in,
    ar_ch_data_valid,
    m_axi_arready);
  output \gic0.gc0.count_reg[7] ;
  output ar_ch_fc;
  output m_axi_arvalid;
  output [44:0]\m_axi_araddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input [22:0]\data_out_reg[22] ;
  input br_fifo_reset;
  input p_0_in;
  input ar_ch_data_valid;
  input m_axi_arready;

  wire [22:0]Q;
  wire ar_ch_data_valid;
  wire ar_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \gic0.gc0.count_reg[7] ;
  wire m_aclk;
  wire [44:0]\m_axi_araddr[31] ;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire p_0_in;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth_37 inst_fifo_gen
       (.Q(Q),
        .ar_ch_data_valid(ar_ch_data_valid),
        .ar_ch_fc(ar_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gic0.gc0.count_reg[7] (\gic0.gc0.count_reg[7] ),
        .m_aclk(m_aclk),
        .\m_axi_araddr[31] (\m_axi_araddr[31] ),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .p_0_in(p_0_in));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1__parameterized0
   (\gic0.gc0.count_reg[8] ,
    wd_ch_fc,
    m_axi_wvalid,
    \m_axi_wdata[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[18] ,
    br_fifo_reset,
    p_0_in,
    wd_ch_data_valid,
    m_axi_wready);
  output \gic0.gc0.count_reg[8] ;
  output wd_ch_fc;
  output m_axi_wvalid;
  output [37:0]\m_axi_wdata[31] ;
  input m_aclk;
  input clk_ph_out;
  input [18:0]Q;
  input [18:0]\data_out_reg[18] ;
  input br_fifo_reset;
  input p_0_in;
  input wd_ch_data_valid;
  input m_axi_wready;

  wire [18:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire \gic0.gc0.count_reg[8] ;
  wire m_aclk;
  wire [37:0]\m_axi_wdata[31] ;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire p_0_in;
  wire wd_ch_data_valid;
  wire wd_ch_fc;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth__parameterized0 inst_fifo_gen
       (.Q(Q),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gic0.gc0.count_reg[8] (\gic0.gc0.count_reg[8] ),
        .m_aclk(m_aclk),
        .\m_axi_wdata[31] (\m_axi_wdata[31] ),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .p_0_in(p_0_in),
        .wd_ch_data_valid(wd_ch_data_valid),
        .wd_ch_fc(wd_ch_fc));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1__parameterized1
   (\gpregsm1.curr_fwft_state_reg[0] ,
    \tdm_data_out_reg[6] ,
    \tdm_data_out_reg[7] ,
    \tdm_data_out_reg[8] ,
    \tdm_data_out_reg[9] ,
    \tdm_data_out_reg[10] ,
    \tdm_data_out_reg[11] ,
    \tdm_data_out_reg[12] ,
    \tdm_data_out_reg[13] ,
    \tdm_data_out_reg[14] ,
    \tdm_data_out_reg[15] ,
    \tdm_data_out_reg[16] ,
    \tdm_data_out_reg[17] ,
    \tdm_data_out_reg[18] ,
    \tdm_data_out_reg[19] ,
    \tdm_data_out_reg[20] ,
    \tdm_data_out_reg[21] ,
    \tdm_data_out_reg[22] ,
    \tdm_data_out_reg[23] ,
    p_12_in,
    m_axi_rready,
    clk_ph_out,
    m_aclk,
    m_axi_rdata,
    DIADI,
    br_fifo_reset,
    p_0_in,
    Q,
    \mux_by_2.data_count_reg[0] ,
    rd_ch_data_ready,
    tx_phy_ready,
    \ctrl_info_reg[0] ,
    m_axi_rvalid);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output \tdm_data_out_reg[6] ;
  output \tdm_data_out_reg[7] ;
  output \tdm_data_out_reg[8] ;
  output \tdm_data_out_reg[9] ;
  output \tdm_data_out_reg[10] ;
  output \tdm_data_out_reg[11] ;
  output \tdm_data_out_reg[12] ;
  output \tdm_data_out_reg[13] ;
  output \tdm_data_out_reg[14] ;
  output \tdm_data_out_reg[15] ;
  output \tdm_data_out_reg[16] ;
  output \tdm_data_out_reg[17] ;
  output \tdm_data_out_reg[18] ;
  output \tdm_data_out_reg[19] ;
  output \tdm_data_out_reg[20] ;
  output \tdm_data_out_reg[21] ;
  output \tdm_data_out_reg[22] ;
  output \tdm_data_out_reg[23] ;
  output p_12_in;
  output m_axi_rready;
  input clk_ph_out;
  input m_aclk;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;
  input br_fifo_reset;
  input p_0_in;
  input [0:0]Q;
  input \mux_by_2.data_count_reg[0] ;
  input rd_ch_data_ready;
  input tx_phy_ready;
  input [0:0]\ctrl_info_reg[0] ;
  input m_axi_rvalid;

  wire [3:0]DIADI;
  wire [0:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [0:0]\ctrl_info_reg[0] ;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire \mux_by_2.data_count_reg[0] ;
  wire p_0_in;
  wire p_12_in;
  wire rd_ch_data_ready;
  wire \tdm_data_out_reg[10] ;
  wire \tdm_data_out_reg[11] ;
  wire \tdm_data_out_reg[12] ;
  wire \tdm_data_out_reg[13] ;
  wire \tdm_data_out_reg[14] ;
  wire \tdm_data_out_reg[15] ;
  wire \tdm_data_out_reg[16] ;
  wire \tdm_data_out_reg[17] ;
  wire \tdm_data_out_reg[18] ;
  wire \tdm_data_out_reg[19] ;
  wire \tdm_data_out_reg[20] ;
  wire \tdm_data_out_reg[21] ;
  wire \tdm_data_out_reg[22] ;
  wire \tdm_data_out_reg[23] ;
  wire \tdm_data_out_reg[6] ;
  wire \tdm_data_out_reg[7] ;
  wire \tdm_data_out_reg[8] ;
  wire \tdm_data_out_reg[9] ;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth__parameterized1 inst_fifo_gen
       (.DIADI(DIADI),
        .Q(Q),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\ctrl_info_reg[0] (\ctrl_info_reg[0] ),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .\mux_by_2.data_count_reg[0] (\mux_by_2.data_count_reg[0] ),
        .p_0_in(p_0_in),
        .p_12_in(p_12_in),
        .rd_ch_data_ready(rd_ch_data_ready),
        .\tdm_data_out_reg[10] (\tdm_data_out_reg[10] ),
        .\tdm_data_out_reg[11] (\tdm_data_out_reg[11] ),
        .\tdm_data_out_reg[12] (\tdm_data_out_reg[12] ),
        .\tdm_data_out_reg[13] (\tdm_data_out_reg[13] ),
        .\tdm_data_out_reg[14] (\tdm_data_out_reg[14] ),
        .\tdm_data_out_reg[15] (\tdm_data_out_reg[15] ),
        .\tdm_data_out_reg[16] (\tdm_data_out_reg[16] ),
        .\tdm_data_out_reg[17] (\tdm_data_out_reg[17] ),
        .\tdm_data_out_reg[18] (\tdm_data_out_reg[18] ),
        .\tdm_data_out_reg[19] (\tdm_data_out_reg[19] ),
        .\tdm_data_out_reg[20] (\tdm_data_out_reg[20] ),
        .\tdm_data_out_reg[21] (\tdm_data_out_reg[21] ),
        .\tdm_data_out_reg[22] (\tdm_data_out_reg[22] ),
        .\tdm_data_out_reg[23] (\tdm_data_out_reg[23] ),
        .\tdm_data_out_reg[6] (\tdm_data_out_reg[6] ),
        .\tdm_data_out_reg[7] (\tdm_data_out_reg[7] ),
        .\tdm_data_out_reg[8] (\tdm_data_out_reg[8] ),
        .\tdm_data_out_reg[9] (\tdm_data_out_reg[9] ),
        .tx_phy_ready(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1__parameterized2
   (\gpregsm1.curr_fwft_state_reg[0] ,
    int_ch1_ready5,
    m_axi_bready,
    br_ch_data,
    m_aclk,
    br_fifo_reset,
    clk_ph_out,
    br_ch_data_ready,
    tx_phy_ready,
    Q,
    m_axi_bvalid,
    bfifo_data);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output int_ch1_ready5;
  output m_axi_bready;
  output [2:0]br_ch_data;
  input m_aclk;
  input br_fifo_reset;
  input clk_ph_out;
  input br_ch_data_ready;
  input tx_phy_ready;
  input [0:0]Q;
  input m_axi_bvalid;
  input [2:0]bfifo_data;

  wire [0:0]Q;
  wire [2:0]bfifo_data;
  wire [2:0]br_ch_data;
  wire br_ch_data_ready;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire int_ch1_ready5;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth__parameterized2 inst_fifo_gen
       (.Q(Q),
        .bfifo_data(bfifo_data),
        .br_ch_data(br_ch_data),
        .br_ch_data_ready(br_ch_data_ready),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .int_ch1_ready5(int_ch1_ready5),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .tx_phy_ready(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1__parameterized3
   (\gpr1.dout_i_reg[0] ,
    prog_full_i,
    \calib_intr_gen.tx_ch0_data_reg[19] ,
    \calib_intr_gen.tx_ch0_data_reg[18] ,
    \calib_intr_gen.tx_ch0_data_reg[17] ,
    \calib_intr_gen.tx_ch0_data_reg[16] ,
    \calib_intr_gen.tx_ch0_data_reg[15] ,
    \calib_intr_gen.tx_ch0_data_reg[14] ,
    \calib_intr_gen.tx_ch0_data_reg[13] ,
    \calib_intr_gen.tx_ch0_data_reg[12] ,
    \calib_intr_gen.tx_ch0_data_reg[11] ,
    \calib_intr_gen.tx_ch0_data_reg[10] ,
    \calib_intr_gen.tx_ch0_data_reg[9] ,
    \calib_intr_gen.tx_ch0_data_reg[8] ,
    \calib_intr_gen.tx_ch0_data_reg[7] ,
    \calib_intr_gen.tx_ch0_data_reg[6] ,
    \calib_intr_gen.tx_ch0_data_reg[5] ,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    \calib_intr_gen.tx_ch0_data_reg[3] ,
    m_axi_lite_aclk,
    fifo_reset,
    clk_ph_out,
    rx_user_reset,
    axi_lite_tx_ready,
    tx_fifo_we,
    Q);
  output \gpr1.dout_i_reg[0] ;
  output prog_full_i;
  output \calib_intr_gen.tx_ch0_data_reg[19] ;
  output \calib_intr_gen.tx_ch0_data_reg[18] ;
  output \calib_intr_gen.tx_ch0_data_reg[17] ;
  output \calib_intr_gen.tx_ch0_data_reg[16] ;
  output \calib_intr_gen.tx_ch0_data_reg[15] ;
  output \calib_intr_gen.tx_ch0_data_reg[14] ;
  output \calib_intr_gen.tx_ch0_data_reg[13] ;
  output \calib_intr_gen.tx_ch0_data_reg[12] ;
  output \calib_intr_gen.tx_ch0_data_reg[11] ;
  output \calib_intr_gen.tx_ch0_data_reg[10] ;
  output \calib_intr_gen.tx_ch0_data_reg[9] ;
  output \calib_intr_gen.tx_ch0_data_reg[8] ;
  output \calib_intr_gen.tx_ch0_data_reg[7] ;
  output \calib_intr_gen.tx_ch0_data_reg[6] ;
  output \calib_intr_gen.tx_ch0_data_reg[5] ;
  output \calib_intr_gen.tx_ch0_data_reg[4] ;
  output [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  input m_axi_lite_aclk;
  input fifo_reset;
  input clk_ph_out;
  input rx_user_reset;
  input axi_lite_tx_ready;
  input tx_fifo_we;
  input [18:0]Q;

  wire [18:0]Q;
  wire axi_lite_tx_ready;
  wire \calib_intr_gen.tx_ch0_data_reg[10] ;
  wire \calib_intr_gen.tx_ch0_data_reg[11] ;
  wire \calib_intr_gen.tx_ch0_data_reg[12] ;
  wire \calib_intr_gen.tx_ch0_data_reg[13] ;
  wire \calib_intr_gen.tx_ch0_data_reg[14] ;
  wire \calib_intr_gen.tx_ch0_data_reg[15] ;
  wire \calib_intr_gen.tx_ch0_data_reg[16] ;
  wire \calib_intr_gen.tx_ch0_data_reg[17] ;
  wire \calib_intr_gen.tx_ch0_data_reg[18] ;
  wire \calib_intr_gen.tx_ch0_data_reg[19] ;
  wire [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire \calib_intr_gen.tx_ch0_data_reg[5] ;
  wire \calib_intr_gen.tx_ch0_data_reg[6] ;
  wire \calib_intr_gen.tx_ch0_data_reg[7] ;
  wire \calib_intr_gen.tx_ch0_data_reg[8] ;
  wire \calib_intr_gen.tx_ch0_data_reg[9] ;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gpr1.dout_i_reg[0] ;
  wire m_axi_lite_aclk;
  wire prog_full_i;
  wire rx_user_reset;
  wire tx_fifo_we;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth__parameterized3 inst_fifo_gen
       (.Q(Q),
        .axi_lite_tx_ready(axi_lite_tx_ready),
        .\calib_intr_gen.tx_ch0_data_reg[10] (\calib_intr_gen.tx_ch0_data_reg[10] ),
        .\calib_intr_gen.tx_ch0_data_reg[11] (\calib_intr_gen.tx_ch0_data_reg[11] ),
        .\calib_intr_gen.tx_ch0_data_reg[12] (\calib_intr_gen.tx_ch0_data_reg[12] ),
        .\calib_intr_gen.tx_ch0_data_reg[13] (\calib_intr_gen.tx_ch0_data_reg[13] ),
        .\calib_intr_gen.tx_ch0_data_reg[14] (\calib_intr_gen.tx_ch0_data_reg[14] ),
        .\calib_intr_gen.tx_ch0_data_reg[15] (\calib_intr_gen.tx_ch0_data_reg[15] ),
        .\calib_intr_gen.tx_ch0_data_reg[16] (\calib_intr_gen.tx_ch0_data_reg[16] ),
        .\calib_intr_gen.tx_ch0_data_reg[17] (\calib_intr_gen.tx_ch0_data_reg[17] ),
        .\calib_intr_gen.tx_ch0_data_reg[18] (\calib_intr_gen.tx_ch0_data_reg[18] ),
        .\calib_intr_gen.tx_ch0_data_reg[19] (\calib_intr_gen.tx_ch0_data_reg[19] ),
        .\calib_intr_gen.tx_ch0_data_reg[3] (\calib_intr_gen.tx_ch0_data_reg[3] ),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\calib_intr_gen.tx_ch0_data_reg[4] ),
        .\calib_intr_gen.tx_ch0_data_reg[5] (\calib_intr_gen.tx_ch0_data_reg[5] ),
        .\calib_intr_gen.tx_ch0_data_reg[6] (\calib_intr_gen.tx_ch0_data_reg[6] ),
        .\calib_intr_gen.tx_ch0_data_reg[7] (\calib_intr_gen.tx_ch0_data_reg[7] ),
        .\calib_intr_gen.tx_ch0_data_reg[8] (\calib_intr_gen.tx_ch0_data_reg[8] ),
        .\calib_intr_gen.tx_ch0_data_reg[9] (\calib_intr_gen.tx_ch0_data_reg[9] ),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpr1.dout_i_reg[0] (\gpr1.dout_i_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .prog_full_i(prog_full_i),
        .rx_user_reset(rx_user_reset),
        .tx_fifo_we(tx_fifo_we));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1__parameterized4
   (\gpregsm1.curr_fwft_state_reg[0] ,
    D,
    Q,
    ch0_valid_out_reg,
    ch1_valid_out_reg,
    ch2_valid_out_reg,
    m_axi_lite_aclk,
    clk_ph_out,
    fifo_reset,
    axi_lite_rx_valid,
    rx_fifo_re,
    \state_reg[5] ,
    axi_wready_rs,
    axi_arready_rs,
    axi_awready_rs,
    \axi_lite_rx_gen.axi_lite_rx_data_reg[19] );
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output [2:0]D;
  output [19:0]Q;
  output ch0_valid_out_reg;
  output ch1_valid_out_reg;
  output ch2_valid_out_reg;
  input m_axi_lite_aclk;
  input clk_ph_out;
  input fifo_reset;
  input axi_lite_rx_valid;
  input rx_fifo_re;
  input [3:0]\state_reg[5] ;
  input axi_wready_rs;
  input axi_arready_rs;
  input axi_awready_rs;
  input [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;

  wire [2:0]D;
  wire [19:0]Q;
  wire axi_arready_rs;
  wire axi_awready_rs;
  wire [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  wire axi_lite_rx_valid;
  wire axi_wready_rs;
  wire ch0_valid_out_reg;
  wire ch1_valid_out_reg;
  wire ch2_valid_out_reg;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_axi_lite_aclk;
  wire rx_fifo_re;
  wire [3:0]\state_reg[5] ;

  v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth__parameterized4 inst_fifo_gen
       (.D(D),
        .Q(Q),
        .axi_arready_rs(axi_arready_rs),
        .axi_awready_rs(axi_awready_rs),
        .\axi_lite_rx_gen.axi_lite_rx_data_reg[19] (\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .axi_wready_rs(axi_wready_rs),
        .ch0_valid_out_reg(ch0_valid_out_reg),
        .ch1_valid_out_reg(ch1_valid_out_reg),
        .ch2_valid_out_reg(ch2_valid_out_reg),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .rx_fifo_re(rx_fifo_re),
        .\state_reg[5] (\state_reg[5] ));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1_synth" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth
   (\gic0.gc0.count_reg[0] ,
    aw_ch_fc,
    m_axi_awvalid,
    \m_axi_awaddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[22] ,
    br_fifo_reset,
    p_0_in,
    aw_ch_data_valid,
    m_axi_awready);
  output \gic0.gc0.count_reg[0] ;
  output aw_ch_fc;
  output m_axi_awvalid;
  output [44:0]\m_axi_awaddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input [22:0]\data_out_reg[22] ;
  input br_fifo_reset;
  input p_0_in;
  input aw_ch_data_valid;
  input m_axi_awready;

  wire [22:0]Q;
  wire aw_ch_data_valid;
  wire aw_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \gic0.gc0.count_reg[0] ;
  wire m_aclk;
  wire [44:0]\m_axi_awaddr[31] ;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire p_0_in;

  v7_bd_axi_chip2chip_0_0_fifo_generator_top \gconvfifo.rf 
       (.Q(Q),
        .aw_ch_data_valid(aw_ch_data_valid),
        .aw_ch_fc(aw_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gic0.gc0.count_reg[0] (\gic0.gc0.count_reg[0] ),
        .m_aclk(m_aclk),
        .\m_axi_awaddr[31] (\m_axi_awaddr[31] ),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .p_0_in(p_0_in));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1_synth" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth_37
   (\gic0.gc0.count_reg[7] ,
    ar_ch_fc,
    m_axi_arvalid,
    \m_axi_araddr[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[22] ,
    br_fifo_reset,
    p_0_in,
    ar_ch_data_valid,
    m_axi_arready);
  output \gic0.gc0.count_reg[7] ;
  output ar_ch_fc;
  output m_axi_arvalid;
  output [44:0]\m_axi_araddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input [22:0]Q;
  input [22:0]\data_out_reg[22] ;
  input br_fifo_reset;
  input p_0_in;
  input ar_ch_data_valid;
  input m_axi_arready;

  wire [22:0]Q;
  wire ar_ch_data_valid;
  wire ar_ch_fc;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire \gic0.gc0.count_reg[7] ;
  wire m_aclk;
  wire [44:0]\m_axi_araddr[31] ;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire p_0_in;

  v7_bd_axi_chip2chip_0_0_fifo_generator_top_38 \gconvfifo.rf 
       (.Q(Q),
        .ar_ch_data_valid(ar_ch_data_valid),
        .ar_ch_fc(ar_ch_fc),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gic0.gc0.count_reg[7] (\gic0.gc0.count_reg[7] ),
        .m_aclk(m_aclk),
        .\m_axi_araddr[31] (\m_axi_araddr[31] ),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .p_0_in(p_0_in));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1_synth" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth__parameterized0
   (\gic0.gc0.count_reg[8] ,
    wd_ch_fc,
    m_axi_wvalid,
    \m_axi_wdata[31] ,
    m_aclk,
    clk_ph_out,
    Q,
    \data_out_reg[18] ,
    br_fifo_reset,
    p_0_in,
    wd_ch_data_valid,
    m_axi_wready);
  output \gic0.gc0.count_reg[8] ;
  output wd_ch_fc;
  output m_axi_wvalid;
  output [37:0]\m_axi_wdata[31] ;
  input m_aclk;
  input clk_ph_out;
  input [18:0]Q;
  input [18:0]\data_out_reg[18] ;
  input br_fifo_reset;
  input p_0_in;
  input wd_ch_data_valid;
  input m_axi_wready;

  wire [18:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire \gic0.gc0.count_reg[8] ;
  wire m_aclk;
  wire [37:0]\m_axi_wdata[31] ;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire p_0_in;
  wire wd_ch_data_valid;
  wire wd_ch_fc;

  v7_bd_axi_chip2chip_0_0_fifo_generator_top__parameterized0 \gconvfifo.rf 
       (.Q(Q),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gic0.gc0.count_reg[8] (\gic0.gc0.count_reg[8] ),
        .m_aclk(m_aclk),
        .\m_axi_wdata[31] (\m_axi_wdata[31] ),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .p_0_in(p_0_in),
        .wd_ch_data_valid(wd_ch_data_valid),
        .wd_ch_fc(wd_ch_fc));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1_synth" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth__parameterized1
   (\gpregsm1.curr_fwft_state_reg[0] ,
    \tdm_data_out_reg[6] ,
    \tdm_data_out_reg[7] ,
    \tdm_data_out_reg[8] ,
    \tdm_data_out_reg[9] ,
    \tdm_data_out_reg[10] ,
    \tdm_data_out_reg[11] ,
    \tdm_data_out_reg[12] ,
    \tdm_data_out_reg[13] ,
    \tdm_data_out_reg[14] ,
    \tdm_data_out_reg[15] ,
    \tdm_data_out_reg[16] ,
    \tdm_data_out_reg[17] ,
    \tdm_data_out_reg[18] ,
    \tdm_data_out_reg[19] ,
    \tdm_data_out_reg[20] ,
    \tdm_data_out_reg[21] ,
    \tdm_data_out_reg[22] ,
    \tdm_data_out_reg[23] ,
    p_12_in,
    m_axi_rready,
    clk_ph_out,
    m_aclk,
    m_axi_rdata,
    DIADI,
    br_fifo_reset,
    p_0_in,
    Q,
    \mux_by_2.data_count_reg[0] ,
    rd_ch_data_ready,
    tx_phy_ready,
    \ctrl_info_reg[0] ,
    m_axi_rvalid);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output \tdm_data_out_reg[6] ;
  output \tdm_data_out_reg[7] ;
  output \tdm_data_out_reg[8] ;
  output \tdm_data_out_reg[9] ;
  output \tdm_data_out_reg[10] ;
  output \tdm_data_out_reg[11] ;
  output \tdm_data_out_reg[12] ;
  output \tdm_data_out_reg[13] ;
  output \tdm_data_out_reg[14] ;
  output \tdm_data_out_reg[15] ;
  output \tdm_data_out_reg[16] ;
  output \tdm_data_out_reg[17] ;
  output \tdm_data_out_reg[18] ;
  output \tdm_data_out_reg[19] ;
  output \tdm_data_out_reg[20] ;
  output \tdm_data_out_reg[21] ;
  output \tdm_data_out_reg[22] ;
  output \tdm_data_out_reg[23] ;
  output p_12_in;
  output m_axi_rready;
  input clk_ph_out;
  input m_aclk;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;
  input br_fifo_reset;
  input p_0_in;
  input [0:0]Q;
  input \mux_by_2.data_count_reg[0] ;
  input rd_ch_data_ready;
  input tx_phy_ready;
  input [0:0]\ctrl_info_reg[0] ;
  input m_axi_rvalid;

  wire [3:0]DIADI;
  wire [0:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [0:0]\ctrl_info_reg[0] ;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire \mux_by_2.data_count_reg[0] ;
  wire p_0_in;
  wire p_12_in;
  wire rd_ch_data_ready;
  wire \tdm_data_out_reg[10] ;
  wire \tdm_data_out_reg[11] ;
  wire \tdm_data_out_reg[12] ;
  wire \tdm_data_out_reg[13] ;
  wire \tdm_data_out_reg[14] ;
  wire \tdm_data_out_reg[15] ;
  wire \tdm_data_out_reg[16] ;
  wire \tdm_data_out_reg[17] ;
  wire \tdm_data_out_reg[18] ;
  wire \tdm_data_out_reg[19] ;
  wire \tdm_data_out_reg[20] ;
  wire \tdm_data_out_reg[21] ;
  wire \tdm_data_out_reg[22] ;
  wire \tdm_data_out_reg[23] ;
  wire \tdm_data_out_reg[6] ;
  wire \tdm_data_out_reg[7] ;
  wire \tdm_data_out_reg[8] ;
  wire \tdm_data_out_reg[9] ;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_fifo_generator_top__parameterized1 \gconvfifo.rf 
       (.DIADI(DIADI),
        .Q(Q),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\ctrl_info_reg[0] (\ctrl_info_reg[0] ),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .\mux_by_2.data_count_reg[0] (\mux_by_2.data_count_reg[0] ),
        .p_0_in(p_0_in),
        .p_12_in(p_12_in),
        .rd_ch_data_ready(rd_ch_data_ready),
        .\tdm_data_out_reg[10] (\tdm_data_out_reg[10] ),
        .\tdm_data_out_reg[11] (\tdm_data_out_reg[11] ),
        .\tdm_data_out_reg[12] (\tdm_data_out_reg[12] ),
        .\tdm_data_out_reg[13] (\tdm_data_out_reg[13] ),
        .\tdm_data_out_reg[14] (\tdm_data_out_reg[14] ),
        .\tdm_data_out_reg[15] (\tdm_data_out_reg[15] ),
        .\tdm_data_out_reg[16] (\tdm_data_out_reg[16] ),
        .\tdm_data_out_reg[17] (\tdm_data_out_reg[17] ),
        .\tdm_data_out_reg[18] (\tdm_data_out_reg[18] ),
        .\tdm_data_out_reg[19] (\tdm_data_out_reg[19] ),
        .\tdm_data_out_reg[20] (\tdm_data_out_reg[20] ),
        .\tdm_data_out_reg[21] (\tdm_data_out_reg[21] ),
        .\tdm_data_out_reg[22] (\tdm_data_out_reg[22] ),
        .\tdm_data_out_reg[23] (\tdm_data_out_reg[23] ),
        .\tdm_data_out_reg[6] (\tdm_data_out_reg[6] ),
        .\tdm_data_out_reg[7] (\tdm_data_out_reg[7] ),
        .\tdm_data_out_reg[8] (\tdm_data_out_reg[8] ),
        .\tdm_data_out_reg[9] (\tdm_data_out_reg[9] ),
        .tx_phy_ready(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1_synth" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth__parameterized2
   (\gpregsm1.curr_fwft_state_reg[0] ,
    int_ch1_ready5,
    m_axi_bready,
    br_ch_data,
    m_aclk,
    br_fifo_reset,
    clk_ph_out,
    br_ch_data_ready,
    tx_phy_ready,
    Q,
    m_axi_bvalid,
    bfifo_data);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output int_ch1_ready5;
  output m_axi_bready;
  output [2:0]br_ch_data;
  input m_aclk;
  input br_fifo_reset;
  input clk_ph_out;
  input br_ch_data_ready;
  input tx_phy_ready;
  input [0:0]Q;
  input m_axi_bvalid;
  input [2:0]bfifo_data;

  wire [0:0]Q;
  wire [2:0]bfifo_data;
  wire [2:0]br_ch_data;
  wire br_ch_data_ready;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire int_ch1_ready5;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_fifo_generator_top__parameterized2 \gconvfifo.rf 
       (.Q(Q),
        .bfifo_data(bfifo_data),
        .br_ch_data(br_ch_data),
        .br_ch_data_ready(br_ch_data_ready),
        .br_fifo_reset(br_fifo_reset),
        .clk_ph_out(clk_ph_out),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .int_ch1_ready5(int_ch1_ready5),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .tx_phy_ready(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1_synth" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth__parameterized3
   (\gpr1.dout_i_reg[0] ,
    prog_full_i,
    \calib_intr_gen.tx_ch0_data_reg[19] ,
    \calib_intr_gen.tx_ch0_data_reg[18] ,
    \calib_intr_gen.tx_ch0_data_reg[17] ,
    \calib_intr_gen.tx_ch0_data_reg[16] ,
    \calib_intr_gen.tx_ch0_data_reg[15] ,
    \calib_intr_gen.tx_ch0_data_reg[14] ,
    \calib_intr_gen.tx_ch0_data_reg[13] ,
    \calib_intr_gen.tx_ch0_data_reg[12] ,
    \calib_intr_gen.tx_ch0_data_reg[11] ,
    \calib_intr_gen.tx_ch0_data_reg[10] ,
    \calib_intr_gen.tx_ch0_data_reg[9] ,
    \calib_intr_gen.tx_ch0_data_reg[8] ,
    \calib_intr_gen.tx_ch0_data_reg[7] ,
    \calib_intr_gen.tx_ch0_data_reg[6] ,
    \calib_intr_gen.tx_ch0_data_reg[5] ,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    \calib_intr_gen.tx_ch0_data_reg[3] ,
    m_axi_lite_aclk,
    fifo_reset,
    clk_ph_out,
    rx_user_reset,
    axi_lite_tx_ready,
    tx_fifo_we,
    Q);
  output \gpr1.dout_i_reg[0] ;
  output prog_full_i;
  output \calib_intr_gen.tx_ch0_data_reg[19] ;
  output \calib_intr_gen.tx_ch0_data_reg[18] ;
  output \calib_intr_gen.tx_ch0_data_reg[17] ;
  output \calib_intr_gen.tx_ch0_data_reg[16] ;
  output \calib_intr_gen.tx_ch0_data_reg[15] ;
  output \calib_intr_gen.tx_ch0_data_reg[14] ;
  output \calib_intr_gen.tx_ch0_data_reg[13] ;
  output \calib_intr_gen.tx_ch0_data_reg[12] ;
  output \calib_intr_gen.tx_ch0_data_reg[11] ;
  output \calib_intr_gen.tx_ch0_data_reg[10] ;
  output \calib_intr_gen.tx_ch0_data_reg[9] ;
  output \calib_intr_gen.tx_ch0_data_reg[8] ;
  output \calib_intr_gen.tx_ch0_data_reg[7] ;
  output \calib_intr_gen.tx_ch0_data_reg[6] ;
  output \calib_intr_gen.tx_ch0_data_reg[5] ;
  output \calib_intr_gen.tx_ch0_data_reg[4] ;
  output [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  input m_axi_lite_aclk;
  input fifo_reset;
  input clk_ph_out;
  input rx_user_reset;
  input axi_lite_tx_ready;
  input tx_fifo_we;
  input [18:0]Q;

  wire [18:0]Q;
  wire axi_lite_tx_ready;
  wire \calib_intr_gen.tx_ch0_data_reg[10] ;
  wire \calib_intr_gen.tx_ch0_data_reg[11] ;
  wire \calib_intr_gen.tx_ch0_data_reg[12] ;
  wire \calib_intr_gen.tx_ch0_data_reg[13] ;
  wire \calib_intr_gen.tx_ch0_data_reg[14] ;
  wire \calib_intr_gen.tx_ch0_data_reg[15] ;
  wire \calib_intr_gen.tx_ch0_data_reg[16] ;
  wire \calib_intr_gen.tx_ch0_data_reg[17] ;
  wire \calib_intr_gen.tx_ch0_data_reg[18] ;
  wire \calib_intr_gen.tx_ch0_data_reg[19] ;
  wire [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire \calib_intr_gen.tx_ch0_data_reg[5] ;
  wire \calib_intr_gen.tx_ch0_data_reg[6] ;
  wire \calib_intr_gen.tx_ch0_data_reg[7] ;
  wire \calib_intr_gen.tx_ch0_data_reg[8] ;
  wire \calib_intr_gen.tx_ch0_data_reg[9] ;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gpr1.dout_i_reg[0] ;
  wire m_axi_lite_aclk;
  wire prog_full_i;
  wire rx_user_reset;
  wire tx_fifo_we;

  v7_bd_axi_chip2chip_0_0_fifo_generator_top__parameterized3 \gconvfifo.rf 
       (.Q(Q),
        .axi_lite_tx_ready(axi_lite_tx_ready),
        .\calib_intr_gen.tx_ch0_data_reg[10] (\calib_intr_gen.tx_ch0_data_reg[10] ),
        .\calib_intr_gen.tx_ch0_data_reg[11] (\calib_intr_gen.tx_ch0_data_reg[11] ),
        .\calib_intr_gen.tx_ch0_data_reg[12] (\calib_intr_gen.tx_ch0_data_reg[12] ),
        .\calib_intr_gen.tx_ch0_data_reg[13] (\calib_intr_gen.tx_ch0_data_reg[13] ),
        .\calib_intr_gen.tx_ch0_data_reg[14] (\calib_intr_gen.tx_ch0_data_reg[14] ),
        .\calib_intr_gen.tx_ch0_data_reg[15] (\calib_intr_gen.tx_ch0_data_reg[15] ),
        .\calib_intr_gen.tx_ch0_data_reg[16] (\calib_intr_gen.tx_ch0_data_reg[16] ),
        .\calib_intr_gen.tx_ch0_data_reg[17] (\calib_intr_gen.tx_ch0_data_reg[17] ),
        .\calib_intr_gen.tx_ch0_data_reg[18] (\calib_intr_gen.tx_ch0_data_reg[18] ),
        .\calib_intr_gen.tx_ch0_data_reg[19] (\calib_intr_gen.tx_ch0_data_reg[19] ),
        .\calib_intr_gen.tx_ch0_data_reg[3] (\calib_intr_gen.tx_ch0_data_reg[3] ),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\calib_intr_gen.tx_ch0_data_reg[4] ),
        .\calib_intr_gen.tx_ch0_data_reg[5] (\calib_intr_gen.tx_ch0_data_reg[5] ),
        .\calib_intr_gen.tx_ch0_data_reg[6] (\calib_intr_gen.tx_ch0_data_reg[6] ),
        .\calib_intr_gen.tx_ch0_data_reg[7] (\calib_intr_gen.tx_ch0_data_reg[7] ),
        .\calib_intr_gen.tx_ch0_data_reg[8] (\calib_intr_gen.tx_ch0_data_reg[8] ),
        .\calib_intr_gen.tx_ch0_data_reg[9] (\calib_intr_gen.tx_ch0_data_reg[9] ),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpr1.dout_i_reg[0] (\gpr1.dout_i_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .prog_full_i(prog_full_i),
        .rx_user_reset(rx_user_reset),
        .tx_fifo_we(tx_fifo_we));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_0_1_synth" *) 
module v7_bd_axi_chip2chip_0_0_fifo_generator_v13_0_1_synth__parameterized4
   (\gpregsm1.curr_fwft_state_reg[0] ,
    D,
    Q,
    ch0_valid_out_reg,
    ch1_valid_out_reg,
    ch2_valid_out_reg,
    m_axi_lite_aclk,
    clk_ph_out,
    fifo_reset,
    axi_lite_rx_valid,
    rx_fifo_re,
    \state_reg[5] ,
    axi_wready_rs,
    axi_arready_rs,
    axi_awready_rs,
    \axi_lite_rx_gen.axi_lite_rx_data_reg[19] );
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output [2:0]D;
  output [19:0]Q;
  output ch0_valid_out_reg;
  output ch1_valid_out_reg;
  output ch2_valid_out_reg;
  input m_axi_lite_aclk;
  input clk_ph_out;
  input fifo_reset;
  input axi_lite_rx_valid;
  input rx_fifo_re;
  input [3:0]\state_reg[5] ;
  input axi_wready_rs;
  input axi_arready_rs;
  input axi_awready_rs;
  input [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;

  wire [2:0]D;
  wire [19:0]Q;
  wire axi_arready_rs;
  wire axi_awready_rs;
  wire [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  wire axi_lite_rx_valid;
  wire axi_wready_rs;
  wire ch0_valid_out_reg;
  wire ch1_valid_out_reg;
  wire ch2_valid_out_reg;
  wire clk_ph_out;
  wire fifo_reset;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_axi_lite_aclk;
  wire rx_fifo_re;
  wire [3:0]\state_reg[5] ;

  v7_bd_axi_chip2chip_0_0_fifo_generator_top__parameterized4 \gconvfifo.rf 
       (.D(D),
        .Q(Q),
        .axi_arready_rs(axi_arready_rs),
        .axi_awready_rs(axi_awready_rs),
        .\axi_lite_rx_gen.axi_lite_rx_data_reg[19] (\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .axi_wready_rs(axi_wready_rs),
        .ch0_valid_out_reg(ch0_valid_out_reg),
        .ch1_valid_out_reg(ch1_valid_out_reg),
        .ch2_valid_out_reg(ch2_valid_out_reg),
        .clk_ph_out(clk_ph_out),
        .fifo_reset(fifo_reset),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .rx_fifo_re(rx_fifo_re),
        .\state_reg[5] (\state_reg[5] ));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module v7_bd_axi_chip2chip_0_0_memory
   (\m_axi_awaddr[31] ,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] ,
    \gpregsm1.curr_fwft_state_reg[1] );
  output [44:0]\m_axi_awaddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1] ;

  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [44:0]doutb;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire m_aclk;
  wire [44:0]\m_axi_awaddr[31] ;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[0]),
        .Q(\m_axi_awaddr[31] [0]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[10]),
        .Q(\m_axi_awaddr[31] [10]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[11]),
        .Q(\m_axi_awaddr[31] [11]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[12]),
        .Q(\m_axi_awaddr[31] [12]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[13]),
        .Q(\m_axi_awaddr[31] [13]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[14]),
        .Q(\m_axi_awaddr[31] [14]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[15]),
        .Q(\m_axi_awaddr[31] [15]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[16]),
        .Q(\m_axi_awaddr[31] [16]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[17]),
        .Q(\m_axi_awaddr[31] [17]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[18]),
        .Q(\m_axi_awaddr[31] [18]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[19]),
        .Q(\m_axi_awaddr[31] [19]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[1]),
        .Q(\m_axi_awaddr[31] [1]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[20]),
        .Q(\m_axi_awaddr[31] [20]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[21]),
        .Q(\m_axi_awaddr[31] [21]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[22]),
        .Q(\m_axi_awaddr[31] [22]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[23]),
        .Q(\m_axi_awaddr[31] [23]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[24]),
        .Q(\m_axi_awaddr[31] [24]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[25]),
        .Q(\m_axi_awaddr[31] [25]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[26]),
        .Q(\m_axi_awaddr[31] [26]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[27]),
        .Q(\m_axi_awaddr[31] [27]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[28]),
        .Q(\m_axi_awaddr[31] [28]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[29]),
        .Q(\m_axi_awaddr[31] [29]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[2]),
        .Q(\m_axi_awaddr[31] [2]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[30]),
        .Q(\m_axi_awaddr[31] [30]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[31]),
        .Q(\m_axi_awaddr[31] [31]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[32] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[32]),
        .Q(\m_axi_awaddr[31] [32]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[33] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[33]),
        .Q(\m_axi_awaddr[31] [33]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[34] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[34]),
        .Q(\m_axi_awaddr[31] [34]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[35] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[35]),
        .Q(\m_axi_awaddr[31] [35]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[36] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[36]),
        .Q(\m_axi_awaddr[31] [36]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[37] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[37]),
        .Q(\m_axi_awaddr[31] [37]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[38] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[38]),
        .Q(\m_axi_awaddr[31] [38]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[39] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[39]),
        .Q(\m_axi_awaddr[31] [39]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[3]),
        .Q(\m_axi_awaddr[31] [3]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[40] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[40]),
        .Q(\m_axi_awaddr[31] [40]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[41] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[41]),
        .Q(\m_axi_awaddr[31] [41]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[42] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[42]),
        .Q(\m_axi_awaddr[31] [42]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[43] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[43]),
        .Q(\m_axi_awaddr[31] [43]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[44] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[44]),
        .Q(\m_axi_awaddr[31] [44]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[4]),
        .Q(\m_axi_awaddr[31] [4]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[5]),
        .Q(\m_axi_awaddr[31] [5]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[6]),
        .Q(\m_axi_awaddr[31] [6]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[7]),
        .Q(\m_axi_awaddr[31] [7]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[8]),
        .Q(\m_axi_awaddr[31] [8]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[9]),
        .Q(\m_axi_awaddr[31] [9]),
        .R(Q));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module v7_bd_axi_chip2chip_0_0_memory_44
   (\m_axi_araddr[31] ,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[7] ,
    \gic0.gc0.count_d2_reg[7] ,
    \mux_by_2.pack_reg0_reg[22] ,
    \data_out_reg[22] ,
    \gpregsm1.curr_fwft_state_reg[1] );
  output [44:0]\m_axi_araddr[31] ;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [7:0]\gic0.gc0.count_d2_reg[7] ;
  input [22:0]\mux_by_2.pack_reg0_reg[22] ;
  input [22:0]\data_out_reg[22] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1] ;

  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [22:0]\data_out_reg[22] ;
  wire [44:0]doutb;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [7:0]\gic0.gc0.count_d2_reg[7] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire m_aclk;
  wire [44:0]\m_axi_araddr[31] ;
  wire [22:0]\mux_by_2.pack_reg0_reg[22] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1_46 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[22] (\data_out_reg[22] ),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[22] (\mux_by_2.pack_reg0_reg[22] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[0]),
        .Q(\m_axi_araddr[31] [0]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[10]),
        .Q(\m_axi_araddr[31] [10]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[11]),
        .Q(\m_axi_araddr[31] [11]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[12]),
        .Q(\m_axi_araddr[31] [12]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[13]),
        .Q(\m_axi_araddr[31] [13]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[14]),
        .Q(\m_axi_araddr[31] [14]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[15]),
        .Q(\m_axi_araddr[31] [15]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[16]),
        .Q(\m_axi_araddr[31] [16]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[17]),
        .Q(\m_axi_araddr[31] [17]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[18]),
        .Q(\m_axi_araddr[31] [18]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[19]),
        .Q(\m_axi_araddr[31] [19]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[1]),
        .Q(\m_axi_araddr[31] [1]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[20]),
        .Q(\m_axi_araddr[31] [20]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[21]),
        .Q(\m_axi_araddr[31] [21]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[22]),
        .Q(\m_axi_araddr[31] [22]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[23]),
        .Q(\m_axi_araddr[31] [23]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[24]),
        .Q(\m_axi_araddr[31] [24]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[25]),
        .Q(\m_axi_araddr[31] [25]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[26]),
        .Q(\m_axi_araddr[31] [26]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[27]),
        .Q(\m_axi_araddr[31] [27]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[28]),
        .Q(\m_axi_araddr[31] [28]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[29]),
        .Q(\m_axi_araddr[31] [29]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[2]),
        .Q(\m_axi_araddr[31] [2]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[30]),
        .Q(\m_axi_araddr[31] [30]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[31]),
        .Q(\m_axi_araddr[31] [31]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[32] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[32]),
        .Q(\m_axi_araddr[31] [32]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[33] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[33]),
        .Q(\m_axi_araddr[31] [33]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[34] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[34]),
        .Q(\m_axi_araddr[31] [34]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[35] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[35]),
        .Q(\m_axi_araddr[31] [35]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[36] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[36]),
        .Q(\m_axi_araddr[31] [36]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[37] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[37]),
        .Q(\m_axi_araddr[31] [37]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[38] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[38]),
        .Q(\m_axi_araddr[31] [38]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[39] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[39]),
        .Q(\m_axi_araddr[31] [39]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[3]),
        .Q(\m_axi_araddr[31] [3]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[40] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[40]),
        .Q(\m_axi_araddr[31] [40]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[41] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[41]),
        .Q(\m_axi_araddr[31] [41]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[42] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[42]),
        .Q(\m_axi_araddr[31] [42]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[43] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[43]),
        .Q(\m_axi_araddr[31] [43]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[44] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[44]),
        .Q(\m_axi_araddr[31] [44]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[4]),
        .Q(\m_axi_araddr[31] [4]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[5]),
        .Q(\m_axi_araddr[31] [5]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[6]),
        .Q(\m_axi_araddr[31] [6]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[7]),
        .Q(\m_axi_araddr[31] [7]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[8]),
        .Q(\m_axi_araddr[31] [8]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[9]),
        .Q(\m_axi_araddr[31] [9]),
        .R(Q));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module v7_bd_axi_chip2chip_0_0_memory__parameterized0
   (\m_axi_wdata[31] ,
    m_aclk,
    clk_ph_out,
    tmp_ram_rd_en,
    E,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    \mux_by_2.pack_reg0_reg[18] ,
    \data_out_reg[18] ,
    \gpregsm1.curr_fwft_state_reg[1] );
  output [37:0]\m_axi_wdata[31] ;
  input m_aclk;
  input clk_ph_out;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [18:0]\mux_by_2.pack_reg0_reg[18] ;
  input [18:0]\data_out_reg[18] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1] ;

  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [18:0]\data_out_reg[18] ;
  wire [37:0]doutb;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire m_aclk;
  wire [37:0]\m_axi_wdata[31] ;
  wire [18:0]\mux_by_2.pack_reg0_reg[18] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1__parameterized1 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[18] (\data_out_reg[18] ),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .\mux_by_2.pack_reg0_reg[18] (\mux_by_2.pack_reg0_reg[18] ),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[0]),
        .Q(\m_axi_wdata[31] [0]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[10]),
        .Q(\m_axi_wdata[31] [10]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[11]),
        .Q(\m_axi_wdata[31] [11]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[12]),
        .Q(\m_axi_wdata[31] [12]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[13]),
        .Q(\m_axi_wdata[31] [13]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[14]),
        .Q(\m_axi_wdata[31] [14]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[15]),
        .Q(\m_axi_wdata[31] [15]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[16]),
        .Q(\m_axi_wdata[31] [16]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[17]),
        .Q(\m_axi_wdata[31] [17]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[18]),
        .Q(\m_axi_wdata[31] [18]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[19]),
        .Q(\m_axi_wdata[31] [19]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[1]),
        .Q(\m_axi_wdata[31] [1]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[20]),
        .Q(\m_axi_wdata[31] [20]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[21]),
        .Q(\m_axi_wdata[31] [21]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[22]),
        .Q(\m_axi_wdata[31] [22]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[23]),
        .Q(\m_axi_wdata[31] [23]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[24]),
        .Q(\m_axi_wdata[31] [24]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[25]),
        .Q(\m_axi_wdata[31] [25]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[26]),
        .Q(\m_axi_wdata[31] [26]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[27]),
        .Q(\m_axi_wdata[31] [27]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[28]),
        .Q(\m_axi_wdata[31] [28]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[29]),
        .Q(\m_axi_wdata[31] [29]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[2]),
        .Q(\m_axi_wdata[31] [2]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[30]),
        .Q(\m_axi_wdata[31] [30]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[31]),
        .Q(\m_axi_wdata[31] [31]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[32] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[32]),
        .Q(\m_axi_wdata[31] [32]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[33] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[33]),
        .Q(\m_axi_wdata[31] [33]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[34] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[34]),
        .Q(\m_axi_wdata[31] [34]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[35] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[35]),
        .Q(\m_axi_wdata[31] [35]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[36] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[36]),
        .Q(\m_axi_wdata[31] [36]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[37] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[37]),
        .Q(\m_axi_wdata[31] [37]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[3]),
        .Q(\m_axi_wdata[31] [3]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[4]),
        .Q(\m_axi_wdata[31] [4]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[5]),
        .Q(\m_axi_wdata[31] [5]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[6]),
        .Q(\m_axi_wdata[31] [6]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[7]),
        .Q(\m_axi_wdata[31] [7]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[8]),
        .Q(\m_axi_wdata[31] [8]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(m_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[9]),
        .Q(\m_axi_wdata[31] [9]),
        .R(Q));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module v7_bd_axi_chip2chip_0_0_memory__parameterized1
   (\tdm_data_out_reg[6] ,
    \tdm_data_out_reg[7] ,
    \tdm_data_out_reg[8] ,
    \tdm_data_out_reg[9] ,
    \tdm_data_out_reg[10] ,
    \tdm_data_out_reg[11] ,
    \tdm_data_out_reg[12] ,
    \tdm_data_out_reg[13] ,
    \tdm_data_out_reg[14] ,
    \tdm_data_out_reg[15] ,
    \tdm_data_out_reg[16] ,
    \tdm_data_out_reg[17] ,
    \tdm_data_out_reg[18] ,
    \tdm_data_out_reg[19] ,
    \tdm_data_out_reg[20] ,
    \tdm_data_out_reg[21] ,
    \tdm_data_out_reg[22] ,
    \tdm_data_out_reg[23] ,
    clk_ph_out,
    m_aclk,
    tmp_ram_rd_en,
    WEBWE,
    Q,
    \gc0.count_d1_reg[8] ,
    \gic0.gc0.count_d2_reg[8] ,
    m_axi_rdata,
    DIADI,
    p_0_in,
    \slot_select_reg[1] ,
    \mux_by_2.data_count_reg[0] ,
    E);
  output \tdm_data_out_reg[6] ;
  output \tdm_data_out_reg[7] ;
  output \tdm_data_out_reg[8] ;
  output \tdm_data_out_reg[9] ;
  output \tdm_data_out_reg[10] ;
  output \tdm_data_out_reg[11] ;
  output \tdm_data_out_reg[12] ;
  output \tdm_data_out_reg[13] ;
  output \tdm_data_out_reg[14] ;
  output \tdm_data_out_reg[15] ;
  output \tdm_data_out_reg[16] ;
  output \tdm_data_out_reg[17] ;
  output \tdm_data_out_reg[18] ;
  output \tdm_data_out_reg[19] ;
  output \tdm_data_out_reg[20] ;
  output \tdm_data_out_reg[21] ;
  output \tdm_data_out_reg[22] ;
  output \tdm_data_out_reg[23] ;
  input clk_ph_out;
  input m_aclk;
  input tmp_ram_rd_en;
  input [0:0]WEBWE;
  input [0:0]Q;
  input [8:0]\gc0.count_d1_reg[8] ;
  input [8:0]\gic0.gc0.count_d2_reg[8] ;
  input [31:0]m_axi_rdata;
  input [3:0]DIADI;
  input p_0_in;
  input [0:0]\slot_select_reg[1] ;
  input \mux_by_2.data_count_reg[0] ;
  input [0:0]E;

  wire [3:0]DIADI;
  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]WEBWE;
  wire clk_ph_out;
  wire [35:0]doutb;
  wire [8:0]\gc0.count_d1_reg[8] ;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire [31:0]m_axi_rdata;
  wire \mux_by_2.data_count_reg[0] ;
  wire p_0_in;
  wire [0:0]\slot_select_reg[1] ;
  wire \tdm_data_out_reg[10] ;
  wire \tdm_data_out_reg[11] ;
  wire \tdm_data_out_reg[12] ;
  wire \tdm_data_out_reg[13] ;
  wire \tdm_data_out_reg[14] ;
  wire \tdm_data_out_reg[15] ;
  wire \tdm_data_out_reg[16] ;
  wire \tdm_data_out_reg[17] ;
  wire \tdm_data_out_reg[18] ;
  wire \tdm_data_out_reg[19] ;
  wire \tdm_data_out_reg[20] ;
  wire \tdm_data_out_reg[21] ;
  wire \tdm_data_out_reg[22] ;
  wire \tdm_data_out_reg[23] ;
  wire \tdm_data_out_reg[6] ;
  wire \tdm_data_out_reg[7] ;
  wire \tdm_data_out_reg[8] ;
  wire \tdm_data_out_reg[9] ;
  wire tmp_ram_rd_en;
  wire [35:0]unpack_data_in;

  v7_bd_axi_chip2chip_0_0_blk_mem_gen_v8_3_1__parameterized3 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .DIADI(DIADI),
        .Q(Q),
        .WEBWE(WEBWE),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .\gic0.gc0.count_d2_reg[8] (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .m_axi_rdata(m_axi_rdata),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[0]),
        .Q(unpack_data_in[0]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[10]),
        .Q(unpack_data_in[10]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[11]),
        .Q(unpack_data_in[11]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[12]),
        .Q(unpack_data_in[12]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[13]),
        .Q(unpack_data_in[13]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[14]),
        .Q(unpack_data_in[14]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[15]),
        .Q(unpack_data_in[15]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[16]),
        .Q(unpack_data_in[16]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[17]),
        .Q(unpack_data_in[17]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[18]),
        .Q(unpack_data_in[18]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[19]),
        .Q(unpack_data_in[19]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[1]),
        .Q(unpack_data_in[1]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[20]),
        .Q(unpack_data_in[20]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[21]),
        .Q(unpack_data_in[21]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[22]),
        .Q(unpack_data_in[22]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[23]),
        .Q(unpack_data_in[23]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[24]),
        .Q(unpack_data_in[24]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[25]),
        .Q(unpack_data_in[25]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[26]),
        .Q(unpack_data_in[26]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[27]),
        .Q(unpack_data_in[27]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[28]),
        .Q(unpack_data_in[28]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[29]),
        .Q(unpack_data_in[29]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[2]),
        .Q(unpack_data_in[2]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[30]),
        .Q(unpack_data_in[30]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[31]),
        .Q(unpack_data_in[31]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[32] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[32]),
        .Q(unpack_data_in[32]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[33] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[33]),
        .Q(unpack_data_in[33]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[34] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[34]),
        .Q(unpack_data_in[34]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[35] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[35]),
        .Q(unpack_data_in[35]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[3]),
        .Q(unpack_data_in[3]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[4]),
        .Q(unpack_data_in[4]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[5]),
        .Q(unpack_data_in[5]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[6]),
        .Q(unpack_data_in[6]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[7]),
        .Q(unpack_data_in[7]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[8]),
        .Q(unpack_data_in[8]),
        .R(Q));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(clk_ph_out),
        .CE(E),
        .D(doutb[9]),
        .Q(unpack_data_in[9]),
        .R(Q));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[10]_i_2 
       (.I0(unpack_data_in[22]),
        .I1(p_0_in),
        .I2(unpack_data_in[4]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[10] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[11]_i_2 
       (.I0(unpack_data_in[23]),
        .I1(p_0_in),
        .I2(unpack_data_in[5]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[11] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[12]_i_2 
       (.I0(unpack_data_in[24]),
        .I1(p_0_in),
        .I2(unpack_data_in[6]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[12] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[13]_i_2 
       (.I0(unpack_data_in[25]),
        .I1(p_0_in),
        .I2(unpack_data_in[7]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[13] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[14]_i_2 
       (.I0(unpack_data_in[26]),
        .I1(p_0_in),
        .I2(unpack_data_in[8]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[14] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[15]_i_2 
       (.I0(unpack_data_in[27]),
        .I1(p_0_in),
        .I2(unpack_data_in[9]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[15] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[16]_i_2 
       (.I0(unpack_data_in[28]),
        .I1(p_0_in),
        .I2(unpack_data_in[10]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[16] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[17]_i_2 
       (.I0(unpack_data_in[29]),
        .I1(p_0_in),
        .I2(unpack_data_in[11]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[17] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[18]_i_2 
       (.I0(unpack_data_in[30]),
        .I1(p_0_in),
        .I2(unpack_data_in[12]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[18] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[19]_i_2 
       (.I0(unpack_data_in[31]),
        .I1(p_0_in),
        .I2(unpack_data_in[13]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[19] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[20]_i_2 
       (.I0(unpack_data_in[32]),
        .I1(p_0_in),
        .I2(unpack_data_in[14]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[20] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[21]_i_2 
       (.I0(unpack_data_in[33]),
        .I1(p_0_in),
        .I2(unpack_data_in[15]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[21] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[22]_i_2 
       (.I0(unpack_data_in[34]),
        .I1(p_0_in),
        .I2(unpack_data_in[16]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[22] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[23]_i_2 
       (.I0(unpack_data_in[35]),
        .I1(p_0_in),
        .I2(unpack_data_in[17]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[23] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[6]_i_2 
       (.I0(unpack_data_in[18]),
        .I1(p_0_in),
        .I2(unpack_data_in[0]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[6] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[7]_i_2 
       (.I0(unpack_data_in[19]),
        .I1(p_0_in),
        .I2(unpack_data_in[1]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[7] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[8]_i_2 
       (.I0(unpack_data_in[20]),
        .I1(p_0_in),
        .I2(unpack_data_in[2]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[8] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \tdm_data_out[9]_i_2 
       (.I0(unpack_data_in[21]),
        .I1(p_0_in),
        .I2(unpack_data_in[3]),
        .I3(\slot_select_reg[1] ),
        .I4(\mux_by_2.data_count_reg[0] ),
        .O(\tdm_data_out_reg[9] ));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module v7_bd_axi_chip2chip_0_0_memory__parameterized2
   (br_ch_data,
    m_aclk,
    bfifo_data,
    ram_full_fb_i_reg,
    \gc0.count_d1_reg[7] ,
    Q,
    \gic0.gc0.count_d2_reg[7] ,
    \gic0.gc0.count_d2_reg[6] ,
    ram_full_fb_i_reg_0,
    p_6_out,
    p_2_out,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ,
    br_ch_data_ready,
    empty_fwft_i_reg,
    \gpregsm1.curr_fwft_state_reg[1] );
  output [2:0]br_ch_data;
  input m_aclk;
  input [2:0]bfifo_data;
  input ram_full_fb_i_reg;
  input [7:0]\gc0.count_d1_reg[7] ;
  input [5:0]Q;
  input \gic0.gc0.count_d2_reg[7] ;
  input \gic0.gc0.count_d2_reg[6] ;
  input ram_full_fb_i_reg_0;
  input p_6_out;
  input p_2_out;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;
  input br_ch_data_ready;
  input empty_fwft_i_reg;
  input [1:0]\gpregsm1.curr_fwft_state_reg[1] ;

  wire [5:0]Q;
  wire [2:0]bfifo_data;
  wire [2:0]br_ch_data;
  wire br_ch_data_ready;
  wire clk_ph_out;
  wire empty_fwft_i_reg;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire \gdm.dm_n_0 ;
  wire \gdm.dm_n_1 ;
  wire \gdm.dm_n_2 ;
  wire \gic0.gc0.count_d2_reg[6] ;
  wire \gic0.gc0.count_d2_reg[7] ;
  wire \goreg_dm.dout_i[0]_i_1_n_0 ;
  wire \goreg_dm.dout_i[1]_i_1_n_0 ;
  wire \goreg_dm.dout_i[2]_i_1_n_0 ;
  wire [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;
  wire p_2_out;
  wire p_6_out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;

  v7_bd_axi_chip2chip_0_0_dmem \gdm.dm 
       (.Q(Q),
        .bfifo_data(bfifo_data),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[7] (\gc0.count_d1_reg[7] ),
        .\gic0.gc0.count_d2_reg[6] (\gic0.gc0.count_d2_reg[6] ),
        .\gic0.gc0.count_d2_reg[7] (\gic0.gc0.count_d2_reg[7] ),
        .\gpr1.dout_i_reg[0]_0 (\gdm.dm_n_0 ),
        .\gpr1.dout_i_reg[1]_0 (\gdm.dm_n_1 ),
        .\gpr1.dout_i_reg[2]_0 (\gdm.dm_n_2 ),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .p_2_out(p_2_out),
        .p_6_out(p_6_out),
        .ram_full_fb_i_reg(ram_full_fb_i_reg),
        .ram_full_fb_i_reg_0(ram_full_fb_i_reg_0));
  LUT6 #(
    .INIT(64'hFBFFAAFF0800AA00)) 
    \goreg_dm.dout_i[0]_i_1 
       (.I0(\gdm.dm_n_0 ),
        .I1(br_ch_data_ready),
        .I2(empty_fwft_i_reg),
        .I3(\gpregsm1.curr_fwft_state_reg[1] [1]),
        .I4(\gpregsm1.curr_fwft_state_reg[1] [0]),
        .I5(br_ch_data[0]),
        .O(\goreg_dm.dout_i[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFAAFF0800AA00)) 
    \goreg_dm.dout_i[1]_i_1 
       (.I0(\gdm.dm_n_1 ),
        .I1(br_ch_data_ready),
        .I2(empty_fwft_i_reg),
        .I3(\gpregsm1.curr_fwft_state_reg[1] [1]),
        .I4(\gpregsm1.curr_fwft_state_reg[1] [0]),
        .I5(br_ch_data[1]),
        .O(\goreg_dm.dout_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFAAFF0800AA00)) 
    \goreg_dm.dout_i[2]_i_1 
       (.I0(\gdm.dm_n_2 ),
        .I1(br_ch_data_ready),
        .I2(empty_fwft_i_reg),
        .I3(\gpregsm1.curr_fwft_state_reg[1] [1]),
        .I4(\gpregsm1.curr_fwft_state_reg[1] [0]),
        .I5(br_ch_data[2]),
        .O(\goreg_dm.dout_i[2]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\goreg_dm.dout_i[0]_i_1_n_0 ),
        .Q(br_ch_data[0]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\goreg_dm.dout_i[1]_i_1_n_0 ),
        .Q(br_ch_data[1]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\goreg_dm.dout_i[2]_i_1_n_0 ),
        .Q(br_ch_data[2]));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module v7_bd_axi_chip2chip_0_0_memory__parameterized3
   (\calib_intr_gen.tx_ch0_data_reg[19] ,
    \calib_intr_gen.tx_ch0_data_reg[18] ,
    \calib_intr_gen.tx_ch0_data_reg[17] ,
    \calib_intr_gen.tx_ch0_data_reg[16] ,
    \calib_intr_gen.tx_ch0_data_reg[15] ,
    \calib_intr_gen.tx_ch0_data_reg[14] ,
    \calib_intr_gen.tx_ch0_data_reg[13] ,
    \calib_intr_gen.tx_ch0_data_reg[12] ,
    \calib_intr_gen.tx_ch0_data_reg[11] ,
    \calib_intr_gen.tx_ch0_data_reg[10] ,
    \calib_intr_gen.tx_ch0_data_reg[9] ,
    \calib_intr_gen.tx_ch0_data_reg[8] ,
    \calib_intr_gen.tx_ch0_data_reg[7] ,
    \calib_intr_gen.tx_ch0_data_reg[6] ,
    \calib_intr_gen.tx_ch0_data_reg[5] ,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    \calib_intr_gen.tx_ch0_data_reg[3] ,
    rx_user_reset,
    m_axi_lite_aclk,
    wr_pntr_plus1_pad,
    Q,
    \gc0.count_d1_reg[3] ,
    \gic0.gc0.count_d2_reg[3] ,
    E,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ,
    \calib_intr_gen.axi_lite_tx_ready_reg );
  output \calib_intr_gen.tx_ch0_data_reg[19] ;
  output \calib_intr_gen.tx_ch0_data_reg[18] ;
  output \calib_intr_gen.tx_ch0_data_reg[17] ;
  output \calib_intr_gen.tx_ch0_data_reg[16] ;
  output \calib_intr_gen.tx_ch0_data_reg[15] ;
  output \calib_intr_gen.tx_ch0_data_reg[14] ;
  output \calib_intr_gen.tx_ch0_data_reg[13] ;
  output \calib_intr_gen.tx_ch0_data_reg[12] ;
  output \calib_intr_gen.tx_ch0_data_reg[11] ;
  output \calib_intr_gen.tx_ch0_data_reg[10] ;
  output \calib_intr_gen.tx_ch0_data_reg[9] ;
  output \calib_intr_gen.tx_ch0_data_reg[8] ;
  output \calib_intr_gen.tx_ch0_data_reg[7] ;
  output \calib_intr_gen.tx_ch0_data_reg[6] ;
  output \calib_intr_gen.tx_ch0_data_reg[5] ;
  output \calib_intr_gen.tx_ch0_data_reg[4] ;
  output [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  input rx_user_reset;
  input m_axi_lite_aclk;
  input [0:0]wr_pntr_plus1_pad;
  input [18:0]Q;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]\gic0.gc0.count_d2_reg[3] ;
  input [0:0]E;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;
  input [0:0]\calib_intr_gen.axi_lite_tx_ready_reg ;

  wire [0:0]E;
  wire [18:0]Q;
  wire [19:4]axi_lite_tx_data;
  wire [0:0]\calib_intr_gen.axi_lite_tx_ready_reg ;
  wire \calib_intr_gen.tx_ch0_data_reg[10] ;
  wire \calib_intr_gen.tx_ch0_data_reg[11] ;
  wire \calib_intr_gen.tx_ch0_data_reg[12] ;
  wire \calib_intr_gen.tx_ch0_data_reg[13] ;
  wire \calib_intr_gen.tx_ch0_data_reg[14] ;
  wire \calib_intr_gen.tx_ch0_data_reg[15] ;
  wire \calib_intr_gen.tx_ch0_data_reg[16] ;
  wire \calib_intr_gen.tx_ch0_data_reg[17] ;
  wire \calib_intr_gen.tx_ch0_data_reg[18] ;
  wire \calib_intr_gen.tx_ch0_data_reg[19] ;
  wire [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire \calib_intr_gen.tx_ch0_data_reg[5] ;
  wire \calib_intr_gen.tx_ch0_data_reg[6] ;
  wire \calib_intr_gen.tx_ch0_data_reg[7] ;
  wire \calib_intr_gen.tx_ch0_data_reg[8] ;
  wire \calib_intr_gen.tx_ch0_data_reg[9] ;
  wire clk_ph_out;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire \gdm.dm_n_0 ;
  wire \gdm.dm_n_1 ;
  wire \gdm.dm_n_10 ;
  wire \gdm.dm_n_11 ;
  wire \gdm.dm_n_12 ;
  wire \gdm.dm_n_13 ;
  wire \gdm.dm_n_14 ;
  wire \gdm.dm_n_15 ;
  wire \gdm.dm_n_16 ;
  wire \gdm.dm_n_17 ;
  wire \gdm.dm_n_18 ;
  wire \gdm.dm_n_19 ;
  wire \gdm.dm_n_2 ;
  wire \gdm.dm_n_3 ;
  wire \gdm.dm_n_4 ;
  wire \gdm.dm_n_5 ;
  wire \gdm.dm_n_6 ;
  wire \gdm.dm_n_7 ;
  wire \gdm.dm_n_8 ;
  wire \gdm.dm_n_9 ;
  wire [3:0]\gic0.gc0.count_d2_reg[3] ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;
  wire rx_user_reset;
  wire [0:0]wr_pntr_plus1_pad;

  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[10]_i_1 
       (.I0(axi_lite_tx_data[10]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[10] ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[11]_i_1 
       (.I0(axi_lite_tx_data[11]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[11] ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[12]_i_1 
       (.I0(axi_lite_tx_data[12]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[12] ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[13]_i_1 
       (.I0(axi_lite_tx_data[13]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[13] ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[14]_i_1 
       (.I0(axi_lite_tx_data[14]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[14] ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[15]_i_1 
       (.I0(axi_lite_tx_data[15]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[15] ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[16]_i_1 
       (.I0(axi_lite_tx_data[16]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[16] ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[17]_i_1 
       (.I0(axi_lite_tx_data[17]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[17] ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[18]_i_1 
       (.I0(axi_lite_tx_data[18]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[18] ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[19]_i_2 
       (.I0(axi_lite_tx_data[19]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[19] ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[4]_i_1 
       (.I0(axi_lite_tx_data[4]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[4] ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[5]_i_1 
       (.I0(axi_lite_tx_data[5]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[5] ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[6]_i_1 
       (.I0(axi_lite_tx_data[6]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[6] ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[7]_i_1 
       (.I0(axi_lite_tx_data[7]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[7] ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[8]_i_1 
       (.I0(axi_lite_tx_data[8]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[9]_i_1 
       (.I0(axi_lite_tx_data[9]),
        .I1(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data_reg[9] ));
  v7_bd_axi_chip2chip_0_0_dmem__parameterized0 \gdm.dm 
       (.E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .\gic0.gc0.count_d2_reg[3] (\gic0.gc0.count_d2_reg[3] ),
        .\goreg_dm.dout_i_reg[19] ({\gdm.dm_n_0 ,\gdm.dm_n_1 ,\gdm.dm_n_2 ,\gdm.dm_n_3 ,\gdm.dm_n_4 ,\gdm.dm_n_5 ,\gdm.dm_n_6 ,\gdm.dm_n_7 ,\gdm.dm_n_8 ,\gdm.dm_n_9 ,\gdm.dm_n_10 ,\gdm.dm_n_11 ,\gdm.dm_n_12 ,\gdm.dm_n_13 ,\gdm.dm_n_14 ,\gdm.dm_n_15 ,\gdm.dm_n_16 ,\gdm.dm_n_17 ,\gdm.dm_n_18 ,\gdm.dm_n_19 }),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .wr_pntr_plus1_pad(wr_pntr_plus1_pad));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[0] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_19 ),
        .Q(\calib_intr_gen.tx_ch0_data_reg[3] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[10] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_9 ),
        .Q(axi_lite_tx_data[10]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[11] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_8 ),
        .Q(axi_lite_tx_data[11]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[12] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_7 ),
        .Q(axi_lite_tx_data[12]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[13] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_6 ),
        .Q(axi_lite_tx_data[13]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[14] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_5 ),
        .Q(axi_lite_tx_data[14]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[15] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_4 ),
        .Q(axi_lite_tx_data[15]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[16] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_3 ),
        .Q(axi_lite_tx_data[16]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[17] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_2 ),
        .Q(axi_lite_tx_data[17]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[18] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_1 ),
        .Q(axi_lite_tx_data[18]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[19] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_0 ),
        .Q(axi_lite_tx_data[19]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[1] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_18 ),
        .Q(\calib_intr_gen.tx_ch0_data_reg[3] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[2] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_17 ),
        .Q(\calib_intr_gen.tx_ch0_data_reg[3] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[3] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_16 ),
        .Q(\calib_intr_gen.tx_ch0_data_reg[3] [3]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[4] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_15 ),
        .Q(axi_lite_tx_data[4]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[5] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_14 ),
        .Q(axi_lite_tx_data[5]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[6] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_13 ),
        .Q(axi_lite_tx_data[6]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[7] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_12 ),
        .Q(axi_lite_tx_data[7]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[8] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_11 ),
        .Q(axi_lite_tx_data[8]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[9] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.axi_lite_tx_ready_reg ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_10 ),
        .Q(axi_lite_tx_data[9]));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module v7_bd_axi_chip2chip_0_0_memory__parameterized4
   (D,
    Q,
    ch0_valid_out_reg,
    ch1_valid_out_reg,
    ch2_valid_out_reg,
    empty_fwft_i_reg,
    \state_reg[5] ,
    axi_wready_rs,
    axi_arready_rs,
    axi_awready_rs,
    clk_ph_out,
    E,
    \axi_lite_rx_gen.axi_lite_rx_data_reg[19] ,
    \gc0.count_d1_reg[3] ,
    \gic0.gc0.count_d2_reg[3] ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ,
    \gpregsm1.curr_fwft_state_reg[1]_0 );
  output [2:0]D;
  output [19:0]Q;
  output ch0_valid_out_reg;
  output ch1_valid_out_reg;
  output ch2_valid_out_reg;
  input empty_fwft_i_reg;
  input [3:0]\state_reg[5] ;
  input axi_wready_rs;
  input axi_arready_rs;
  input axi_awready_rs;
  input clk_ph_out;
  input [0:0]E;
  input [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  input [3:0]\gc0.count_d1_reg[3] ;
  input [3:0]\gic0.gc0.count_d2_reg[3] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1]_0 ;

  wire [2:0]D;
  wire [0:0]E;
  wire [19:0]Q;
  wire axi_arready_rs;
  wire axi_awready_rs;
  wire [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ;
  wire axi_wready_rs;
  wire ch0_valid_out_reg;
  wire ch1_valid_out_reg;
  wire ch2_valid_out_reg;
  wire clk_ph_out;
  wire empty_fwft_i_reg;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire \gdm.dm_n_0 ;
  wire \gdm.dm_n_1 ;
  wire \gdm.dm_n_10 ;
  wire \gdm.dm_n_11 ;
  wire \gdm.dm_n_12 ;
  wire \gdm.dm_n_13 ;
  wire \gdm.dm_n_14 ;
  wire \gdm.dm_n_15 ;
  wire \gdm.dm_n_16 ;
  wire \gdm.dm_n_17 ;
  wire \gdm.dm_n_18 ;
  wire \gdm.dm_n_19 ;
  wire \gdm.dm_n_2 ;
  wire \gdm.dm_n_3 ;
  wire \gdm.dm_n_4 ;
  wire \gdm.dm_n_5 ;
  wire \gdm.dm_n_6 ;
  wire \gdm.dm_n_7 ;
  wire \gdm.dm_n_8 ;
  wire \gdm.dm_n_9 ;
  wire [3:0]\gic0.gc0.count_d2_reg[3] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ;
  wire [3:0]\state_reg[5] ;

  LUT6 #(
    .INIT(64'h0000010000FF0100)) 
    ch0_valid_out_i_2
       (.I0(Q[19]),
        .I1(empty_fwft_i_reg),
        .I2(Q[18]),
        .I3(\state_reg[5] [0]),
        .I4(\state_reg[5] [1]),
        .I5(axi_awready_rs),
        .O(ch0_valid_out_reg));
  LUT6 #(
    .INIT(64'h0000100000FF1000)) 
    ch1_valid_out_i_2
       (.I0(empty_fwft_i_reg),
        .I1(Q[19]),
        .I2(Q[18]),
        .I3(\state_reg[5] [0]),
        .I4(\state_reg[5] [2]),
        .I5(axi_arready_rs),
        .O(ch1_valid_out_reg));
  LUT6 #(
    .INIT(64'h0000100000FF1000)) 
    ch2_valid_out_i_2
       (.I0(empty_fwft_i_reg),
        .I1(Q[18]),
        .I2(Q[19]),
        .I3(\state_reg[5] [0]),
        .I4(\state_reg[5] [3]),
        .I5(axi_wready_rs),
        .O(ch2_valid_out_reg));
  v7_bd_axi_chip2chip_0_0_dmem__parameterized1 \gdm.dm 
       (.E(E),
        .Q({\gdm.dm_n_0 ,\gdm.dm_n_1 ,\gdm.dm_n_2 ,\gdm.dm_n_3 ,\gdm.dm_n_4 ,\gdm.dm_n_5 ,\gdm.dm_n_6 ,\gdm.dm_n_7 ,\gdm.dm_n_8 ,\gdm.dm_n_9 ,\gdm.dm_n_10 ,\gdm.dm_n_11 ,\gdm.dm_n_12 ,\gdm.dm_n_13 ,\gdm.dm_n_14 ,\gdm.dm_n_15 ,\gdm.dm_n_16 ,\gdm.dm_n_17 ,\gdm.dm_n_18 ,\gdm.dm_n_19 }),
        .\axi_lite_rx_gen.axi_lite_rx_data_reg[19] (\axi_lite_rx_gen.axi_lite_rx_data_reg[19] ),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_d1_reg[3] (\gc0.count_d1_reg[3] ),
        .\gic0.gc0.count_d2_reg[3] (\gic0.gc0.count_d2_reg[3] ),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_19 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[10] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_9 ),
        .Q(Q[10]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[11] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_8 ),
        .Q(Q[11]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[12] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_7 ),
        .Q(Q[12]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[13] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_6 ),
        .Q(Q[13]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[14] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_5 ),
        .Q(Q[14]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[15] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_4 ),
        .Q(Q[15]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[16] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_3 ),
        .Q(Q[16]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[17] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_2 ),
        .Q(Q[17]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[18] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_1 ),
        .Q(Q[18]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[19] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_0 ),
        .Q(Q[19]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_18 ),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_17 ),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_16 ),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_15 ),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[5] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_14 ),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[6] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_13 ),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[7] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_12 ),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[8] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_11 ),
        .Q(Q[8]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[9] 
       (.C(m_axi_lite_aclk),
        .CE(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] ),
        .D(\gdm.dm_n_10 ),
        .Q(Q[9]));
  LUT6 #(
    .INIT(64'h0100FFFF01000100)) 
    \state[3]_i_1__0 
       (.I0(Q[18]),
        .I1(empty_fwft_i_reg),
        .I2(Q[19]),
        .I3(\state_reg[5] [0]),
        .I4(axi_awready_rs),
        .I5(\state_reg[5] [1]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h0200FFFF02000200)) 
    \state[4]_i_1__0 
       (.I0(Q[18]),
        .I1(Q[19]),
        .I2(empty_fwft_i_reg),
        .I3(\state_reg[5] [0]),
        .I4(axi_arready_rs),
        .I5(\state_reg[5] [2]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0200FFFF02000200)) 
    \state[5]_i_2 
       (.I0(Q[19]),
        .I1(Q[18]),
        .I2(empty_fwft_i_reg),
        .I3(\state_reg[5] [0]),
        .I4(axi_wready_rs),
        .I5(\state_reg[5] [3]),
        .O(D[2]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_rd_bin_cntr
   (Q,
    ram_empty_fb_i_reg,
    \rd_pntr_gc_reg[7] ,
    I41,
    E,
    \wr_pntr_bin_reg[2] ,
    WR_PNTR_RD,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] );
  output [5:0]Q;
  output ram_empty_fb_i_reg;
  output [7:0]\rd_pntr_gc_reg[7] ;
  output [6:0]I41;
  input [0:0]E;
  input \wr_pntr_bin_reg[2] ;
  input [1:0]WR_PNTR_RD;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;

  wire [0:0]E;
  wire [6:0]I41;
  wire [5:0]Q;
  wire [1:0]WR_PNTR_RD;
  wire clk_ph_out;
  wire \gc0.count[7]_i_2_n_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  wire [7:0]plusOp__2;
  wire ram_empty_fb_i_reg;
  wire [7:0]\rd_pntr_gc_reg[7] ;
  wire [1:0]rd_pntr_plus1;
  wire \wr_pntr_bin_reg[2] ;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .O(plusOp__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .I2(Q[0]),
        .O(plusOp__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(rd_pntr_plus1[0]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(plusOp__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1 
       (.I0(Q[0]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(Q[1]),
        .I4(Q[2]),
        .O(plusOp__2[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1 
       (.I0(Q[1]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(plusOp__2[5]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[6]_i_1 
       (.I0(\gc0.count[7]_i_2_n_0 ),
        .I1(Q[4]),
        .O(plusOp__2[6]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[7]_i_1 
       (.I0(\gc0.count[7]_i_2_n_0 ),
        .I1(Q[4]),
        .I2(Q[5]),
        .O(plusOp__2[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc0.count[7]_i_2 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[0]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\gc0.count[7]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(rd_pntr_plus1[0]),
        .Q(\rd_pntr_gc_reg[7] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(rd_pntr_plus1[1]),
        .Q(\rd_pntr_gc_reg[7] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[0]),
        .Q(\rd_pntr_gc_reg[7] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[1]),
        .Q(\rd_pntr_gc_reg[7] [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[2]),
        .Q(\rd_pntr_gc_reg[7] [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[3]),
        .Q(\rd_pntr_gc_reg[7] [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[4]),
        .Q(\rd_pntr_gc_reg[7] [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[5]),
        .Q(\rd_pntr_gc_reg[7] [7]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(plusOp__2[0]),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(rd_pntr_plus1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__2[1]),
        .Q(rd_pntr_plus1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__2[2]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__2[3]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__2[4]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__2[5]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__2[6]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__2[7]),
        .Q(Q[5]));
  LUT6 #(
    .INIT(64'h2002000000002002)) 
    ram_empty_fb_i_i_3
       (.I0(E),
        .I1(\wr_pntr_bin_reg[2] ),
        .I2(WR_PNTR_RD[0]),
        .I3(rd_pntr_plus1[0]),
        .I4(WR_PNTR_RD[1]),
        .I5(rd_pntr_plus1[1]),
        .O(ram_empty_fb_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[0]_i_1__1 
       (.I0(\rd_pntr_gc_reg[7] [0]),
        .I1(\rd_pntr_gc_reg[7] [1]),
        .O(I41[0]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[1]_i_1__1 
       (.I0(\rd_pntr_gc_reg[7] [1]),
        .I1(\rd_pntr_gc_reg[7] [2]),
        .O(I41[1]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[2]_i_1__1 
       (.I0(\rd_pntr_gc_reg[7] [2]),
        .I1(\rd_pntr_gc_reg[7] [3]),
        .O(I41[2]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[3]_i_1__1 
       (.I0(\rd_pntr_gc_reg[7] [3]),
        .I1(\rd_pntr_gc_reg[7] [4]),
        .O(I41[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[4]_i_1__1 
       (.I0(\rd_pntr_gc_reg[7] [4]),
        .I1(\rd_pntr_gc_reg[7] [5]),
        .O(I41[4]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[5]_i_1__1 
       (.I0(\rd_pntr_gc_reg[7] [5]),
        .I1(\rd_pntr_gc_reg[7] [6]),
        .O(I41[5]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[6]_i_1__1 
       (.I0(\rd_pntr_gc_reg[7] [6]),
        .I1(\rd_pntr_gc_reg[7] [7]),
        .O(I41[6]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_rd_bin_cntr_23
   (Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    I10,
    E,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] );
  output [7:0]Q;
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output [6:0]I10;
  input [0:0]E;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [6:0]I10;
  wire [7:0]Q;
  wire \gc0.count[7]_i_2__0_n_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  wire [7:0]plusOp__6;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1__2 
       (.I0(Q[0]),
        .O(plusOp__6[0]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__6[1]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(plusOp__6[2]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp__6[3]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(plusOp__6[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1__1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(plusOp__6[5]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[6]_i_1__1 
       (.I0(\gc0.count[7]_i_2__0_n_0 ),
        .I1(Q[6]),
        .O(plusOp__6[6]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[7]_i_1__1 
       (.I0(\gc0.count[7]_i_2__0_n_0 ),
        .I1(Q[6]),
        .I2(Q[7]),
        .O(plusOp__6[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc0.count[7]_i_2__0 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\gc0.count[7]_i_2__0_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[7]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [7]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .D(plusOp__6[0]),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__6[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__6[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__6[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__6[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__6[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__6[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__6[7]),
        .Q(Q[7]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[0]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [0]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]),
        .O(I10[0]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[1]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]),
        .O(I10[1]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[2]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]),
        .O(I10[2]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[3]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]),
        .O(I10[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[4]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]),
        .O(I10[4]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[5]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]),
        .O(I10[5]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[6]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [7]),
        .O(I10[6]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_rd_bin_cntr_57
   (Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    \rd_pntr_gc_reg[6] ,
    E,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] );
  output [7:0]Q;
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output [6:0]\rd_pntr_gc_reg[6] ;
  input [0:0]E;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [7:0]Q;
  wire \gc0.count[7]_i_2__1_n_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  wire [7:0]plusOp__7;
  wire [6:0]\rd_pntr_gc_reg[6] ;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1__3 
       (.I0(Q[0]),
        .O(plusOp__7[0]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__7[1]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(plusOp__7[2]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp__7[3]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(plusOp__7[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1__2 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(plusOp__7[5]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[6]_i_1__2 
       (.I0(\gc0.count[7]_i_2__1_n_0 ),
        .I1(Q[6]),
        .O(plusOp__7[6]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[7]_i_1__2 
       (.I0(\gc0.count[7]_i_2__1_n_0 ),
        .I1(Q[6]),
        .I2(Q[7]),
        .O(plusOp__7[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc0.count[7]_i_2__1 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\gc0.count[7]_i_2__1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[7]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [7]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .D(plusOp__7[0]),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__7[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__7[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__7[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__7[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__7[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__7[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__7[7]),
        .Q(Q[7]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[0]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [0]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]),
        .O(\rd_pntr_gc_reg[6] [0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[1]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]),
        .O(\rd_pntr_gc_reg[6] [1]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[2]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]),
        .O(\rd_pntr_gc_reg[6] [2]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[3]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]),
        .O(\rd_pntr_gc_reg[6] [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[4]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]),
        .O(\rd_pntr_gc_reg[6] [4]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[5]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]),
        .O(\rd_pntr_gc_reg[6] [5]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[6]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [7]),
        .O(\rd_pntr_gc_reg[6] [6]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_rd_bin_cntr__parameterized0
   (ram_empty_fb_i_reg,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    ram_empty_fb_i_reg_0,
    Q,
    WR_PNTR_RD,
    E,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] );
  output ram_empty_fb_i_reg;
  output [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output ram_empty_fb_i_reg_0;
  output [7:0]Q;
  input [0:0]WR_PNTR_RD;
  input [0:0]E;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;

  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [7:0]Q;
  wire [0:0]WR_PNTR_RD;
  wire \gc0.count[8]_i_2__0_n_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  wire [8:0]plusOp__8;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire [8:8]rd_pntr_plus1;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1__4 
       (.I0(Q[0]),
        .O(plusOp__8[0]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1__4 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__8[1]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1__4 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(plusOp__8[2]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1__4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp__8[3]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(plusOp__8[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1__3 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(plusOp__8[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[6]_i_1__3 
       (.I0(\gc0.count[8]_i_2__0_n_0 ),
        .I1(Q[6]),
        .O(plusOp__8[6]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[7]_i_1__3 
       (.I0(\gc0.count[8]_i_2__0_n_0 ),
        .I1(Q[6]),
        .I2(Q[7]),
        .O(plusOp__8[7]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\gc0.count[8]_i_2__0_n_0 ),
        .I2(Q[7]),
        .I3(rd_pntr_plus1),
        .O(plusOp__8[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc0.count[8]_i_2__0 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\gc0.count[8]_i_2__0_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[7]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[8] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(rd_pntr_plus1),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [8]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .D(plusOp__8[0]),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__8[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__8[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__8[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__8[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__8[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__8[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__8[7]),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[8] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__8[8]),
        .Q(rd_pntr_plus1));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__3 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [8]),
        .I1(WR_PNTR_RD),
        .O(ram_empty_fb_i_reg));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__4 
       (.I0(rd_pntr_plus1),
        .I1(WR_PNTR_RD),
        .O(ram_empty_fb_i_reg_0));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_rd_bin_cntr__parameterized1
   (v1_reg,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    v1_reg_0,
    WR_PNTR_RD,
    E,
    clk_ph_out,
    Q);
  output [4:0]v1_reg;
  output [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  output [4:0]v1_reg_0;
  input [8:0]WR_PNTR_RD;
  input [0:0]E;
  input clk_ph_out;
  input [0:0]Q;

  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [0:0]Q;
  wire [8:0]WR_PNTR_RD;
  wire clk_ph_out;
  wire \gc0.count[8]_i_2_n_0 ;
  wire [8:0]plusOp__3;
  wire [8:0]rd_pntr_plus1;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1__0 
       (.I0(rd_pntr_plus1[0]),
        .O(plusOp__3[0]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1__0 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp__3[1]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1__0 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp__3[2]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1__0 
       (.I0(rd_pntr_plus1[1]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[2]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp__3[3]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1__0 
       (.I0(rd_pntr_plus1[2]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .I4(rd_pntr_plus1[4]),
        .O(plusOp__3[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1__0 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[0]),
        .I3(rd_pntr_plus1[2]),
        .I4(rd_pntr_plus1[4]),
        .I5(rd_pntr_plus1[5]),
        .O(plusOp__3[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[6]_i_1__0 
       (.I0(\gc0.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus1[6]),
        .O(plusOp__3[6]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[7]_i_1__0 
       (.I0(\gc0.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus1[6]),
        .I2(rd_pntr_plus1[7]),
        .O(plusOp__3[7]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[8]_i_1 
       (.I0(rd_pntr_plus1[6]),
        .I1(\gc0.count[8]_i_2_n_0 ),
        .I2(rd_pntr_plus1[7]),
        .I3(rd_pntr_plus1[8]),
        .O(plusOp__3[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc0.count[8]_i_2 
       (.I0(rd_pntr_plus1[5]),
        .I1(rd_pntr_plus1[3]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[0]),
        .I4(rd_pntr_plus1[2]),
        .I5(rd_pntr_plus1[4]),
        .O(\gc0.count[8]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(rd_pntr_plus1[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(rd_pntr_plus1[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(rd_pntr_plus1[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(rd_pntr_plus1[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(rd_pntr_plus1[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(rd_pntr_plus1[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(rd_pntr_plus1[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(rd_pntr_plus1[7]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(rd_pntr_plus1[8]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [8]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(plusOp__3[0]),
        .PRE(Q),
        .Q(rd_pntr_plus1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(plusOp__3[1]),
        .Q(rd_pntr_plus1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(plusOp__3[2]),
        .Q(rd_pntr_plus1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(plusOp__3[3]),
        .Q(rd_pntr_plus1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(plusOp__3[4]),
        .Q(rd_pntr_plus1[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(plusOp__3[5]),
        .Q(rd_pntr_plus1[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(plusOp__3[6]),
        .Q(rd_pntr_plus1[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(plusOp__3[7]),
        .Q(rd_pntr_plus1[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(Q),
        .D(plusOp__3[8]),
        .Q(rd_pntr_plus1[8]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [0]),
        .I1(WR_PNTR_RD[0]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [1]),
        .I3(WR_PNTR_RD[1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__2 
       (.I0(rd_pntr_plus1[0]),
        .I1(WR_PNTR_RD[0]),
        .I2(WR_PNTR_RD[1]),
        .I3(rd_pntr_plus1[1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [2]),
        .I1(WR_PNTR_RD[2]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [3]),
        .I3(WR_PNTR_RD[3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(WR_PNTR_RD[3]),
        .I3(rd_pntr_plus1[3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [4]),
        .I1(WR_PNTR_RD[4]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [5]),
        .I3(WR_PNTR_RD[5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[4]),
        .I1(WR_PNTR_RD[4]),
        .I2(WR_PNTR_RD[5]),
        .I3(rd_pntr_plus1[5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [6]),
        .I1(WR_PNTR_RD[6]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [7]),
        .I3(WR_PNTR_RD[7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(WR_PNTR_RD[7]),
        .I3(rd_pntr_plus1[7]),
        .O(v1_reg_0[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [8]),
        .I1(WR_PNTR_RD[8]),
        .O(v1_reg[4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__2 
       (.I0(rd_pntr_plus1[8]),
        .I1(WR_PNTR_RD[8]),
        .O(v1_reg_0[4]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_rd_bin_cntr__parameterized2
   (Q,
    D,
    \rd_pntr_gc_reg[3] ,
    E,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] );
  output [3:0]Q;
  output [2:0]D;
  output [3:0]\rd_pntr_gc_reg[3] ;
  input [0:0]E;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;

  wire [2:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  wire [3:0]plusOp__0;
  wire [3:0]\rd_pntr_gc_reg[3] ;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1__1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[0]),
        .Q(\rd_pntr_gc_reg[3] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[1]),
        .Q(\rd_pntr_gc_reg[3] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[2]),
        .Q(\rd_pntr_gc_reg[3] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[3]),
        .Q(\rd_pntr_gc_reg[3] [3]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(plusOp__0[0]),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__0[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__0[3]),
        .Q(Q[3]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[0]_i_1__2 
       (.I0(\rd_pntr_gc_reg[3] [0]),
        .I1(\rd_pntr_gc_reg[3] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[1]_i_1__2 
       (.I0(\rd_pntr_gc_reg[3] [1]),
        .I1(\rd_pntr_gc_reg[3] [2]),
        .O(D[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[2]_i_1__2 
       (.I0(\rd_pntr_gc_reg[3] [2]),
        .I1(\rd_pntr_gc_reg[3] [3]),
        .O(D[2]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_rd_bin_cntr__parameterized3
   (Q,
    D,
    \rd_pntr_gc_reg[3] ,
    E,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] );
  output [3:0]Q;
  output [2:0]D;
  output [3:0]\rd_pntr_gc_reg[3] ;
  input [0:0]E;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;

  wire [2:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  wire [3:0]plusOp__1;
  wire [3:0]\rd_pntr_gc_reg[3] ;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1__5 
       (.I0(Q[0]),
        .O(plusOp__1[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1__5 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1__5 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1__5 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp__1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[0]),
        .Q(\rd_pntr_gc_reg[3] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[1]),
        .Q(\rd_pntr_gc_reg[3] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[2]),
        .Q(\rd_pntr_gc_reg[3] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(Q[3]),
        .Q(\rd_pntr_gc_reg[3] [3]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(plusOp__1[0]),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__1[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__1[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .D(plusOp__1[3]),
        .Q(Q[3]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[0]_i_1__3 
       (.I0(\rd_pntr_gc_reg[3] [0]),
        .I1(\rd_pntr_gc_reg[3] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[1]_i_1__3 
       (.I0(\rd_pntr_gc_reg[3] [1]),
        .I1(\rd_pntr_gc_reg[3] [2]),
        .O(D[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_gc[2]_i_1__3 
       (.I0(\rd_pntr_gc_reg[3] [2]),
        .I1(\rd_pntr_gc_reg[3] [3]),
        .O(D[2]));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module v7_bd_axi_chip2chip_0_0_rd_fwft
   (m_axi_wvalid,
    tmp_ram_rd_en,
    E,
    \goreg_bm.dout_i_reg[37] ,
    m_aclk,
    Q,
    p_2_out,
    m_axi_wready);
  output m_axi_wvalid;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [0:0]\goreg_bm.dout_i_reg[37] ;
  input m_aclk;
  input [1:0]Q;
  input p_2_out;
  input m_axi_wready;

  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]curr_fwft_state;
  wire empty_fwft_fb;
  wire empty_fwft_i0;
  wire empty_fwft_i_reg_n_0;
  wire [0:0]\goreg_bm.dout_i_reg[37] ;
  wire \gpregsm1.curr_fwft_state_reg_n_0_[1] ;
  wire m_aclk;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire [1:0]next_fwft_state;
  wire p_2_out;
  wire tmp_ram_rd_en;

  LUT6 #(
    .INIT(64'hABAABBBBBBBBBBBB)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_1__1 
       (.I0(Q[0]),
        .I1(p_2_out),
        .I2(empty_fwft_i_reg_n_0),
        .I3(m_axi_wready),
        .I4(curr_fwft_state),
        .I5(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .O(tmp_ram_rd_en));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty_fwft_fb));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT5 #(
    .INIT(32'hAABA2222)) 
    empty_fwft_i_i_1__2
       (.I0(empty_fwft_fb),
        .I1(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I2(m_axi_wready),
        .I3(empty_fwft_i_reg_n_0),
        .I4(curr_fwft_state),
        .O(empty_fwft_i0));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty_fwft_i_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'h00004FFF)) 
    \gc0.count_d1[8]_i_1__0 
       (.I0(empty_fwft_i_reg_n_0),
        .I1(m_axi_wready),
        .I2(curr_fwft_state),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I4(p_2_out),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT4 #(
    .INIT(16'h22A2)) 
    \goreg_bm.dout_i[0]_i_1__1 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(curr_fwft_state),
        .I2(m_axi_wready),
        .I3(empty_fwft_i_reg_n_0),
        .O(\goreg_bm.dout_i_reg[37] ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'hFBAA)) 
    \gpregsm1.curr_fwft_state[0]_i_1__4 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(m_axi_wready),
        .I2(empty_fwft_i_reg_n_0),
        .I3(curr_fwft_state),
        .O(next_fwft_state[0]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'hB000FFFF)) 
    \gpregsm1.curr_fwft_state[1]_i_1__4 
       (.I0(empty_fwft_i_reg_n_0),
        .I1(m_axi_wready),
        .I2(curr_fwft_state),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I4(p_2_out),
        .O(next_fwft_state[1]));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(next_fwft_state[1]),
        .Q(\gpregsm1.curr_fwft_state_reg_n_0_[1] ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT1 #(
    .INIT(2'h1)) 
    m_axi_wvalid_INST_0
       (.I0(empty_fwft_i_reg_n_0),
        .O(m_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module v7_bd_axi_chip2chip_0_0_rd_fwft_21
   (m_axi_awvalid,
    tmp_ram_rd_en,
    E,
    \goreg_bm.dout_i_reg[44] ,
    m_aclk,
    Q,
    p_2_out,
    m_axi_awready);
  output m_axi_awvalid;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [0:0]\goreg_bm.dout_i_reg[44] ;
  input m_aclk;
  input [1:0]Q;
  input p_2_out;
  input m_axi_awready;

  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]curr_fwft_state;
  wire empty_fwft_fb;
  wire empty_fwft_i0;
  wire empty_fwft_i_0;
  wire [0:0]\goreg_bm.dout_i_reg[44] ;
  wire \gpregsm1.curr_fwft_state_reg_n_0_[1] ;
  wire m_aclk;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire [1:0]next_fwft_state;
  wire p_2_out;
  wire tmp_ram_rd_en;

  LUT6 #(
    .INIT(64'hABAABBBBBBBBBBBB)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_1 
       (.I0(Q[0]),
        .I1(p_2_out),
        .I2(empty_fwft_i_0),
        .I3(m_axi_awready),
        .I4(curr_fwft_state),
        .I5(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .O(tmp_ram_rd_en));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty_fwft_fb));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'hAABA2222)) 
    empty_fwft_i_i_1__0
       (.I0(empty_fwft_fb),
        .I1(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I2(m_axi_awready),
        .I3(empty_fwft_i_0),
        .I4(curr_fwft_state),
        .O(empty_fwft_i0));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty_fwft_i_0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h00004FFF)) 
    \gc0.count_d1[7]_i_1__0 
       (.I0(empty_fwft_i_0),
        .I1(m_axi_awready),
        .I2(curr_fwft_state),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I4(p_2_out),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h22A2)) 
    \goreg_bm.dout_i[0]_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(curr_fwft_state),
        .I2(m_axi_awready),
        .I3(empty_fwft_i_0),
        .O(\goreg_bm.dout_i_reg[44] ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hFBAA)) 
    \gpregsm1.curr_fwft_state[0]_i_1__2 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(m_axi_awready),
        .I2(empty_fwft_i_0),
        .I3(curr_fwft_state),
        .O(next_fwft_state[0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'hB000FFFF)) 
    \gpregsm1.curr_fwft_state[1]_i_1__2 
       (.I0(empty_fwft_i_0),
        .I1(m_axi_awready),
        .I2(curr_fwft_state),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I4(p_2_out),
        .O(next_fwft_state[1]));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(next_fwft_state[1]),
        .Q(\gpregsm1.curr_fwft_state_reg_n_0_[1] ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT1 #(
    .INIT(2'h1)) 
    m_axi_awvalid_INST_0
       (.I0(empty_fwft_i_0),
        .O(m_axi_awvalid));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module v7_bd_axi_chip2chip_0_0_rd_fwft_3
   (\gpregsm1.curr_fwft_state_reg[0]_0 ,
    E,
    \goreg_bm.dout_i_reg[35] ,
    p_12_in,
    clk_ph_out,
    Q,
    p_0_in,
    rd_ch_data_ready,
    p_2_out,
    tx_phy_ready,
    \ctrl_info_reg[0] );
  output \gpregsm1.curr_fwft_state_reg[0]_0 ;
  output [0:0]E;
  output [0:0]\goreg_bm.dout_i_reg[35] ;
  output p_12_in;
  input clk_ph_out;
  input [0:0]Q;
  input p_0_in;
  input rd_ch_data_ready;
  input p_2_out;
  input tx_phy_ready;
  input [0:0]\ctrl_info_reg[0] ;

  wire [0:0]E;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [0:0]\ctrl_info_reg[0] ;
  wire [0:0]curr_fwft_state;
  wire empty_fwft_fb;
  wire empty_fwft_i0;
  wire [0:0]\goreg_bm.dout_i_reg[35] ;
  wire \gpregsm1.curr_fwft_state_reg[0]_0 ;
  wire \gpregsm1.curr_fwft_state_reg_n_0_[1] ;
  wire [1:0]next_fwft_state;
  wire p_0_in;
  wire p_12_in;
  wire p_2_out;
  wire rd_ch_data_ready;
  wire tx_phy_ready;

  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(empty_fwft_fb));
  LUT6 #(
    .INIT(64'hFF000000FF40FF00)) 
    empty_fwft_i_i_1
       (.I0(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I1(rd_ch_data_ready),
        .I2(p_0_in),
        .I3(empty_fwft_fb),
        .I4(curr_fwft_state),
        .I5(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .O(empty_fwft_i0));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(\gpregsm1.curr_fwft_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000000008FFFFFF)) 
    \gc0.count_d1[8]_i_1 
       (.I0(p_0_in),
        .I1(rd_ch_data_ready),
        .I2(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I3(curr_fwft_state),
        .I4(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I5(p_2_out),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT5 #(
    .INIT(32'h4000FF00)) 
    \goreg_bm.dout_i[35]_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I1(rd_ch_data_ready),
        .I2(p_0_in),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I4(curr_fwft_state),
        .O(\goreg_bm.dout_i_reg[35] ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT5 #(
    .INIT(32'hFFFFF700)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(p_0_in),
        .I1(rd_ch_data_ready),
        .I2(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I3(curr_fwft_state),
        .I4(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .O(next_fwft_state[0]));
  LUT6 #(
    .INIT(64'hF7000000FFFFFFFF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(p_0_in),
        .I1(rd_ch_data_ready),
        .I2(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I4(curr_fwft_state),
        .I5(p_2_out),
        .O(next_fwft_state[1]));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[1]),
        .Q(\gpregsm1.curr_fwft_state_reg_n_0_[1] ));
  LUT3 #(
    .INIT(8'h04)) 
    \slot_select[2]_i_4 
       (.I0(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I1(tx_phy_ready),
        .I2(\ctrl_info_reg[0] ),
        .O(p_12_in));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module v7_bd_axi_chip2chip_0_0_rd_fwft_5
   (\gpregsm1.curr_fwft_state_reg[0]_0 ,
    E,
    \gpregsm1.curr_fwft_state_reg[0]_1 ,
    int_ch1_ready5,
    clk_ph_out,
    Q,
    br_ch_data_ready,
    p_2_out,
    tx_phy_ready,
    \ctrl_info_reg[1] );
  output \gpregsm1.curr_fwft_state_reg[0]_0 ;
  output [0:0]E;
  output [1:0]\gpregsm1.curr_fwft_state_reg[0]_1 ;
  output int_ch1_ready5;
  input clk_ph_out;
  input [0:0]Q;
  input br_ch_data_ready;
  input p_2_out;
  input tx_phy_ready;
  input [0:0]\ctrl_info_reg[1] ;

  wire [0:0]E;
  wire [0:0]Q;
  wire br_ch_data_ready;
  wire clk_ph_out;
  wire [0:0]\ctrl_info_reg[1] ;
  wire empty_fwft_fb;
  wire empty_fwft_i0;
  wire \gpregsm1.curr_fwft_state_reg[0]_0 ;
  wire [1:0]\gpregsm1.curr_fwft_state_reg[0]_1 ;
  wire int_ch1_ready5;
  wire [1:0]next_fwft_state;
  wire p_2_out;
  wire tx_phy_ready;

  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT5 #(
    .INIT(32'hF000F2F0)) 
    empty_fwft_fb_i_1
       (.I0(br_ch_data_ready),
        .I1(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I2(empty_fwft_fb),
        .I3(\gpregsm1.curr_fwft_state_reg[0]_1 [0]),
        .I4(\gpregsm1.curr_fwft_state_reg[0]_1 [1]),
        .O(empty_fwft_i0));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(empty_fwft_fb));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(\gpregsm1.curr_fwft_state_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT5 #(
    .INIT(32'h00004FFF)) 
    \gc0.count_d1[7]_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I1(br_ch_data_ready),
        .I2(\gpregsm1.curr_fwft_state_reg[0]_1 [0]),
        .I3(\gpregsm1.curr_fwft_state_reg[0]_1 [1]),
        .I4(p_2_out),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'hFFB0)) 
    \gpregsm1.curr_fwft_state[0]_i_1__0 
       (.I0(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I1(br_ch_data_ready),
        .I2(\gpregsm1.curr_fwft_state_reg[0]_1 [0]),
        .I3(\gpregsm1.curr_fwft_state_reg[0]_1 [1]),
        .O(next_fwft_state[0]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT5 #(
    .INIT(32'hB000FFFF)) 
    \gpregsm1.curr_fwft_state[1]_i_1__0 
       (.I0(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I1(br_ch_data_ready),
        .I2(\gpregsm1.curr_fwft_state_reg[0]_1 [1]),
        .I3(\gpregsm1.curr_fwft_state_reg[0]_1 [0]),
        .I4(p_2_out),
        .O(next_fwft_state[1]));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[0]),
        .Q(\gpregsm1.curr_fwft_state_reg[0]_1 [0]));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[1]),
        .Q(\gpregsm1.curr_fwft_state_reg[0]_1 [1]));
  LUT3 #(
    .INIT(8'h04)) 
    \slot_select[2]_i_2 
       (.I0(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I1(tx_phy_ready),
        .I2(\ctrl_info_reg[1] ),
        .O(int_ch1_ready5));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module v7_bd_axi_chip2chip_0_0_rd_fwft_55
   (m_axi_arvalid,
    tmp_ram_rd_en,
    E,
    \goreg_bm.dout_i_reg[44] ,
    m_aclk,
    Q,
    p_2_out,
    m_axi_arready);
  output m_axi_arvalid;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [0:0]\goreg_bm.dout_i_reg[44] ;
  input m_aclk;
  input [1:0]Q;
  input p_2_out;
  input m_axi_arready;

  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]curr_fwft_state;
  wire empty_fwft_fb;
  wire empty_fwft_i0;
  wire empty_fwft_i_reg_n_0;
  wire [0:0]\goreg_bm.dout_i_reg[44] ;
  wire \gpregsm1.curr_fwft_state_reg_n_0_[1] ;
  wire m_aclk;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire [1:0]next_fwft_state;
  wire p_2_out;
  wire tmp_ram_rd_en;

  LUT6 #(
    .INIT(64'hABAABBBBBBBBBBBB)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_1__0 
       (.I0(Q[0]),
        .I1(p_2_out),
        .I2(empty_fwft_i_reg_n_0),
        .I3(m_axi_arready),
        .I4(curr_fwft_state),
        .I5(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .O(tmp_ram_rd_en));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty_fwft_fb));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'hAABA2222)) 
    empty_fwft_i_i_1__1
       (.I0(empty_fwft_fb),
        .I1(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I2(m_axi_arready),
        .I3(empty_fwft_i_reg_n_0),
        .I4(curr_fwft_state),
        .O(empty_fwft_i0));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q[1]),
        .Q(empty_fwft_i_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h00004FFF)) 
    \gc0.count_d1[7]_i_1__1 
       (.I0(empty_fwft_i_reg_n_0),
        .I1(m_axi_arready),
        .I2(curr_fwft_state),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I4(p_2_out),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h22A2)) 
    \goreg_bm.dout_i[0]_i_1__0 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(curr_fwft_state),
        .I2(m_axi_arready),
        .I3(empty_fwft_i_reg_n_0),
        .O(\goreg_bm.dout_i_reg[44] ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'hFBAA)) 
    \gpregsm1.curr_fwft_state[0]_i_1__3 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(m_axi_arready),
        .I2(empty_fwft_i_reg_n_0),
        .I3(curr_fwft_state),
        .O(next_fwft_state[0]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'hB000FFFF)) 
    \gpregsm1.curr_fwft_state[1]_i_1__3 
       (.I0(empty_fwft_i_reg_n_0),
        .I1(m_axi_arready),
        .I2(curr_fwft_state),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I4(p_2_out),
        .O(next_fwft_state[1]));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(Q[1]),
        .D(next_fwft_state[1]),
        .Q(\gpregsm1.curr_fwft_state_reg_n_0_[1] ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT1 #(
    .INIT(2'h1)) 
    m_axi_arvalid_INST_0
       (.I0(empty_fwft_i_reg_n_0),
        .O(m_axi_arvalid));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module v7_bd_axi_chip2chip_0_0_rd_fwft_69
   (\gpr1.dout_i_reg[0] ,
    E,
    \gc0.count_reg[3] ,
    \goreg_dm.dout_i_reg[19] ,
    clk_ph_out,
    Q,
    axi_lite_tx_ready,
    p_2_out);
  output \gpr1.dout_i_reg[0] ;
  output [0:0]E;
  output [0:0]\gc0.count_reg[3] ;
  output [0:0]\goreg_dm.dout_i_reg[19] ;
  input clk_ph_out;
  input [0:0]Q;
  input axi_lite_tx_ready;
  input p_2_out;

  wire [0:0]E;
  wire [0:0]Q;
  wire axi_lite_tx_ready;
  wire clk_ph_out;
  wire [0:0]curr_fwft_state;
  wire empty_fwft_fb;
  wire empty_fwft_i0;
  wire [0:0]\gc0.count_reg[3] ;
  wire [0:0]\goreg_dm.dout_i_reg[19] ;
  wire \gpr1.dout_i_reg[0] ;
  wire \gpregsm1.curr_fwft_state_reg_n_0_[1] ;
  wire [1:0]next_fwft_state;
  wire p_2_out;

  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'hF000F2F0)) 
    empty_fwft_fb_i_1__0
       (.I0(axi_lite_tx_ready),
        .I1(\gpr1.dout_i_reg[0] ),
        .I2(empty_fwft_fb),
        .I3(curr_fwft_state),
        .I4(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .O(empty_fwft_i0));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(empty_fwft_fb));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(\gpr1.dout_i_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h00004FFF)) 
    \gc0.count_d1[3]_i_1 
       (.I0(\gpr1.dout_i_reg[0] ),
        .I1(axi_lite_tx_ready),
        .I2(curr_fwft_state),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I4(p_2_out),
        .O(\gc0.count_reg[3] ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h20F0)) 
    \goreg_dm.dout_i[19]_i_1 
       (.I0(axi_lite_tx_ready),
        .I1(\gpr1.dout_i_reg[0] ),
        .I2(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I3(curr_fwft_state),
        .O(\goreg_dm.dout_i_reg[19] ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h000077F7)) 
    \gpr1.dout_i[19]_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(curr_fwft_state),
        .I2(axi_lite_tx_ready),
        .I3(\gpr1.dout_i_reg[0] ),
        .I4(p_2_out),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'hFFB0)) 
    \gpregsm1.curr_fwft_state[0]_i_1__1 
       (.I0(\gpr1.dout_i_reg[0] ),
        .I1(axi_lite_tx_ready),
        .I2(curr_fwft_state),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .O(next_fwft_state[0]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'hB000FFFF)) 
    \gpregsm1.curr_fwft_state[1]_i_1__1 
       (.I0(\gpr1.dout_i_reg[0] ),
        .I1(axi_lite_tx_ready),
        .I2(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I3(curr_fwft_state),
        .I4(p_2_out),
        .O(next_fwft_state[1]));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[1]),
        .Q(\gpregsm1.curr_fwft_state_reg_n_0_[1] ));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module v7_bd_axi_chip2chip_0_0_rd_fwft_70
   (\gpregsm1.curr_fwft_state_reg[0]_0 ,
    E,
    \gc0.count_reg[3] ,
    \goreg_dm.dout_i_reg[19] ,
    m_axi_lite_aclk,
    Q,
    rx_fifo_re,
    p_2_out);
  output \gpregsm1.curr_fwft_state_reg[0]_0 ;
  output [0:0]E;
  output [0:0]\gc0.count_reg[3] ;
  output [0:0]\goreg_dm.dout_i_reg[19] ;
  input m_axi_lite_aclk;
  input [0:0]Q;
  input rx_fifo_re;
  input p_2_out;

  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]curr_fwft_state;
  wire empty_fwft_fb;
  wire empty_fwft_i0;
  wire [0:0]\gc0.count_reg[3] ;
  wire [0:0]\goreg_dm.dout_i_reg[19] ;
  wire \gpregsm1.curr_fwft_state_reg[0]_0 ;
  wire \gpregsm1.curr_fwft_state_reg_n_0_[1] ;
  wire m_axi_lite_aclk;
  wire [1:0]next_fwft_state;
  wire p_2_out;
  wire rx_fifo_re;

  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(empty_fwft_fb));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hAABA2222)) 
    empty_fwft_i_i_1__3
       (.I0(empty_fwft_fb),
        .I1(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I2(rx_fifo_re),
        .I3(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I4(curr_fwft_state),
        .O(empty_fwft_i0));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(Q),
        .Q(\gpregsm1.curr_fwft_state_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h00004FFF)) 
    \gc0.count_d1[3]_i_1__0 
       (.I0(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I1(rx_fifo_re),
        .I2(curr_fwft_state),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I4(p_2_out),
        .O(\gc0.count_reg[3] ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h22A2)) 
    \goreg_dm.dout_i[19]_i_1__0 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(curr_fwft_state),
        .I2(rx_fifo_re),
        .I3(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .O(\goreg_dm.dout_i_reg[19] ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h000077F7)) 
    \gpr1.dout_i[19]_i_1__0 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(curr_fwft_state),
        .I2(rx_fifo_re),
        .I3(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I4(p_2_out),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'hFBAA)) 
    \gpregsm1.curr_fwft_state[0]_i_1__5 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(rx_fifo_re),
        .I2(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I3(curr_fwft_state),
        .O(next_fwft_state[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'hB000FFFF)) 
    \gpregsm1.curr_fwft_state[1]_i_1__5 
       (.I0(\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .I1(rx_fifo_re),
        .I2(curr_fwft_state),
        .I3(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I4(p_2_out),
        .O(next_fwft_state[1]));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state));
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(Q),
        .D(next_fwft_state[1]),
        .Q(\gpregsm1.curr_fwft_state_reg_n_0_[1] ));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module v7_bd_axi_chip2chip_0_0_rd_logic
   (p_2_out,
    \gpregsm1.curr_fwft_state_reg[0] ,
    \gc0.count_d1_reg[7] ,
    ram_empty_fb_i_reg,
    p_6_out,
    \gpregsm1.curr_fwft_state_reg[0]_0 ,
    int_ch1_ready5,
    \rd_pntr_gc_reg[7] ,
    I41,
    \gc0.count_reg[5] ,
    clk_ph_out,
    Q,
    \wr_pntr_bin_reg[2] ,
    WR_PNTR_RD,
    br_ch_data_ready,
    tx_phy_ready,
    \ctrl_info_reg[1] );
  output p_2_out;
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output [5:0]\gc0.count_d1_reg[7] ;
  output ram_empty_fb_i_reg;
  output p_6_out;
  output [1:0]\gpregsm1.curr_fwft_state_reg[0]_0 ;
  output int_ch1_ready5;
  output [7:0]\rd_pntr_gc_reg[7] ;
  output [6:0]I41;
  input \gc0.count_reg[5] ;
  input clk_ph_out;
  input [0:0]Q;
  input \wr_pntr_bin_reg[2] ;
  input [1:0]WR_PNTR_RD;
  input br_ch_data_ready;
  input tx_phy_ready;
  input [0:0]\ctrl_info_reg[1] ;

  wire [6:0]I41;
  wire [0:0]Q;
  wire [1:0]WR_PNTR_RD;
  wire br_ch_data_ready;
  wire clk_ph_out;
  wire [0:0]\ctrl_info_reg[1] ;
  wire [5:0]\gc0.count_d1_reg[7] ;
  wire \gc0.count_reg[5] ;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire [1:0]\gpregsm1.curr_fwft_state_reg[0]_0 ;
  wire int_ch1_ready5;
  wire p_2_out;
  wire p_6_out;
  wire ram_empty_fb_i_reg;
  wire [7:0]\rd_pntr_gc_reg[7] ;
  wire tx_phy_ready;
  wire \wr_pntr_bin_reg[2] ;

  v7_bd_axi_chip2chip_0_0_rd_fwft_5 \gr1.rfwft 
       (.E(p_6_out),
        .Q(Q),
        .br_ch_data_ready(br_ch_data_ready),
        .clk_ph_out(clk_ph_out),
        .\ctrl_info_reg[1] (\ctrl_info_reg[1] ),
        .\gpregsm1.curr_fwft_state_reg[0]_0 (\gpregsm1.curr_fwft_state_reg[0] ),
        .\gpregsm1.curr_fwft_state_reg[0]_1 (\gpregsm1.curr_fwft_state_reg[0]_0 ),
        .int_ch1_ready5(int_ch1_ready5),
        .p_2_out(p_2_out),
        .tx_phy_ready(tx_phy_ready));
  v7_bd_axi_chip2chip_0_0_rd_status_flags_as \gras.rsts 
       (.Q(Q),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_reg[5] (\gc0.count_reg[5] ),
        .p_2_out(p_2_out));
  v7_bd_axi_chip2chip_0_0_rd_bin_cntr rpntr
       (.E(p_6_out),
        .I41(I41),
        .Q(\gc0.count_d1_reg[7] ),
        .WR_PNTR_RD(WR_PNTR_RD),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (Q),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\rd_pntr_gc_reg[7] (\rd_pntr_gc_reg[7] ),
        .\wr_pntr_bin_reg[2] (\wr_pntr_bin_reg[2] ));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module v7_bd_axi_chip2chip_0_0_rd_logic_17
   (m_axi_awvalid,
    \gc0.count_d1_reg[7] ,
    tmp_ram_rd_en,
    E,
    \goreg_bm.dout_i_reg[44] ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    I10,
    m_aclk,
    Q,
    \gc0.count_d1_reg[2] ,
    m_axi_awready);
  output m_axi_awvalid;
  output [7:0]\gc0.count_d1_reg[7] ;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [0:0]\goreg_bm.dout_i_reg[44] ;
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output [6:0]I10;
  input m_aclk;
  input [1:0]Q;
  input \gc0.count_d1_reg[2] ;
  input m_axi_awready;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [6:0]I10;
  wire [1:0]Q;
  wire \gc0.count_d1_reg[2] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [0:0]\goreg_bm.dout_i_reg[44] ;
  wire m_aclk;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire p_2_out;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_rd_fwft_21 \gr1.rfwft 
       (.E(E),
        .Q(Q),
        .\goreg_bm.dout_i_reg[44] (\goreg_bm.dout_i_reg[44] ),
        .m_aclk(m_aclk),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .p_2_out(p_2_out),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  v7_bd_axi_chip2chip_0_0_rd_status_flags_as_22 \gras.rsts 
       (.Q(Q[1]),
        .\gc0.count_d1_reg[2] (\gc0.count_d1_reg[2] ),
        .m_aclk(m_aclk),
        .p_2_out(p_2_out));
  v7_bd_axi_chip2chip_0_0_rd_bin_cntr_23 rpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .I10(I10),
        .Q(\gc0.count_d1_reg[7] ),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (Q[1]));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module v7_bd_axi_chip2chip_0_0_rd_logic_42
   (m_axi_arvalid,
    \gc0.count_d1_reg[7] ,
    tmp_ram_rd_en,
    E,
    \goreg_bm.dout_i_reg[44] ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    \rd_pntr_gc_reg[6] ,
    m_aclk,
    Q,
    \gc0.count_d1_reg[2] ,
    m_axi_arready);
  output m_axi_arvalid;
  output [7:0]\gc0.count_d1_reg[7] ;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [0:0]\goreg_bm.dout_i_reg[44] ;
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output [6:0]\rd_pntr_gc_reg[6] ;
  input m_aclk;
  input [1:0]Q;
  input \gc0.count_d1_reg[2] ;
  input m_axi_arready;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [1:0]Q;
  wire \gc0.count_d1_reg[2] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire [0:0]\goreg_bm.dout_i_reg[44] ;
  wire m_aclk;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire p_2_out;
  wire [6:0]\rd_pntr_gc_reg[6] ;
  wire tmp_ram_rd_en;

  v7_bd_axi_chip2chip_0_0_rd_fwft_55 \gr1.rfwft 
       (.E(E),
        .Q(Q),
        .\goreg_bm.dout_i_reg[44] (\goreg_bm.dout_i_reg[44] ),
        .m_aclk(m_aclk),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .p_2_out(p_2_out),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  v7_bd_axi_chip2chip_0_0_rd_status_flags_as_56 \gras.rsts 
       (.Q(Q[1]),
        .\gc0.count_d1_reg[2] (\gc0.count_d1_reg[2] ),
        .m_aclk(m_aclk),
        .p_2_out(p_2_out));
  v7_bd_axi_chip2chip_0_0_rd_bin_cntr_57 rpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .Q(\gc0.count_d1_reg[7] ),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (Q[1]),
        .\rd_pntr_gc_reg[6] (\rd_pntr_gc_reg[6] ));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module v7_bd_axi_chip2chip_0_0_rd_logic__parameterized0
   (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    \gc0.count_d1_reg[7] ,
    m_axi_wvalid,
    tmp_ram_rd_en,
    E,
    v1_reg,
    v1_reg_0,
    m_aclk,
    Q,
    WR_PNTR_RD,
    m_axi_wready);
  output [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output [7:0]\gc0.count_d1_reg[7] ;
  output m_axi_wvalid;
  output tmp_ram_rd_en;
  output [0:0]E;
  input [3:0]v1_reg;
  input [3:0]v1_reg_0;
  input m_aclk;
  input [1:0]Q;
  input [0:0]WR_PNTR_RD;
  input m_axi_wready;

  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]WR_PNTR_RD;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire m_aclk;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire p_2_out;
  wire p_6_out;
  wire rpntr_n_0;
  wire rpntr_n_10;
  wire tmp_ram_rd_en;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;

  v7_bd_axi_chip2chip_0_0_rd_fwft \gr1.rfwft 
       (.E(p_6_out),
        .Q(Q),
        .\goreg_bm.dout_i_reg[37] (E),
        .m_aclk(m_aclk),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .p_2_out(p_2_out),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  v7_bd_axi_chip2chip_0_0_rd_status_flags_as__parameterized0 \gras.rsts 
       (.E(p_6_out),
        .Q(Q[1]),
        .\gc0.count_d1_reg[8] (rpntr_n_0),
        .\gc0.count_reg[8] (rpntr_n_10),
        .m_aclk(m_aclk),
        .p_2_out(p_2_out),
        .v1_reg(v1_reg),
        .v1_reg_0(v1_reg_0));
  v7_bd_axi_chip2chip_0_0_rd_bin_cntr__parameterized0 rpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(p_6_out),
        .Q(\gc0.count_d1_reg[7] ),
        .WR_PNTR_RD(WR_PNTR_RD),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (Q[1]),
        .ram_empty_fb_i_reg(rpntr_n_0),
        .ram_empty_fb_i_reg_0(rpntr_n_10));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module v7_bd_axi_chip2chip_0_0_rd_logic__parameterized1
   (\gpregsm1.curr_fwft_state_reg[0] ,
    tmp_ram_rd_en,
    E,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    p_12_in,
    clk_ph_out,
    Q,
    p_0_in,
    rd_ch_data_ready,
    WR_PNTR_RD,
    tx_phy_ready,
    \ctrl_info_reg[0] );
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  output p_12_in;
  input clk_ph_out;
  input [1:0]Q;
  input p_0_in;
  input rd_ch_data_ready;
  input [8:0]WR_PNTR_RD;
  input tx_phy_ready;
  input [0:0]\ctrl_info_reg[0] ;

  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [1:0]Q;
  wire [8:0]WR_PNTR_RD;
  wire [4:0]\c0/v1_reg ;
  wire [4:0]\c1/v1_reg ;
  wire clk_ph_out;
  wire [0:0]\ctrl_info_reg[0] ;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire p_0_in;
  wire p_12_in;
  wire p_2_out;
  wire p_6_out;
  wire rd_ch_data_ready;
  wire tmp_ram_rd_en;
  wire tx_phy_ready;

  v7_bd_axi_chip2chip_0_0_rd_fwft_3 \gr1.rfwft 
       (.E(p_6_out),
        .Q(Q[1]),
        .clk_ph_out(clk_ph_out),
        .\ctrl_info_reg[0] (\ctrl_info_reg[0] ),
        .\goreg_bm.dout_i_reg[35] (E),
        .\gpregsm1.curr_fwft_state_reg[0]_0 (\gpregsm1.curr_fwft_state_reg[0] ),
        .p_0_in(p_0_in),
        .p_12_in(p_12_in),
        .p_2_out(p_2_out),
        .rd_ch_data_ready(rd_ch_data_ready),
        .tx_phy_ready(tx_phy_ready));
  v7_bd_axi_chip2chip_0_0_rd_status_flags_as__parameterized1 \gras.rsts 
       (.E(p_6_out),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .p_2_out(p_2_out),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .v1_reg(\c0/v1_reg ),
        .v1_reg_0(\c1/v1_reg ));
  v7_bd_axi_chip2chip_0_0_rd_bin_cntr__parameterized1 rpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(p_6_out),
        .Q(Q[1]),
        .WR_PNTR_RD(WR_PNTR_RD),
        .clk_ph_out(clk_ph_out),
        .v1_reg(\c0/v1_reg ),
        .v1_reg_0(\c1/v1_reg ));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module v7_bd_axi_chip2chip_0_0_rd_logic__parameterized2
   (\gpr1.dout_i_reg[0] ,
    \gc0.count_d1_reg[3] ,
    E,
    \gc0.count_reg[3] ,
    \goreg_dm.dout_i_reg[19] ,
    D,
    \rd_pntr_gc_reg[3] ,
    \wr_pntr_bin_reg[3] ,
    clk_ph_out,
    Q,
    axi_lite_tx_ready);
  output \gpr1.dout_i_reg[0] ;
  output [3:0]\gc0.count_d1_reg[3] ;
  output [0:0]E;
  output [0:0]\gc0.count_reg[3] ;
  output [0:0]\goreg_dm.dout_i_reg[19] ;
  output [2:0]D;
  output [3:0]\rd_pntr_gc_reg[3] ;
  input \wr_pntr_bin_reg[3] ;
  input clk_ph_out;
  input [0:0]Q;
  input axi_lite_tx_ready;

  wire [2:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire axi_lite_tx_ready;
  wire clk_ph_out;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [0:0]\gc0.count_reg[3] ;
  wire [0:0]\goreg_dm.dout_i_reg[19] ;
  wire \gpr1.dout_i_reg[0] ;
  wire p_2_out;
  wire [3:0]\rd_pntr_gc_reg[3] ;
  wire \wr_pntr_bin_reg[3] ;

  v7_bd_axi_chip2chip_0_0_rd_fwft_69 \gr1.rfwft 
       (.E(E),
        .Q(Q),
        .axi_lite_tx_ready(axi_lite_tx_ready),
        .clk_ph_out(clk_ph_out),
        .\gc0.count_reg[3] (\gc0.count_reg[3] ),
        .\goreg_dm.dout_i_reg[19] (\goreg_dm.dout_i_reg[19] ),
        .\gpr1.dout_i_reg[0] (\gpr1.dout_i_reg[0] ),
        .p_2_out(p_2_out));
  v7_bd_axi_chip2chip_0_0_rd_status_flags_as__parameterized2 \gras.rsts 
       (.Q(Q),
        .clk_ph_out(clk_ph_out),
        .p_2_out(p_2_out),
        .\wr_pntr_bin_reg[3] (\wr_pntr_bin_reg[3] ));
  v7_bd_axi_chip2chip_0_0_rd_bin_cntr__parameterized2 rpntr
       (.D(D),
        .E(\gc0.count_reg[3] ),
        .Q(\gc0.count_d1_reg[3] ),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (Q),
        .\rd_pntr_gc_reg[3] (\rd_pntr_gc_reg[3] ));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module v7_bd_axi_chip2chip_0_0_rd_logic__parameterized3
   (\gpregsm1.curr_fwft_state_reg[0] ,
    E,
    \gc0.count_d1_reg[3] ,
    \gc0.count_reg[3] ,
    D,
    \rd_pntr_gc_reg[3] ,
    \goreg_dm.dout_i_reg[19] ,
    m_axi_lite_aclk,
    Q,
    \wr_pntr_bin_reg[2] ,
    rx_fifo_re);
  output \gpregsm1.curr_fwft_state_reg[0] ;
  output [0:0]E;
  output [3:0]\gc0.count_d1_reg[3] ;
  output [0:0]\gc0.count_reg[3] ;
  output [2:0]D;
  output [3:0]\rd_pntr_gc_reg[3] ;
  output [0:0]\goreg_dm.dout_i_reg[19] ;
  input m_axi_lite_aclk;
  input [0:0]Q;
  input \wr_pntr_bin_reg[2] ;
  input rx_fifo_re;

  wire [2:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire [3:0]\gc0.count_d1_reg[3] ;
  wire [0:0]\gc0.count_reg[3] ;
  wire [0:0]\goreg_dm.dout_i_reg[19] ;
  wire \gpregsm1.curr_fwft_state_reg[0] ;
  wire m_axi_lite_aclk;
  wire p_2_out;
  wire [3:0]\rd_pntr_gc_reg[3] ;
  wire rx_fifo_re;
  wire \wr_pntr_bin_reg[2] ;

  v7_bd_axi_chip2chip_0_0_rd_fwft_70 \gr1.rfwft 
       (.E(E),
        .Q(Q),
        .\gc0.count_reg[3] (\gc0.count_reg[3] ),
        .\goreg_dm.dout_i_reg[19] (\goreg_dm.dout_i_reg[19] ),
        .\gpregsm1.curr_fwft_state_reg[0]_0 (\gpregsm1.curr_fwft_state_reg[0] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .p_2_out(p_2_out),
        .rx_fifo_re(rx_fifo_re));
  v7_bd_axi_chip2chip_0_0_rd_status_flags_as__parameterized3 \gras.rsts 
       (.Q(Q),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .p_2_out(p_2_out),
        .\wr_pntr_bin_reg[2] (\wr_pntr_bin_reg[2] ));
  v7_bd_axi_chip2chip_0_0_rd_bin_cntr__parameterized3 rpntr
       (.D(D),
        .E(\gc0.count_reg[3] ),
        .Q(\gc0.count_d1_reg[3] ),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (Q),
        .\rd_pntr_gc_reg[3] (\rd_pntr_gc_reg[3] ));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_rd_status_flags_as
   (p_2_out,
    \gc0.count_reg[5] ,
    clk_ph_out,
    Q);
  output p_2_out;
  input \gc0.count_reg[5] ;
  input clk_ph_out;
  input [0:0]Q;

  wire [0:0]Q;
  wire clk_ph_out;
  wire \gc0.count_reg[5] ;
  wire p_2_out;

  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\gc0.count_reg[5] ),
        .PRE(Q),
        .Q(p_2_out));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_rd_status_flags_as_22
   (p_2_out,
    \gc0.count_d1_reg[2] ,
    m_aclk,
    Q);
  output p_2_out;
  input \gc0.count_d1_reg[2] ;
  input m_aclk;
  input [0:0]Q;

  wire [0:0]Q;
  wire \gc0.count_d1_reg[2] ;
  wire m_aclk;
  wire p_2_out;

  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(\gc0.count_d1_reg[2] ),
        .PRE(Q),
        .Q(p_2_out));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_rd_status_flags_as_56
   (p_2_out,
    \gc0.count_d1_reg[2] ,
    m_aclk,
    Q);
  output p_2_out;
  input \gc0.count_d1_reg[2] ;
  input m_aclk;
  input [0:0]Q;

  wire [0:0]Q;
  wire \gc0.count_d1_reg[2] ;
  wire m_aclk;
  wire p_2_out;

  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(\gc0.count_d1_reg[2] ),
        .PRE(Q),
        .Q(p_2_out));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_rd_status_flags_as__parameterized0
   (p_2_out,
    v1_reg,
    \gc0.count_d1_reg[8] ,
    v1_reg_0,
    \gc0.count_reg[8] ,
    m_aclk,
    Q,
    E);
  output p_2_out;
  input [3:0]v1_reg;
  input \gc0.count_d1_reg[8] ;
  input [3:0]v1_reg_0;
  input \gc0.count_reg[8] ;
  input m_aclk;
  input [0:0]Q;
  input [0:0]E;

  wire [0:0]E;
  wire [0:0]Q;
  wire c0_n_0;
  wire comp1;
  wire \gc0.count_d1_reg[8] ;
  wire \gc0.count_reg[8] ;
  wire m_aclk;
  wire p_2_out;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;

  v7_bd_axi_chip2chip_0_0_compare__parameterized0 c0
       (.E(E),
        .comp1(comp1),
        .\gc0.count_d1_reg[8] (\gc0.count_d1_reg[8] ),
        .ram_empty_fb_i_reg(c0_n_0),
        .v1_reg(v1_reg));
  v7_bd_axi_chip2chip_0_0_compare__parameterized1 c1
       (.comp1(comp1),
        .\gc0.count_reg[8] (\gc0.count_reg[8] ),
        .v1_reg_0(v1_reg_0));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(c0_n_0),
        .PRE(Q),
        .Q(p_2_out));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_rd_status_flags_as__parameterized1
   (p_2_out,
    tmp_ram_rd_en,
    v1_reg,
    v1_reg_0,
    clk_ph_out,
    Q,
    E);
  output p_2_out;
  output tmp_ram_rd_en;
  input [4:0]v1_reg;
  input [4:0]v1_reg_0;
  input clk_ph_out;
  input [1:0]Q;
  input [0:0]E;

  wire [0:0]E;
  wire [1:0]Q;
  wire c1_n_0;
  wire clk_ph_out;
  wire comp0;
  wire p_2_out;
  wire tmp_ram_rd_en;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;

  LUT3 #(
    .INIT(8'hF4)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(p_2_out),
        .I1(E),
        .I2(Q[0]),
        .O(tmp_ram_rd_en));
  v7_bd_axi_chip2chip_0_0_compare__parameterized4 c0
       (.comp0(comp0),
        .v1_reg(v1_reg));
  v7_bd_axi_chip2chip_0_0_compare__parameterized5 c1
       (.E(E),
        .comp0(comp0),
        .ram_empty_fb_i_reg(c1_n_0),
        .v1_reg_0(v1_reg_0));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(c1_n_0),
        .PRE(Q[1]),
        .Q(p_2_out));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_rd_status_flags_as__parameterized2
   (p_2_out,
    \wr_pntr_bin_reg[3] ,
    clk_ph_out,
    Q);
  output p_2_out;
  input \wr_pntr_bin_reg[3] ;
  input clk_ph_out;
  input [0:0]Q;

  wire [0:0]Q;
  wire clk_ph_out;
  wire p_2_out;
  wire \wr_pntr_bin_reg[3] ;

  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\wr_pntr_bin_reg[3] ),
        .PRE(Q),
        .Q(p_2_out));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_rd_status_flags_as__parameterized3
   (p_2_out,
    \wr_pntr_bin_reg[2] ,
    m_axi_lite_aclk,
    Q);
  output p_2_out;
  input \wr_pntr_bin_reg[2] ;
  input m_axi_lite_aclk;
  input [0:0]Q;

  wire [0:0]Q;
  wire m_axi_lite_aclk;
  wire p_2_out;
  wire \wr_pntr_bin_reg[2] ;

  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(\wr_pntr_bin_reg[2] ),
        .PRE(Q),
        .Q(p_2_out));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo
   ();

  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(1'b1),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(1'b1),
        .Q(rst_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(1'b1),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(1'b1),
        .Q(rst_wr_reg2));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo_15
   ();

  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(1'b1),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(1'b1),
        .Q(rst_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(1'b1),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(1'b1),
        .Q(rst_wr_reg2));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo_2
   ();

  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(1'b1),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(1'b1),
        .Q(rst_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(1'b1),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(1'b1),
        .Q(rst_wr_reg2));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo_39
   ();

  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(1'b1),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(1'b1),
        .Q(rst_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(1'b1),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(1'b1),
        .Q(rst_wr_reg2));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized0
   (rst_full_ff_i,
    rst_full_gen_i,
    Q,
    \gic0.gc0.count_reg[0] ,
    clk_ph_out,
    br_fifo_reset,
    m_aclk);
  output rst_full_ff_i;
  output rst_full_gen_i;
  output [2:0]Q;
  output [1:0]\gic0.gc0.count_reg[0] ;
  input clk_ph_out;
  input br_fifo_reset;
  input m_aclk;

  wire [2:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [1:0]\gic0.gc0.count_reg[0] ;
  wire m_aclk;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1_n_0 ;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d2;

  assign rst_full_ff_i = rst_d2;
  assign rst_full_gen_i = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(br_fifo_reset),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(br_fifo_reset),
        .Q(rst_d3));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1 
       (.I0(rd_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1_n_0 ),
        .Q(Q[0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1_n_0 ),
        .Q(Q[1]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1_n_0 ),
        .Q(Q[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(br_fifo_reset),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(br_fifo_reset),
        .Q(rst_wr_reg2));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1 
       (.I0(wr_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1_n_0 ),
        .Q(\gic0.gc0.count_reg[0] [0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1_n_0 ),
        .Q(\gic0.gc0.count_reg[0] [1]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized0_45
   (rst_full_ff_i,
    rst_full_gen_i,
    Q,
    \gic0.gc0.count_d2_reg[0] ,
    clk_ph_out,
    br_fifo_reset,
    m_aclk);
  output rst_full_ff_i;
  output rst_full_gen_i;
  output [2:0]Q;
  output [1:0]\gic0.gc0.count_d2_reg[0] ;
  input clk_ph_out;
  input br_fifo_reset;
  input m_aclk;

  wire [2:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [1:0]\gic0.gc0.count_d2_reg[0] ;
  wire m_aclk;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__0_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__0_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__0_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__0_n_0 ;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d2;

  assign rst_full_ff_i = rst_d2;
  assign rst_full_gen_i = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(br_fifo_reset),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(br_fifo_reset),
        .Q(rst_d3));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__0 
       (.I0(rd_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__0_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__0_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__0 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__0_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__0_n_0 ),
        .Q(Q[0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__0_n_0 ),
        .Q(Q[1]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__0_n_0 ),
        .Q(Q[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(br_fifo_reset),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(br_fifo_reset),
        .Q(rst_wr_reg2));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__0 
       (.I0(wr_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__0_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__0_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__0 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__0_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__0_n_0 ),
        .Q(\gic0.gc0.count_d2_reg[0] [0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__0_n_0 ),
        .Q(\gic0.gc0.count_d2_reg[0] [1]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized1
   (rst_full_ff_i,
    rst_full_gen_i,
    Q,
    \gic0.gc0.count_d2_reg[0] ,
    clk_ph_out,
    br_fifo_reset,
    m_aclk);
  output rst_full_ff_i;
  output rst_full_gen_i;
  output [2:0]Q;
  output [1:0]\gic0.gc0.count_d2_reg[0] ;
  input clk_ph_out;
  input br_fifo_reset;
  input m_aclk;

  wire [2:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [1:0]\gic0.gc0.count_d2_reg[0] ;
  wire m_aclk;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__1_n_0 ;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d2;

  assign rst_full_ff_i = rst_d2;
  assign rst_full_gen_i = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(br_fifo_reset),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(br_fifo_reset),
        .Q(rst_d3));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__1 
       (.I0(rd_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__1_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__1_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__1 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__1_n_0 ),
        .Q(Q[0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__1_n_0 ),
        .Q(Q[1]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__1_n_0 ),
        .Q(Q[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(br_fifo_reset),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(br_fifo_reset),
        .Q(rst_wr_reg2));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__1 
       (.I0(wr_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__1_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__1 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__1_n_0 ),
        .Q(\gic0.gc0.count_d2_reg[0] [0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__1_n_0 ),
        .Q(\gic0.gc0.count_d2_reg[0] [1]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized2
   (rst_full_ff_i,
    rst_full_gen_i,
    Q,
    \gic0.gc0.count_d2_reg[0] ,
    m_aclk,
    br_fifo_reset,
    clk_ph_out);
  output rst_full_ff_i;
  output rst_full_gen_i;
  output [2:0]Q;
  output [1:0]\gic0.gc0.count_d2_reg[0] ;
  input m_aclk;
  input br_fifo_reset;
  input clk_ph_out;

  wire [2:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [1:0]\gic0.gc0.count_d2_reg[0] ;
  wire m_aclk;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__2_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__2_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__2_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__2_n_0 ;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d2;

  assign rst_full_ff_i = rst_d2;
  assign rst_full_gen_i = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(br_fifo_reset),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(br_fifo_reset),
        .Q(rst_d3));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__2 
       (.I0(rd_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__2_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__2_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__2 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__2_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__2_n_0 ),
        .Q(Q[0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__2_n_0 ),
        .Q(Q[1]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__2_n_0 ),
        .Q(Q[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(br_fifo_reset),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(br_fifo_reset),
        .Q(rst_wr_reg2));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__2 
       (.I0(wr_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__2_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__2_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__2 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__2_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__2_n_0 ),
        .Q(\gic0.gc0.count_d2_reg[0] [0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__2_n_0 ),
        .Q(\gic0.gc0.count_d2_reg[0] [1]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized3
   ();

  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(1'b1),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(1'b1),
        .Q(rst_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(1'b1),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(1'b1),
        .Q(rst_wr_reg2));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized4
   (rst_full_ff_i,
    rst_full_gen_i,
    Q,
    \gc0.count_d1_reg[7] ,
    m_aclk,
    br_fifo_reset,
    clk_ph_out);
  output rst_full_ff_i;
  output rst_full_gen_i;
  output [1:0]Q;
  output [2:0]\gc0.count_d1_reg[7] ;
  input m_aclk;
  input br_fifo_reset;
  input clk_ph_out;

  wire [1:0]Q;
  wire br_fifo_reset;
  wire clk_ph_out;
  wire [2:0]\gc0.count_d1_reg[7] ;
  wire m_aclk;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__3_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__3_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__3_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__3_n_0 ;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d2;

  assign rst_full_ff_i = rst_d2;
  assign rst_full_gen_i = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(br_fifo_reset),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(br_fifo_reset),
        .Q(rst_d3));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__3 
       (.I0(rd_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__3_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__3_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__3 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__3_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__3_n_0 ),
        .Q(\gc0.count_d1_reg[7] [0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__3_n_0 ),
        .Q(\gc0.count_d1_reg[7] [1]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__3_n_0 ),
        .Q(\gc0.count_d1_reg[7] [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(br_fifo_reset),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(br_fifo_reset),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(br_fifo_reset),
        .Q(rst_wr_reg2));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__3 
       (.I0(wr_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__3_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(m_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__3_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__3 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__3_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__3_n_0 ),
        .Q(Q[0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__3_n_0 ),
        .Q(Q[1]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized5
   ();

  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(1'b1),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(1'b1),
        .Q(rst_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(1'b1),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(1'b1),
        .Q(rst_wr_reg2));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized6
   (rst_full_ff_i,
    rst_full_gen_i,
    Q,
    \gic0.gc0.count_reg[0] ,
    m_axi_lite_aclk,
    fifo_reset,
    clk_ph_out);
  output rst_full_ff_i;
  output rst_full_gen_i;
  output [2:0]Q;
  output [1:0]\gic0.gc0.count_reg[0] ;
  input m_axi_lite_aclk;
  input fifo_reset;
  input clk_ph_out;

  wire [2:0]Q;
  wire clk_ph_out;
  wire fifo_reset;
  wire [1:0]\gic0.gc0.count_reg[0] ;
  wire m_axi_lite_aclk;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__4_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__4_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__4_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__4_n_0 ;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d2;

  assign rst_full_ff_i = rst_d2;
  assign rst_full_gen_i = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(fifo_reset),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(fifo_reset),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(fifo_reset),
        .Q(rst_d3));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__4 
       (.I0(rd_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__4_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__4_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__4 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__4_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__4_n_0 ),
        .Q(Q[0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__4_n_0 ),
        .Q(Q[1]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__4_n_0 ),
        .Q(Q[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(fifo_reset),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(fifo_reset),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(fifo_reset),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(fifo_reset),
        .Q(rst_wr_reg2));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__4 
       (.I0(wr_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__4_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__4_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__4 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__4_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__4_n_0 ),
        .Q(\gic0.gc0.count_reg[0] [0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__4_n_0 ),
        .Q(\gic0.gc0.count_reg[0] [1]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized7
   ();

  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(1'b1),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(1'b1),
        .Q(rst_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(1'b1),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(1'b0),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(1'b1),
        .Q(rst_wr_reg2));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module v7_bd_axi_chip2chip_0_0_reset_blk_ramfifo__parameterized8
   (rst_full_ff_i,
    rst_full_gen_i,
    Q,
    \gic0.gc0.count_d1_reg[1] ,
    clk_ph_out,
    fifo_reset,
    m_axi_lite_aclk);
  output rst_full_ff_i;
  output rst_full_gen_i;
  output [2:0]Q;
  output [1:0]\gic0.gc0.count_d1_reg[1] ;
  input clk_ph_out;
  input fifo_reset;
  input m_axi_lite_aclk;

  wire [2:0]Q;
  wire clk_ph_out;
  wire fifo_reset;
  wire [1:0]\gic0.gc0.count_d1_reg[1] ;
  wire m_axi_lite_aclk;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__5_n_0 ;
  wire \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__5_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__5_n_0 ;
  wire \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__5_n_0 ;
  wire rd_rst_asreg;
  wire rd_rst_asreg_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_rst_asreg;
  wire wr_rst_asreg_d2;

  assign rst_full_ff_i = rst_d2;
  assign rst_full_gen_i = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(fifo_reset),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(fifo_reset),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(fifo_reset),
        .Q(rst_d3));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(rd_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_d2_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .Q(rd_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__5 
       (.I0(rd_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.rd_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__5_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1__5_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__5 
       (.I0(rd_rst_asreg),
        .I1(rd_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__5_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__5_n_0 ),
        .Q(Q[0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__5_n_0 ),
        .Q(Q[1]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1__5_n_0 ),
        .Q(Q[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(fifo_reset),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(fifo_reset),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(fifo_reset),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(fifo_reset),
        .Q(rst_wr_reg2));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(wr_rst_asreg),
        .Q(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_d2_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .Q(wr_rst_asreg_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__5 
       (.I0(wr_rst_asreg),
        .I1(\ngwrdrst.grst.g7serrst.wr_rst_asreg_d1_reg_n_0 ),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__5_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1__5_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__5 
       (.I0(wr_rst_asreg),
        .I1(wr_rst_asreg_d2),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__5_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__5_n_0 ),
        .Q(\gic0.gc0.count_d1_reg[1] [0]));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg[1]_i_1__5_n_0 ),
        .Q(\gic0.gc0.count_d1_reg[1] [1]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff
   (D,
    Q,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]Q;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [7:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_10
   (D,
    \Q_reg_reg[7]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_11
   (D,
    \Q_reg_reg[7]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_12
   (D,
    \Q_reg_reg[7]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_13
   (out,
    \wr_pntr_bin_reg[6] ,
    D,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [0:0]out;
  output [6:0]\wr_pntr_bin_reg[6] ;
  input [7:0]D;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [7:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire \wr_pntr_bin[0]_i_2__1_n_0 ;
  wire \wr_pntr_bin[1]_i_2__1_n_0 ;
  wire [6:0]\wr_pntr_bin_reg[6] ;

  assign out[0] = Q_reg[7];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[7]),
        .Q(Q_reg[7]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_pntr_bin[0]_i_1__1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[3]),
        .I2(Q_reg[0]),
        .I3(Q_reg[1]),
        .I4(\wr_pntr_bin[0]_i_2__1_n_0 ),
        .O(\wr_pntr_bin_reg[6] [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[0]_i_2__1 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\wr_pntr_bin[0]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[1]_i_1__1 
       (.I0(\wr_pntr_bin[1]_i_2__1_n_0 ),
        .I1(Q_reg[7]),
        .I2(Q_reg[5]),
        .I3(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[1]_i_2__1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[1]),
        .I2(Q_reg[4]),
        .I3(Q_reg[3]),
        .O(\wr_pntr_bin[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_pntr_bin[2]_i_1__3 
       (.I0(Q_reg[4]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(Q_reg[7]),
        .I4(Q_reg[5]),
        .I5(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_pntr_bin[3]_i_1__3 
       (.I0(Q_reg[5]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(Q_reg[7]),
        .I4(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[4]_i_1__3 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \wr_pntr_bin[5]_i_1__3 
       (.I0(Q_reg[6]),
        .I1(Q_reg[5]),
        .I2(Q_reg[7]),
        .O(\wr_pntr_bin_reg[6] [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_bin[6]_i_1__3 
       (.I0(Q_reg[6]),
        .I1(Q_reg[7]),
        .O(\wr_pntr_bin_reg[6] [6]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_14
   (out,
    \rd_pntr_bin_reg[6] ,
    D,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [0:0]out;
  output [6:0]\rd_pntr_bin_reg[6] ;
  input [7:0]D;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [7:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire \rd_pntr_bin[0]_i_2__1_n_0 ;
  wire \rd_pntr_bin[1]_i_2__1_n_0 ;
  wire [6:0]\rd_pntr_bin_reg[6] ;

  assign out[0] = Q_reg[7];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[7]),
        .Q(Q_reg[7]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \rd_pntr_bin[0]_i_1__1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[3]),
        .I2(Q_reg[0]),
        .I3(Q_reg[1]),
        .I4(\rd_pntr_bin[0]_i_2__1_n_0 ),
        .O(\rd_pntr_bin_reg[6] [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[0]_i_2__1 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\rd_pntr_bin[0]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[1]_i_1__1 
       (.I0(\rd_pntr_bin[1]_i_2__1_n_0 ),
        .I1(Q_reg[7]),
        .I2(Q_reg[5]),
        .I3(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[1]_i_2__1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[1]),
        .I2(Q_reg[4]),
        .I3(Q_reg[3]),
        .O(\rd_pntr_bin[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \rd_pntr_bin[2]_i_1__3 
       (.I0(Q_reg[4]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(Q_reg[7]),
        .I4(Q_reg[5]),
        .I5(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \rd_pntr_bin[3]_i_1__3 
       (.I0(Q_reg[5]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(Q_reg[7]),
        .I4(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[4]_i_1__3 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \rd_pntr_bin[5]_i_1__3 
       (.I0(Q_reg[6]),
        .I1(Q_reg[5]),
        .I2(Q_reg[7]),
        .O(\rd_pntr_bin_reg[6] [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_bin[6]_i_1__3 
       (.I0(Q_reg[6]),
        .I1(Q_reg[7]),
        .O(\rd_pntr_bin_reg[6] [6]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_24
   (D,
    Q,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]Q;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [7:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_25
   (D,
    Q,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]Q;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [7:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_26
   (D,
    \Q_reg_reg[7]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_27
   (D,
    \Q_reg_reg[7]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_28
   (D,
    \Q_reg_reg[7]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_29
   (D,
    \Q_reg_reg[7]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_30
   (D,
    \Q_reg_reg[7]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_31
   (D,
    \Q_reg_reg[7]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_32
   (out,
    \wr_pntr_bin_reg[6] ,
    D,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [0:0]out;
  output [6:0]\wr_pntr_bin_reg[6] ;
  input [7:0]D;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [7:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire \wr_pntr_bin[0]_i_2_n_0 ;
  wire \wr_pntr_bin[1]_i_2_n_0 ;
  wire [6:0]\wr_pntr_bin_reg[6] ;

  assign out[0] = Q_reg[7];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[7]),
        .Q(Q_reg[7]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_pntr_bin[0]_i_1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[3]),
        .I2(Q_reg[0]),
        .I3(Q_reg[1]),
        .I4(\wr_pntr_bin[0]_i_2_n_0 ),
        .O(\wr_pntr_bin_reg[6] [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[0]_i_2 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\wr_pntr_bin[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[1]_i_1 
       (.I0(\wr_pntr_bin[1]_i_2_n_0 ),
        .I1(Q_reg[7]),
        .I2(Q_reg[5]),
        .I3(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[1]_i_2 
       (.I0(Q_reg[2]),
        .I1(Q_reg[1]),
        .I2(Q_reg[4]),
        .I3(Q_reg[3]),
        .O(\wr_pntr_bin[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_pntr_bin[2]_i_1 
       (.I0(Q_reg[4]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(Q_reg[7]),
        .I4(Q_reg[5]),
        .I5(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_pntr_bin[3]_i_1 
       (.I0(Q_reg[5]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(Q_reg[7]),
        .I4(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[4]_i_1 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \wr_pntr_bin[5]_i_1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[5]),
        .I2(Q_reg[7]),
        .O(\wr_pntr_bin_reg[6] [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_bin[6]_i_1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[7]),
        .O(\wr_pntr_bin_reg[6] [6]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_33
   (out,
    \rd_pntr_bin_reg[6] ,
    D,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [0:0]out;
  output [6:0]\rd_pntr_bin_reg[6] ;
  input [7:0]D;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [7:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire \rd_pntr_bin[0]_i_2_n_0 ;
  wire \rd_pntr_bin[1]_i_2_n_0 ;
  wire [6:0]\rd_pntr_bin_reg[6] ;

  assign out[0] = Q_reg[7];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[7]),
        .Q(Q_reg[7]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \rd_pntr_bin[0]_i_1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[3]),
        .I2(Q_reg[0]),
        .I3(Q_reg[1]),
        .I4(\rd_pntr_bin[0]_i_2_n_0 ),
        .O(\rd_pntr_bin_reg[6] [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[0]_i_2 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\rd_pntr_bin[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[1]_i_1 
       (.I0(\rd_pntr_bin[1]_i_2_n_0 ),
        .I1(Q_reg[7]),
        .I2(Q_reg[5]),
        .I3(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[1]_i_2 
       (.I0(Q_reg[2]),
        .I1(Q_reg[1]),
        .I2(Q_reg[4]),
        .I3(Q_reg[3]),
        .O(\rd_pntr_bin[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \rd_pntr_bin[2]_i_1 
       (.I0(Q_reg[4]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(Q_reg[7]),
        .I4(Q_reg[5]),
        .I5(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \rd_pntr_bin[3]_i_1 
       (.I0(Q_reg[5]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(Q_reg[7]),
        .I4(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[4]_i_1 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \rd_pntr_bin[5]_i_1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[5]),
        .I2(Q_reg[7]),
        .O(\rd_pntr_bin_reg[6] [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_bin[6]_i_1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[7]),
        .O(\rd_pntr_bin_reg[6] [6]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_58
   (D,
    Q,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]Q;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [7:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_59
   (D,
    Q,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]Q;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [7:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_6
   (D,
    Q,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]Q;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [7:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_60
   (D,
    \Q_reg_reg[7]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_61
   (D,
    \Q_reg_reg[7]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_62
   (D,
    \Q_reg_reg[7]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_63
   (D,
    \Q_reg_reg[7]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_64
   (D,
    \Q_reg_reg[7]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_65
   (D,
    \Q_reg_reg[7]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_66
   (out,
    \wr_pntr_bin_reg[6] ,
    D,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [0:0]out;
  output [6:0]\wr_pntr_bin_reg[6] ;
  input [7:0]D;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [7:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire \wr_pntr_bin[0]_i_2__0_n_0 ;
  wire \wr_pntr_bin[1]_i_2__0_n_0 ;
  wire [6:0]\wr_pntr_bin_reg[6] ;

  assign out[0] = Q_reg[7];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[7]),
        .Q(Q_reg[7]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_pntr_bin[0]_i_1__0 
       (.I0(Q_reg[2]),
        .I1(Q_reg[3]),
        .I2(Q_reg[0]),
        .I3(Q_reg[1]),
        .I4(\wr_pntr_bin[0]_i_2__0_n_0 ),
        .O(\wr_pntr_bin_reg[6] [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[0]_i_2__0 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\wr_pntr_bin[0]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[1]_i_1__0 
       (.I0(\wr_pntr_bin[1]_i_2__0_n_0 ),
        .I1(Q_reg[7]),
        .I2(Q_reg[5]),
        .I3(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[1]_i_2__0 
       (.I0(Q_reg[2]),
        .I1(Q_reg[1]),
        .I2(Q_reg[4]),
        .I3(Q_reg[3]),
        .O(\wr_pntr_bin[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_pntr_bin[2]_i_1__0 
       (.I0(Q_reg[4]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(Q_reg[7]),
        .I4(Q_reg[5]),
        .I5(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_pntr_bin[3]_i_1__0 
       (.I0(Q_reg[5]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(Q_reg[7]),
        .I4(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[4]_i_1__0 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\wr_pntr_bin_reg[6] [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \wr_pntr_bin[5]_i_1__0 
       (.I0(Q_reg[6]),
        .I1(Q_reg[5]),
        .I2(Q_reg[7]),
        .O(\wr_pntr_bin_reg[6] [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_bin[6]_i_1__0 
       (.I0(Q_reg[6]),
        .I1(Q_reg[7]),
        .O(\wr_pntr_bin_reg[6] [6]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_67
   (out,
    \rd_pntr_bin_reg[6] ,
    D,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [0:0]out;
  output [6:0]\rd_pntr_bin_reg[6] ;
  input [7:0]D;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [7:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire \rd_pntr_bin[0]_i_2__0_n_0 ;
  wire \rd_pntr_bin[1]_i_2__0_n_0 ;
  wire [6:0]\rd_pntr_bin_reg[6] ;

  assign out[0] = Q_reg[7];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[7]),
        .Q(Q_reg[7]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \rd_pntr_bin[0]_i_1__0 
       (.I0(Q_reg[2]),
        .I1(Q_reg[3]),
        .I2(Q_reg[0]),
        .I3(Q_reg[1]),
        .I4(\rd_pntr_bin[0]_i_2__0_n_0 ),
        .O(\rd_pntr_bin_reg[6] [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[0]_i_2__0 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\rd_pntr_bin[0]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[1]_i_1__0 
       (.I0(\rd_pntr_bin[1]_i_2__0_n_0 ),
        .I1(Q_reg[7]),
        .I2(Q_reg[5]),
        .I3(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[1]_i_2__0 
       (.I0(Q_reg[2]),
        .I1(Q_reg[1]),
        .I2(Q_reg[4]),
        .I3(Q_reg[3]),
        .O(\rd_pntr_bin[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \rd_pntr_bin[2]_i_1__0 
       (.I0(Q_reg[4]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(Q_reg[7]),
        .I4(Q_reg[5]),
        .I5(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \rd_pntr_bin[3]_i_1__0 
       (.I0(Q_reg[5]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(Q_reg[7]),
        .I4(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[4]_i_1__0 
       (.I0(Q_reg[5]),
        .I1(Q_reg[4]),
        .I2(Q_reg[7]),
        .I3(Q_reg[6]),
        .O(\rd_pntr_bin_reg[6] [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \rd_pntr_bin[5]_i_1__0 
       (.I0(Q_reg[6]),
        .I1(Q_reg[5]),
        .I2(Q_reg[7]),
        .O(\rd_pntr_bin_reg[6] [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_bin[6]_i_1__0 
       (.I0(Q_reg[6]),
        .I1(Q_reg[7]),
        .O(\rd_pntr_bin_reg[6] [6]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_7
   (D,
    \Q_reg_reg[7]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_8
   (D,
    \Q_reg_reg[7]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff_9
   (D,
    \Q_reg_reg[7]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [7:0]D;
  input [7:0]\Q_reg_reg[7]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [7:0]Q_reg;
  wire [7:0]\Q_reg_reg[7]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[7:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[7]_0 [7]),
        .Q(Q_reg[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized0
   (D,
    Q,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [8:0]D;
  input [8:0]Q;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [8:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized1
   (D,
    Q,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [8:0]D;
  input [8:0]Q;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [8:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized10
   (D,
    Q,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [8:0]D;
  input [8:0]Q;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [8:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized11
   (D,
    Q,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [8:0]D;
  input [8:0]Q;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [8:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized12
   (D,
    \Q_reg_reg[8]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized13
   (D,
    \Q_reg_reg[8]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized14
   (D,
    \Q_reg_reg[8]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized15
   (D,
    \Q_reg_reg[8]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized16
   (D,
    \Q_reg_reg[8]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized17
   (D,
    \Q_reg_reg[8]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized18
   (out,
    D,
    \Q_reg_reg[8]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [0:0]out;
  output [7:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [7:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire \wr_pntr_bin[2]_i_2__0_n_0 ;

  assign out[0] = Q_reg[8];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_pntr_bin[0]_i_1__5 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\wr_pntr_bin[2]_i_2__0_n_0 ),
        .I4(Q_reg[1]),
        .I5(Q_reg[0]),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_pntr_bin[1]_i_1__5 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\wr_pntr_bin[2]_i_2__0_n_0 ),
        .I4(Q_reg[1]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[2]_i_1__2 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\wr_pntr_bin[2]_i_2__0_n_0 ),
        .O(D[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[2]_i_2__0 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[5]),
        .I3(Q_reg[4]),
        .O(\wr_pntr_bin[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_pntr_bin[3]_i_1__2 
       (.I0(Q_reg[5]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(Q_reg[8]),
        .I4(Q_reg[6]),
        .I5(Q_reg[7]),
        .O(D[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_pntr_bin[4]_i_1__2 
       (.I0(Q_reg[6]),
        .I1(Q_reg[4]),
        .I2(Q_reg[5]),
        .I3(Q_reg[8]),
        .I4(Q_reg[7]),
        .O(D[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[5]_i_1__2 
       (.I0(Q_reg[6]),
        .I1(Q_reg[5]),
        .I2(Q_reg[8]),
        .I3(Q_reg[7]),
        .O(D[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \wr_pntr_bin[6]_i_1__2 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[8]),
        .O(D[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_bin[7]_i_1__0 
       (.I0(Q_reg[7]),
        .I1(Q_reg[8]),
        .O(D[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized19
   (out,
    D,
    \Q_reg_reg[8]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [0:0]out;
  output [7:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [7:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire \rd_pntr_bin[2]_i_2__0_n_0 ;

  assign out[0] = Q_reg[8];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \rd_pntr_bin[0]_i_1__5 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\rd_pntr_bin[2]_i_2__0_n_0 ),
        .I4(Q_reg[1]),
        .I5(Q_reg[0]),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \rd_pntr_bin[1]_i_1__5 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\rd_pntr_bin[2]_i_2__0_n_0 ),
        .I4(Q_reg[1]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[2]_i_1__2 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\rd_pntr_bin[2]_i_2__0_n_0 ),
        .O(D[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[2]_i_2__0 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[5]),
        .I3(Q_reg[4]),
        .O(\rd_pntr_bin[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \rd_pntr_bin[3]_i_1__2 
       (.I0(Q_reg[5]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(Q_reg[8]),
        .I4(Q_reg[6]),
        .I5(Q_reg[7]),
        .O(D[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \rd_pntr_bin[4]_i_1__2 
       (.I0(Q_reg[6]),
        .I1(Q_reg[4]),
        .I2(Q_reg[5]),
        .I3(Q_reg[8]),
        .I4(Q_reg[7]),
        .O(D[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[5]_i_1__2 
       (.I0(Q_reg[6]),
        .I1(Q_reg[5]),
        .I2(Q_reg[8]),
        .I3(Q_reg[7]),
        .O(D[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \rd_pntr_bin[6]_i_1__2 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[8]),
        .O(D[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_bin[7]_i_1__0 
       (.I0(Q_reg[7]),
        .I1(Q_reg[8]),
        .O(D[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized2
   (D,
    \Q_reg_reg[8]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized20
   (D,
    Q,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [3:0]D;
  input [3:0]Q;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [3:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized21
   (D,
    Q,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [3:0]D;
  input [3:0]Q;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [3:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized22
   (D,
    \Q_reg_reg[3]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized23
   (D,
    \Q_reg_reg[3]_0 ,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized24
   (D,
    \Q_reg_reg[3]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized25
   (D,
    \Q_reg_reg[3]_0 ,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized26
   (D,
    \Q_reg_reg[3]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized27
   (D,
    \Q_reg_reg[3]_0 ,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized28
   (out,
    \wr_pntr_bin_reg[2] ,
    D,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [0:0]out;
  output [2:0]\wr_pntr_bin_reg[2] ;
  input [3:0]D;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [3:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire [2:0]\wr_pntr_bin_reg[2] ;

  assign out[0] = Q_reg[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[0]_i_1__2 
       (.I0(Q_reg[1]),
        .I1(Q_reg[0]),
        .I2(Q_reg[3]),
        .I3(Q_reg[2]),
        .O(\wr_pntr_bin_reg[2] [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \wr_pntr_bin[1]_i_1__2 
       (.I0(Q_reg[2]),
        .I1(Q_reg[1]),
        .I2(Q_reg[3]),
        .O(\wr_pntr_bin_reg[2] [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_bin[2]_i_1__4 
       (.I0(Q_reg[2]),
        .I1(Q_reg[3]),
        .O(\wr_pntr_bin_reg[2] [2]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized29
   (out,
    \rd_pntr_bin_reg[2] ,
    D,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [0:0]out;
  output [2:0]\rd_pntr_bin_reg[2] ;
  input [3:0]D;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [3:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire [2:0]\rd_pntr_bin_reg[2] ;

  assign out[0] = Q_reg[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[0]_i_1__2 
       (.I0(Q_reg[1]),
        .I1(Q_reg[0]),
        .I2(Q_reg[3]),
        .I3(Q_reg[2]),
        .O(\rd_pntr_bin_reg[2] [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \rd_pntr_bin[1]_i_1__2 
       (.I0(Q_reg[2]),
        .I1(Q_reg[1]),
        .I2(Q_reg[3]),
        .O(\rd_pntr_bin_reg[2] [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_bin[2]_i_1__4 
       (.I0(Q_reg[2]),
        .I1(Q_reg[3]),
        .O(\rd_pntr_bin_reg[2] [2]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized3
   (D,
    \Q_reg_reg[8]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized30
   (D,
    Q,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [3:0]D;
  input [3:0]Q;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [3:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized31
   (D,
    Q,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [3:0]D;
  input [3:0]Q;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [3:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized32
   (D,
    \Q_reg_reg[3]_0 ,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized33
   (D,
    \Q_reg_reg[3]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized34
   (D,
    \Q_reg_reg[3]_0 ,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized35
   (D,
    \Q_reg_reg[3]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized36
   (D,
    \Q_reg_reg[3]_0 ,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized37
   (D,
    \Q_reg_reg[3]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [3:0]D;
  input [3:0]\Q_reg_reg[3]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire [3:0]\Q_reg_reg[3]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[3:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[3]_0 [3]),
        .Q(Q_reg[3]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized38
   (out,
    \wr_pntr_bin_reg[2] ,
    D,
    m_axi_lite_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [0:0]out;
  output [2:0]\wr_pntr_bin_reg[2] ;
  input [3:0]D;
  input m_axi_lite_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [3:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire m_axi_lite_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire [2:0]\wr_pntr_bin_reg[2] ;

  assign out[0] = Q_reg[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[0]_i_1__3 
       (.I0(Q_reg[1]),
        .I1(Q_reg[0]),
        .I2(Q_reg[3]),
        .I3(Q_reg[2]),
        .O(\wr_pntr_bin_reg[2] [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \wr_pntr_bin[1]_i_1__3 
       (.I0(Q_reg[2]),
        .I1(Q_reg[1]),
        .I2(Q_reg[3]),
        .O(\wr_pntr_bin_reg[2] [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_bin[2]_i_1__5 
       (.I0(Q_reg[2]),
        .I1(Q_reg[3]),
        .O(\wr_pntr_bin_reg[2] [2]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized39
   (out,
    \rd_pntr_bin_reg[2] ,
    D,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [0:0]out;
  output [2:0]\rd_pntr_bin_reg[2] ;
  input [3:0]D;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [3:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [3:0]Q_reg;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire [2:0]\rd_pntr_bin_reg[2] ;

  assign out[0] = Q_reg[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[0]_i_1__3 
       (.I0(Q_reg[1]),
        .I1(Q_reg[0]),
        .I2(Q_reg[3]),
        .I3(Q_reg[2]),
        .O(\rd_pntr_bin_reg[2] [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \rd_pntr_bin[1]_i_1__3 
       (.I0(Q_reg[2]),
        .I1(Q_reg[1]),
        .I2(Q_reg[3]),
        .O(\rd_pntr_bin_reg[2] [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_bin[2]_i_1__5 
       (.I0(Q_reg[2]),
        .I1(Q_reg[3]),
        .O(\rd_pntr_bin_reg[2] [2]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized4
   (D,
    \Q_reg_reg[8]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized5
   (D,
    \Q_reg_reg[8]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized6
   (D,
    \Q_reg_reg[8]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized7
   (D,
    \Q_reg_reg[8]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [8:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  assign D[8:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized8
   (out,
    D,
    \Q_reg_reg[8]_0 ,
    m_aclk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [0:0]out;
  output [7:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [7:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire \wr_pntr_bin[2]_i_2_n_0 ;

  assign out[0] = Q_reg[8];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_pntr_bin[0]_i_1__4 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\wr_pntr_bin[2]_i_2_n_0 ),
        .I4(Q_reg[1]),
        .I5(Q_reg[0]),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_pntr_bin[1]_i_1__4 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\wr_pntr_bin[2]_i_2_n_0 ),
        .I4(Q_reg[1]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[2]_i_1__1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\wr_pntr_bin[2]_i_2_n_0 ),
        .O(D[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[2]_i_2 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[5]),
        .I3(Q_reg[4]),
        .O(\wr_pntr_bin[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_pntr_bin[3]_i_1__1 
       (.I0(Q_reg[5]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(Q_reg[8]),
        .I4(Q_reg[6]),
        .I5(Q_reg[7]),
        .O(D[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_pntr_bin[4]_i_1__1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[4]),
        .I2(Q_reg[5]),
        .I3(Q_reg[8]),
        .I4(Q_reg[7]),
        .O(D[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_pntr_bin[5]_i_1__1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[5]),
        .I2(Q_reg[8]),
        .I3(Q_reg[7]),
        .O(D[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \wr_pntr_bin[6]_i_1__1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[8]),
        .O(D[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_bin[7]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[8]),
        .O(D[7]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module v7_bd_axi_chip2chip_0_0_synchronizer_ff__parameterized9
   (out,
    D,
    \Q_reg_reg[8]_0 ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] );
  output [0:0]out;
  output [7:0]D;
  input [8:0]\Q_reg_reg[8]_0 ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;

  wire [7:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [8:0]Q_reg;
  wire [8:0]\Q_reg_reg[8]_0 ;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ;
  wire \rd_pntr_bin[2]_i_2_n_0 ;

  assign out[0] = Q_reg[8];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] ),
        .D(\Q_reg_reg[8]_0 [8]),
        .Q(Q_reg[8]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \rd_pntr_bin[0]_i_1__4 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\rd_pntr_bin[2]_i_2_n_0 ),
        .I4(Q_reg[1]),
        .I5(Q_reg[0]),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \rd_pntr_bin[1]_i_1__4 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\rd_pntr_bin[2]_i_2_n_0 ),
        .I4(Q_reg[1]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[2]_i_1__1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[2]),
        .I2(Q_reg[3]),
        .I3(\rd_pntr_bin[2]_i_2_n_0 ),
        .O(D[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[2]_i_2 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[5]),
        .I3(Q_reg[4]),
        .O(\rd_pntr_bin[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \rd_pntr_bin[3]_i_1__1 
       (.I0(Q_reg[5]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(Q_reg[8]),
        .I4(Q_reg[6]),
        .I5(Q_reg[7]),
        .O(D[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \rd_pntr_bin[4]_i_1__1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[4]),
        .I2(Q_reg[5]),
        .I3(Q_reg[8]),
        .I4(Q_reg[7]),
        .O(D[4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \rd_pntr_bin[5]_i_1__1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[5]),
        .I2(Q_reg[8]),
        .I3(Q_reg[7]),
        .O(D[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \rd_pntr_bin[6]_i_1__1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[8]),
        .O(D[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_pntr_bin[7]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[8]),
        .O(D[7]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_wr_bin_cntr
   (ram_full_i,
    \gpr1.dout_i_reg[0] ,
    Q,
    \gpr1.dout_i_reg[0]_0 ,
    p_0_in6_out,
    rst_full_gen_i,
    p_1_out,
    m_axi_bvalid,
    ram_full_i_reg,
    RD_PNTR_WR,
    E,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] );
  output ram_full_i;
  output \gpr1.dout_i_reg[0] ;
  output [7:0]Q;
  output \gpr1.dout_i_reg[0]_0 ;
  output [6:0]p_0_in6_out;
  input rst_full_gen_i;
  input p_1_out;
  input m_axi_bvalid;
  input ram_full_i_reg;
  input [7:0]RD_PNTR_WR;
  input [0:0]E;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;

  wire [0:0]E;
  wire [7:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire \gic0.gc0.count[7]_i_2__1_n_0 ;
  wire \gpr1.dout_i_reg[0] ;
  wire \gpr1.dout_i_reg[0]_0 ;
  wire \gwas.wsts/comp1 ;
  wire \gwas.wsts/comp2 ;
  wire m_aclk;
  wire m_axi_bvalid;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  wire [6:0]p_0_in6_out;
  wire [7:0]p_12_out;
  wire p_1_out;
  wire [7:0]plusOp__5;
  wire ram_full_fb_i_i_4__0_n_0;
  wire ram_full_fb_i_i_5__0_n_0;
  wire ram_full_fb_i_i_6_n_0;
  wire ram_full_fb_i_i_7_n_0;
  wire ram_full_fb_i_i_8_n_0;
  wire ram_full_fb_i_i_9_n_0;
  wire ram_full_i;
  wire ram_full_i_reg;
  wire rst_full_gen_i;
  wire [7:0]wr_pntr_plus2;

  LUT5 #(
    .INIT(32'h00000400)) 
    RAM_reg_128_191_0_2_i_1
       (.I0(Q[6]),
        .I1(Q[7]),
        .I2(ram_full_i_reg),
        .I3(m_axi_bvalid),
        .I4(p_1_out),
        .O(\gpr1.dout_i_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h00000400)) 
    RAM_reg_64_127_0_2_i_1
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(ram_full_i_reg),
        .I3(m_axi_bvalid),
        .I4(p_1_out),
        .O(\gpr1.dout_i_reg[0] ));
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1__4 
       (.I0(wr_pntr_plus2[0]),
        .O(plusOp__5[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1__4 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .O(plusOp__5[1]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1__4 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp__5[2]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1__4 
       (.I0(wr_pntr_plus2[1]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[2]),
        .I3(wr_pntr_plus2[3]),
        .O(plusOp__5[3]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1__3 
       (.I0(wr_pntr_plus2[2]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[3]),
        .I4(wr_pntr_plus2[4]),
        .O(plusOp__5[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc0.count[5]_i_1__3 
       (.I0(wr_pntr_plus2[3]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[0]),
        .I3(wr_pntr_plus2[2]),
        .I4(wr_pntr_plus2[4]),
        .I5(wr_pntr_plus2[5]),
        .O(plusOp__5[5]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[6]_i_1__3 
       (.I0(\gic0.gc0.count[7]_i_2__1_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .O(plusOp__5[6]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[7]_i_1__3 
       (.I0(\gic0.gc0.count[7]_i_2__1_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .I2(wr_pntr_plus2[7]),
        .O(plusOp__5[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc0.count[7]_i_2__1 
       (.I0(wr_pntr_plus2[5]),
        .I1(wr_pntr_plus2[3]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[0]),
        .I4(wr_pntr_plus2[2]),
        .I5(wr_pntr_plus2[4]),
        .O(\gic0.gc0.count[7]_i_2__1_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(p_12_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[1]),
        .Q(p_12_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[2]),
        .Q(p_12_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[3]),
        .Q(p_12_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[4]),
        .Q(p_12_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[5]),
        .Q(p_12_out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[6]),
        .Q(p_12_out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[7]),
        .Q(p_12_out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[7]),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__5[0]),
        .Q(wr_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .D(plusOp__5[1]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(wr_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__5[2]),
        .Q(wr_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__5[3]),
        .Q(wr_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__5[4]),
        .Q(wr_pntr_plus2[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__5[5]),
        .Q(wr_pntr_plus2[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__5[6]),
        .Q(wr_pntr_plus2[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__5[7]),
        .Q(wr_pntr_plus2[7]));
  LUT6 #(
    .INIT(64'h5555555500000400)) 
    ram_full_fb_i_i_1__0
       (.I0(rst_full_gen_i),
        .I1(\gwas.wsts/comp2 ),
        .I2(p_1_out),
        .I3(m_axi_bvalid),
        .I4(ram_full_i_reg),
        .I5(\gwas.wsts/comp1 ),
        .O(ram_full_i));
  LUT6 #(
    .INIT(64'h0000000041000041)) 
    ram_full_fb_i_i_2__0
       (.I0(ram_full_fb_i_i_4__0_n_0),
        .I1(wr_pntr_plus2[6]),
        .I2(RD_PNTR_WR[6]),
        .I3(wr_pntr_plus2[7]),
        .I4(RD_PNTR_WR[7]),
        .I5(ram_full_fb_i_i_5__0_n_0),
        .O(\gwas.wsts/comp2 ));
  LUT6 #(
    .INIT(64'h0000000041000041)) 
    ram_full_fb_i_i_3__0
       (.I0(ram_full_fb_i_i_6_n_0),
        .I1(p_12_out[6]),
        .I2(RD_PNTR_WR[6]),
        .I3(p_12_out[7]),
        .I4(RD_PNTR_WR[7]),
        .I5(ram_full_fb_i_i_7_n_0),
        .O(\gwas.wsts/comp1 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_fb_i_i_4__0
       (.I0(wr_pntr_plus2[5]),
        .I1(RD_PNTR_WR[5]),
        .I2(wr_pntr_plus2[4]),
        .I3(RD_PNTR_WR[4]),
        .O(ram_full_fb_i_i_4__0_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_full_fb_i_i_5__0
       (.I0(RD_PNTR_WR[2]),
        .I1(wr_pntr_plus2[2]),
        .I2(RD_PNTR_WR[3]),
        .I3(wr_pntr_plus2[3]),
        .I4(ram_full_fb_i_i_8_n_0),
        .O(ram_full_fb_i_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_fb_i_i_6
       (.I0(p_12_out[5]),
        .I1(RD_PNTR_WR[5]),
        .I2(p_12_out[4]),
        .I3(RD_PNTR_WR[4]),
        .O(ram_full_fb_i_i_6_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_full_fb_i_i_7
       (.I0(RD_PNTR_WR[2]),
        .I1(p_12_out[2]),
        .I2(RD_PNTR_WR[3]),
        .I3(p_12_out[3]),
        .I4(ram_full_fb_i_i_9_n_0),
        .O(ram_full_fb_i_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_fb_i_i_8
       (.I0(wr_pntr_plus2[1]),
        .I1(RD_PNTR_WR[1]),
        .I2(wr_pntr_plus2[0]),
        .I3(RD_PNTR_WR[0]),
        .O(ram_full_fb_i_i_8_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_fb_i_i_9
       (.I0(p_12_out[1]),
        .I1(RD_PNTR_WR[1]),
        .I2(p_12_out[0]),
        .I3(RD_PNTR_WR[0]),
        .O(ram_full_fb_i_i_9_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[0]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in6_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[1]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(p_0_in6_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[2]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(p_0_in6_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[3]_i_1__1 
       (.I0(Q[3]),
        .I1(Q[4]),
        .O(p_0_in6_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[4]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[5]),
        .O(p_0_in6_out[4]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[5]_i_1__1 
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(p_0_in6_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[6]_i_1__1 
       (.I0(Q[6]),
        .I1(Q[7]),
        .O(p_0_in6_out[6]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_wr_bin_cntr_20
   (ram_full_i,
    Q,
    \gdiff.diff_pntr_pad_reg[8] ,
    \gdiff.diff_pntr_pad_reg[7] ,
    S,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    p_0_in6_out,
    rst_full_gen_i,
    E,
    RD_PNTR_WR,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] );
  output ram_full_i;
  output [6:0]Q;
  output [0:0]\gdiff.diff_pntr_pad_reg[8] ;
  output [3:0]\gdiff.diff_pntr_pad_reg[7] ;
  output [2:0]S;
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output [6:0]p_0_in6_out;
  input rst_full_gen_i;
  input [0:0]E;
  input [7:0]RD_PNTR_WR;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire [2:0]S;
  wire clk_ph_out;
  wire [3:0]\gdiff.diff_pntr_pad_reg[7] ;
  wire [0:0]\gdiff.diff_pntr_pad_reg[8] ;
  wire \gic0.gc0.count[7]_i_2_n_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  wire [6:0]p_0_in6_out;
  wire [7:7]p_12_out;
  wire [7:0]plusOp;
  wire ram_full_i;
  wire ram_full_i_i_2_n_0;
  wire ram_full_i_i_3_n_0;
  wire ram_full_i_i_4_n_0;
  wire ram_full_i_i_5_n_0;
  wire ram_full_i_i_6_n_0;
  wire ram_full_i_i_7_n_0;
  wire ram_full_i_i_8_n_0;
  wire ram_full_i_i_9_n_0;
  wire rst_full_gen_i;
  wire [7:0]wr_pntr_plus2;

  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[3]_i_3 
       (.I0(Q[2]),
        .I1(RD_PNTR_WR[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[3]_i_4 
       (.I0(Q[1]),
        .I1(RD_PNTR_WR[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[3]_i_5 
       (.I0(Q[0]),
        .I1(RD_PNTR_WR[0]),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_2 
       (.I0(Q[6]),
        .I1(RD_PNTR_WR[6]),
        .O(\gdiff.diff_pntr_pad_reg[7] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_3 
       (.I0(Q[5]),
        .I1(RD_PNTR_WR[5]),
        .O(\gdiff.diff_pntr_pad_reg[7] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_4 
       (.I0(Q[4]),
        .I1(RD_PNTR_WR[4]),
        .O(\gdiff.diff_pntr_pad_reg[7] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_5 
       (.I0(Q[3]),
        .I1(RD_PNTR_WR[3]),
        .O(\gdiff.diff_pntr_pad_reg[7] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[8]_i_2 
       (.I0(p_12_out),
        .I1(RD_PNTR_WR[7]),
        .O(\gdiff.diff_pntr_pad_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(wr_pntr_plus2[0]),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(wr_pntr_plus2[1]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[2]),
        .I3(wr_pntr_plus2[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1 
       (.I0(wr_pntr_plus2[2]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[3]),
        .I4(wr_pntr_plus2[4]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc0.count[5]_i_1 
       (.I0(wr_pntr_plus2[3]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[0]),
        .I3(wr_pntr_plus2[2]),
        .I4(wr_pntr_plus2[4]),
        .I5(wr_pntr_plus2[5]),
        .O(plusOp[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[6]_i_1 
       (.I0(\gic0.gc0.count[7]_i_2_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .O(plusOp[6]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[7]_i_1 
       (.I0(\gic0.gc0.count[7]_i_2_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .I2(wr_pntr_plus2[7]),
        .O(plusOp[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc0.count[7]_i_2 
       (.I0(wr_pntr_plus2[5]),
        .I1(wr_pntr_plus2[3]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[0]),
        .I4(wr_pntr_plus2[2]),
        .I5(wr_pntr_plus2[4]),
        .O(\gic0.gc0.count[7]_i_2_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[7]),
        .Q(p_12_out));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp[0]),
        .Q(wr_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(plusOp[1]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(wr_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp[2]),
        .Q(wr_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp[3]),
        .Q(wr_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp[4]),
        .Q(wr_pntr_plus2[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp[5]),
        .Q(wr_pntr_plus2[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp[6]),
        .Q(wr_pntr_plus2[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp[7]),
        .Q(wr_pntr_plus2[7]));
  LUT6 #(
    .INIT(64'h0010FFFF00100010)) 
    ram_full_i_i_1
       (.I0(ram_full_i_i_2_n_0),
        .I1(rst_full_gen_i),
        .I2(E),
        .I3(ram_full_i_i_3_n_0),
        .I4(ram_full_i_i_4_n_0),
        .I5(ram_full_i_i_5_n_0),
        .O(ram_full_i));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_full_i_i_2
       (.I0(RD_PNTR_WR[5]),
        .I1(wr_pntr_plus2[5]),
        .I2(RD_PNTR_WR[4]),
        .I3(wr_pntr_plus2[4]),
        .I4(ram_full_i_i_6_n_0),
        .O(ram_full_i_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_full_i_i_3
       (.I0(RD_PNTR_WR[1]),
        .I1(wr_pntr_plus2[1]),
        .I2(RD_PNTR_WR[0]),
        .I3(wr_pntr_plus2[0]),
        .I4(ram_full_i_i_7_n_0),
        .O(ram_full_i_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_full_i_i_4
       (.I0(RD_PNTR_WR[5]),
        .I1(Q[5]),
        .I2(RD_PNTR_WR[4]),
        .I3(Q[4]),
        .I4(ram_full_i_i_8_n_0),
        .O(ram_full_i_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000041000041)) 
    ram_full_i_i_5
       (.I0(ram_full_i_i_9_n_0),
        .I1(Q[0]),
        .I2(RD_PNTR_WR[0]),
        .I3(Q[1]),
        .I4(RD_PNTR_WR[1]),
        .I5(rst_full_gen_i),
        .O(ram_full_i_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_i_i_6
       (.I0(wr_pntr_plus2[7]),
        .I1(RD_PNTR_WR[7]),
        .I2(wr_pntr_plus2[6]),
        .I3(RD_PNTR_WR[6]),
        .O(ram_full_i_i_6_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_i_i_7
       (.I0(wr_pntr_plus2[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(wr_pntr_plus2[3]),
        .I3(RD_PNTR_WR[3]),
        .O(ram_full_i_i_7_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_i_i_8
       (.I0(p_12_out),
        .I1(RD_PNTR_WR[7]),
        .I2(Q[6]),
        .I3(RD_PNTR_WR[6]),
        .O(ram_full_i_i_8_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_i_i_9
       (.I0(Q[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(Q[3]),
        .I3(RD_PNTR_WR[3]),
        .O(ram_full_i_i_9_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[0]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [0]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]),
        .O(p_0_in6_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[1]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]),
        .O(p_0_in6_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[2]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]),
        .O(p_0_in6_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[3]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]),
        .O(p_0_in6_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[4]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]),
        .O(p_0_in6_out[4]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[5]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]),
        .O(p_0_in6_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[6]_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [7]),
        .O(p_0_in6_out[6]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_wr_bin_cntr_54
   (ram_full_i,
    Q,
    \gdiff.diff_pntr_pad_reg[8] ,
    \gdiff.diff_pntr_pad_reg[7] ,
    S,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    D,
    rst_full_gen_i,
    E,
    \rd_pntr_bin_reg[7] ,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] );
  output ram_full_i;
  output [6:0]Q;
  output [0:0]\gdiff.diff_pntr_pad_reg[8] ;
  output [3:0]\gdiff.diff_pntr_pad_reg[7] ;
  output [2:0]S;
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output [6:0]D;
  input rst_full_gen_i;
  input [0:0]E;
  input [7:0]\rd_pntr_bin_reg[7] ;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;

  wire [6:0]D;
  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [2:0]S;
  wire clk_ph_out;
  wire [3:0]\gdiff.diff_pntr_pad_reg[7] ;
  wire [0:0]\gdiff.diff_pntr_pad_reg[8] ;
  wire \gic0.gc0.count[7]_i_2__0_n_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  wire [7:7]p_12_out;
  wire [7:0]plusOp__0;
  wire ram_full_i;
  wire ram_full_i_i_2__0_n_0;
  wire ram_full_i_i_3__0_n_0;
  wire ram_full_i_i_4__0_n_0;
  wire ram_full_i_i_5__0_n_0;
  wire ram_full_i_i_6__0_n_0;
  wire ram_full_i_i_7__0_n_0;
  wire ram_full_i_i_8__0_n_0;
  wire ram_full_i_i_9__0_n_0;
  wire [7:0]\rd_pntr_bin_reg[7] ;
  wire rst_full_gen_i;
  wire [7:0]wr_pntr_plus2;

  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[3]_i_3__0 
       (.I0(Q[2]),
        .I1(\rd_pntr_bin_reg[7] [2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[3]_i_4__0 
       (.I0(Q[1]),
        .I1(\rd_pntr_bin_reg[7] [1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[3]_i_5__0 
       (.I0(Q[0]),
        .I1(\rd_pntr_bin_reg[7] [0]),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_2__0 
       (.I0(Q[6]),
        .I1(\rd_pntr_bin_reg[7] [6]),
        .O(\gdiff.diff_pntr_pad_reg[7] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_3__0 
       (.I0(Q[5]),
        .I1(\rd_pntr_bin_reg[7] [5]),
        .O(\gdiff.diff_pntr_pad_reg[7] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_4__0 
       (.I0(Q[4]),
        .I1(\rd_pntr_bin_reg[7] [4]),
        .O(\gdiff.diff_pntr_pad_reg[7] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_5__0 
       (.I0(Q[3]),
        .I1(\rd_pntr_bin_reg[7] [3]),
        .O(\gdiff.diff_pntr_pad_reg[7] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[8]_i_2__0 
       (.I0(p_12_out),
        .I1(\rd_pntr_bin_reg[7] [7]),
        .O(\gdiff.diff_pntr_pad_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1__0 
       (.I0(wr_pntr_plus2[0]),
        .O(plusOp__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1__0 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1__0 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1__0 
       (.I0(wr_pntr_plus2[1]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[2]),
        .I3(wr_pntr_plus2[3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1__0 
       (.I0(wr_pntr_plus2[2]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[3]),
        .I4(wr_pntr_plus2[4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc0.count[5]_i_1__0 
       (.I0(wr_pntr_plus2[3]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[0]),
        .I3(wr_pntr_plus2[2]),
        .I4(wr_pntr_plus2[4]),
        .I5(wr_pntr_plus2[5]),
        .O(plusOp__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[6]_i_1__0 
       (.I0(\gic0.gc0.count[7]_i_2__0_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[7]_i_1__0 
       (.I0(\gic0.gc0.count[7]_i_2__0_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .I2(wr_pntr_plus2[7]),
        .O(plusOp__0[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc0.count[7]_i_2__0 
       (.I0(wr_pntr_plus2[5]),
        .I1(wr_pntr_plus2[3]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[0]),
        .I4(wr_pntr_plus2[2]),
        .I5(wr_pntr_plus2[4]),
        .O(\gic0.gc0.count[7]_i_2__0_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[7]),
        .Q(p_12_out));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__0[0]),
        .Q(wr_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(wr_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__0[2]),
        .Q(wr_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__0[3]),
        .Q(wr_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__0[4]),
        .Q(wr_pntr_plus2[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__0[5]),
        .Q(wr_pntr_plus2[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__0[6]),
        .Q(wr_pntr_plus2[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__0[7]),
        .Q(wr_pntr_plus2[7]));
  LUT6 #(
    .INIT(64'h0010FFFF00100010)) 
    ram_full_i_i_1__0
       (.I0(ram_full_i_i_2__0_n_0),
        .I1(rst_full_gen_i),
        .I2(E),
        .I3(ram_full_i_i_3__0_n_0),
        .I4(ram_full_i_i_4__0_n_0),
        .I5(ram_full_i_i_5__0_n_0),
        .O(ram_full_i));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_full_i_i_2__0
       (.I0(\rd_pntr_bin_reg[7] [5]),
        .I1(wr_pntr_plus2[5]),
        .I2(\rd_pntr_bin_reg[7] [4]),
        .I3(wr_pntr_plus2[4]),
        .I4(ram_full_i_i_6__0_n_0),
        .O(ram_full_i_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_full_i_i_3__0
       (.I0(\rd_pntr_bin_reg[7] [1]),
        .I1(wr_pntr_plus2[1]),
        .I2(\rd_pntr_bin_reg[7] [0]),
        .I3(wr_pntr_plus2[0]),
        .I4(ram_full_i_i_7__0_n_0),
        .O(ram_full_i_i_3__0_n_0));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    ram_full_i_i_4__0
       (.I0(\rd_pntr_bin_reg[7] [5]),
        .I1(Q[5]),
        .I2(\rd_pntr_bin_reg[7] [4]),
        .I3(Q[4]),
        .I4(ram_full_i_i_8__0_n_0),
        .O(ram_full_i_i_4__0_n_0));
  LUT6 #(
    .INIT(64'h0000000041000041)) 
    ram_full_i_i_5__0
       (.I0(ram_full_i_i_9__0_n_0),
        .I1(Q[0]),
        .I2(\rd_pntr_bin_reg[7] [0]),
        .I3(Q[1]),
        .I4(\rd_pntr_bin_reg[7] [1]),
        .I5(rst_full_gen_i),
        .O(ram_full_i_i_5__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_i_i_6__0
       (.I0(wr_pntr_plus2[7]),
        .I1(\rd_pntr_bin_reg[7] [7]),
        .I2(wr_pntr_plus2[6]),
        .I3(\rd_pntr_bin_reg[7] [6]),
        .O(ram_full_i_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_i_i_7__0
       (.I0(wr_pntr_plus2[2]),
        .I1(\rd_pntr_bin_reg[7] [2]),
        .I2(wr_pntr_plus2[3]),
        .I3(\rd_pntr_bin_reg[7] [3]),
        .O(ram_full_i_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_i_i_8__0
       (.I0(p_12_out),
        .I1(\rd_pntr_bin_reg[7] [7]),
        .I2(Q[6]),
        .I3(\rd_pntr_bin_reg[7] [6]),
        .O(ram_full_i_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_i_i_9__0
       (.I0(Q[2]),
        .I1(\rd_pntr_bin_reg[7] [2]),
        .I2(Q[3]),
        .I3(\rd_pntr_bin_reg[7] [3]),
        .O(ram_full_i_i_9__0_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[0]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [0]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[1]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[2]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[3]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[4]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[5]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_pntr_gc[6]_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]),
        .I1(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [7]),
        .O(D[6]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_wr_bin_cntr__parameterized0
   (Q,
    \gdiff.diff_pntr_pad_reg[9] ,
    \gic0.gc0.count_d2_reg[8]_0 ,
    \gdiff.diff_pntr_pad_reg[7] ,
    S,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    RD_PNTR_WR,
    E,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] );
  output [8:0]Q;
  output [1:0]\gdiff.diff_pntr_pad_reg[9] ;
  output [8:0]\gic0.gc0.count_d2_reg[8]_0 ;
  output [3:0]\gdiff.diff_pntr_pad_reg[7] ;
  output [2:0]S;
  output [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [8:0]RD_PNTR_WR;
  input [0:0]E;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;

  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire [2:0]S;
  wire clk_ph_out;
  wire [3:0]\gdiff.diff_pntr_pad_reg[7] ;
  wire [1:0]\gdiff.diff_pntr_pad_reg[9] ;
  wire \gic0.gc0.count[8]_i_2_n_0 ;
  wire [8:0]\gic0.gc0.count_d2_reg[8]_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  wire [8:0]plusOp__1;

  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[3]_i_3__1 
       (.I0(\gic0.gc0.count_d2_reg[8]_0 [2]),
        .I1(RD_PNTR_WR[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[3]_i_4__1 
       (.I0(\gic0.gc0.count_d2_reg[8]_0 [1]),
        .I1(RD_PNTR_WR[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[3]_i_5__1 
       (.I0(\gic0.gc0.count_d2_reg[8]_0 [0]),
        .I1(RD_PNTR_WR[0]),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_2__1 
       (.I0(\gic0.gc0.count_d2_reg[8]_0 [6]),
        .I1(RD_PNTR_WR[6]),
        .O(\gdiff.diff_pntr_pad_reg[7] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_3__1 
       (.I0(\gic0.gc0.count_d2_reg[8]_0 [5]),
        .I1(RD_PNTR_WR[5]),
        .O(\gdiff.diff_pntr_pad_reg[7] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_4__1 
       (.I0(\gic0.gc0.count_d2_reg[8]_0 [4]),
        .I1(RD_PNTR_WR[4]),
        .O(\gdiff.diff_pntr_pad_reg[7] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[7]_i_5__1 
       (.I0(\gic0.gc0.count_d2_reg[8]_0 [3]),
        .I1(RD_PNTR_WR[3]),
        .O(\gdiff.diff_pntr_pad_reg[7] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[9]_i_2 
       (.I0(\gic0.gc0.count_d2_reg[8]_0 [8]),
        .I1(RD_PNTR_WR[8]),
        .O(\gdiff.diff_pntr_pad_reg[9] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gdiff.diff_pntr_pad[9]_i_3 
       (.I0(\gic0.gc0.count_d2_reg[8]_0 [7]),
        .I1(RD_PNTR_WR[7]),
        .O(\gdiff.diff_pntr_pad_reg[9] [0]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1__1 
       (.I0(Q[0]),
        .O(plusOp__1[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(plusOp__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc0.count[5]_i_1__1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(plusOp__1[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[6]_i_1__1 
       (.I0(\gic0.gc0.count[8]_i_2_n_0 ),
        .I1(Q[6]),
        .O(plusOp__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[7]_i_1__1 
       (.I0(\gic0.gc0.count[8]_i_2_n_0 ),
        .I1(Q[6]),
        .I2(Q[7]),
        .O(plusOp__1[7]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[8]_i_1 
       (.I0(Q[6]),
        .I1(\gic0.gc0.count[8]_i_2_n_0 ),
        .I2(Q[7]),
        .I3(Q[8]),
        .O(plusOp__1[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc0.count[8]_i_2 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\gic0.gc0.count[8]_i_2_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(Q[0]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(\gic0.gc0.count_d2_reg[8]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(\gic0.gc0.count_d2_reg[8]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(\gic0.gc0.count_d2_reg[8]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(\gic0.gc0.count_d2_reg[8]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(\gic0.gc0.count_d2_reg[8]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[5]),
        .Q(\gic0.gc0.count_d2_reg[8]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[6]),
        .Q(\gic0.gc0.count_d2_reg[8]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[7]),
        .Q(\gic0.gc0.count_d2_reg[8]_0 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[8]),
        .Q(\gic0.gc0.count_d2_reg[8]_0 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gic0.gc0.count_d2_reg[8]_0 [0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gic0.gc0.count_d2_reg[8]_0 [1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gic0.gc0.count_d2_reg[8]_0 [2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gic0.gc0.count_d2_reg[8]_0 [3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gic0.gc0.count_d2_reg[8]_0 [4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gic0.gc0.count_d2_reg[8]_0 [5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gic0.gc0.count_d2_reg[8]_0 [6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gic0.gc0.count_d2_reg[8]_0 [7]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gic0.gc0.count_d2_reg[8]_0 [8]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__1[0]),
        .Q(Q[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(plusOp__1[1]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__1[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__1[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__1[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__1[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__1[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__1[7]),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__1[8]),
        .Q(Q[8]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_wr_bin_cntr__parameterized1
   (Q,
    v1_reg,
    v1_reg_0,
    \gic0.gc0.count_d2_reg[8]_0 ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    RD_PNTR_WR,
    E,
    m_aclk,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] );
  output [0:0]Q;
  output [3:0]v1_reg;
  output [3:0]v1_reg_0;
  output [0:0]\gic0.gc0.count_d2_reg[8]_0 ;
  output [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]RD_PNTR_WR;
  input [0:0]E;
  input m_aclk;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;

  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [0:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire \gic0.gc0.count[8]_i_2__0_n_0 ;
  wire [0:0]\gic0.gc0.count_d2_reg[8]_0 ;
  wire m_aclk;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  wire [7:0]p_12_out;
  wire [8:0]plusOp__4;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;
  wire [7:0]wr_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1__3 
       (.I0(wr_pntr_plus2[0]),
        .O(plusOp__4[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1__3 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .O(plusOp__4[1]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1__3 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp__4[2]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1__3 
       (.I0(wr_pntr_plus2[1]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[2]),
        .I3(wr_pntr_plus2[3]),
        .O(plusOp__4[3]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1__2 
       (.I0(wr_pntr_plus2[2]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[3]),
        .I4(wr_pntr_plus2[4]),
        .O(plusOp__4[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc0.count[5]_i_1__2 
       (.I0(wr_pntr_plus2[3]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[0]),
        .I3(wr_pntr_plus2[2]),
        .I4(wr_pntr_plus2[4]),
        .I5(wr_pntr_plus2[5]),
        .O(plusOp__4[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[6]_i_1__2 
       (.I0(\gic0.gc0.count[8]_i_2__0_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .O(plusOp__4[6]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[7]_i_1__2 
       (.I0(\gic0.gc0.count[8]_i_2__0_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .I2(wr_pntr_plus2[7]),
        .O(plusOp__4[7]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[8]_i_1__0 
       (.I0(wr_pntr_plus2[6]),
        .I1(\gic0.gc0.count[8]_i_2__0_n_0 ),
        .I2(wr_pntr_plus2[7]),
        .I3(Q),
        .O(plusOp__4[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc0.count[8]_i_2__0 
       (.I0(wr_pntr_plus2[5]),
        .I1(wr_pntr_plus2[3]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[0]),
        .I4(wr_pntr_plus2[2]),
        .I5(wr_pntr_plus2[4]),
        .O(\gic0.gc0.count[8]_i_2__0_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(p_12_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[1]),
        .Q(p_12_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[2]),
        .Q(p_12_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[3]),
        .Q(p_12_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[4]),
        .Q(p_12_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[5]),
        .Q(p_12_out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[6]),
        .Q(p_12_out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[7]),
        .Q(p_12_out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[8] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q),
        .Q(\gic0.gc0.count_d2_reg[8]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(p_12_out[7]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[8] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gic0.gc0.count_d2_reg[8]_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram [8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__4[0]),
        .Q(wr_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(m_aclk),
        .CE(E),
        .D(plusOp__4[1]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(wr_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__4[2]),
        .Q(wr_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__4[3]),
        .Q(wr_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__4[4]),
        .Q(wr_pntr_plus2[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[5] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__4[5]),
        .Q(wr_pntr_plus2[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[6] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__4[6]),
        .Q(wr_pntr_plus2[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[7] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__4[7]),
        .Q(wr_pntr_plus2[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[8] 
       (.C(m_aclk),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp__4[8]),
        .Q(Q));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__5 
       (.I0(p_12_out[0]),
        .I1(RD_PNTR_WR[0]),
        .I2(p_12_out[1]),
        .I3(RD_PNTR_WR[1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__6 
       (.I0(wr_pntr_plus2[0]),
        .I1(RD_PNTR_WR[0]),
        .I2(wr_pntr_plus2[1]),
        .I3(RD_PNTR_WR[1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__5 
       (.I0(p_12_out[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(p_12_out[3]),
        .I3(RD_PNTR_WR[3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__6 
       (.I0(wr_pntr_plus2[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(wr_pntr_plus2[3]),
        .I3(RD_PNTR_WR[3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__5 
       (.I0(p_12_out[4]),
        .I1(RD_PNTR_WR[4]),
        .I2(p_12_out[5]),
        .I3(RD_PNTR_WR[5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__6 
       (.I0(wr_pntr_plus2[4]),
        .I1(RD_PNTR_WR[4]),
        .I2(wr_pntr_plus2[5]),
        .I3(RD_PNTR_WR[5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__5 
       (.I0(p_12_out[6]),
        .I1(RD_PNTR_WR[6]),
        .I2(p_12_out[7]),
        .I3(RD_PNTR_WR[7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__6 
       (.I0(wr_pntr_plus2[6]),
        .I1(RD_PNTR_WR[6]),
        .I2(wr_pntr_plus2[7]),
        .I3(RD_PNTR_WR[7]),
        .O(v1_reg_0[3]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_wr_bin_cntr__parameterized2
   (ram_full_i_0,
    D,
    \wr_pntr_gc_reg[3] ,
    rst_full_gen_i,
    p_1_out,
    tx_fifo_we,
    ram_full_i,
    \rd_pntr_bin_reg[3] ,
    E,
    m_axi_lite_aclk,
    Q);
  output ram_full_i_0;
  output [1:0]D;
  output [3:0]\wr_pntr_gc_reg[3] ;
  input rst_full_gen_i;
  input p_1_out;
  input tx_fifo_we;
  input ram_full_i;
  input [3:0]\rd_pntr_bin_reg[3] ;
  input [0:0]E;
  input m_axi_lite_aclk;
  input [0:0]Q;

  wire [1:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire \gdiff.diff_pntr_pad[4]_i_2_n_0 ;
  wire \gwas.wsts/comp1 ;
  wire \gwas.wsts/comp2 ;
  wire m_axi_lite_aclk;
  wire [3:0]p_12_out;
  wire p_1_out;
  wire [3:0]plusOp__2;
  wire ram_full_fb_i_i_4__1_n_0;
  wire ram_full_fb_i_i_5__1_n_0;
  wire ram_full_i;
  wire ram_full_i_0;
  wire [3:0]\rd_pntr_bin_reg[3] ;
  wire rst_full_gen_i;
  wire tx_fifo_we;
  wire [3:0]\wr_pntr_gc_reg[3] ;
  wire [3:0]wr_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gdiff.diff_pntr_pad[3]_i_1 
       (.I0(\gdiff.diff_pntr_pad[4]_i_2_n_0 ),
        .I1(\rd_pntr_bin_reg[3] [2]),
        .I2(p_12_out[2]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gdiff.diff_pntr_pad[4]_i_1 
       (.I0(\gdiff.diff_pntr_pad[4]_i_2_n_0 ),
        .I1(p_12_out[2]),
        .I2(\rd_pntr_bin_reg[3] [2]),
        .I3(\rd_pntr_bin_reg[3] [3]),
        .I4(p_12_out[3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'hD444DDD4)) 
    \gdiff.diff_pntr_pad[4]_i_2 
       (.I0(\rd_pntr_bin_reg[3] [1]),
        .I1(p_12_out[1]),
        .I2(E),
        .I3(p_12_out[0]),
        .I4(\rd_pntr_bin_reg[3] [0]),
        .O(\gdiff.diff_pntr_pad[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1__5 
       (.I0(wr_pntr_plus2[0]),
        .O(plusOp__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1__5 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .O(plusOp__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1__5 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1__5 
       (.I0(wr_pntr_plus2[1]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[2]),
        .I3(wr_pntr_plus2[3]),
        .O(plusOp__2[3]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .PRE(Q),
        .Q(p_12_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(Q),
        .D(wr_pntr_plus2[1]),
        .Q(p_12_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(Q),
        .D(wr_pntr_plus2[2]),
        .Q(p_12_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(Q),
        .D(wr_pntr_plus2[3]),
        .Q(p_12_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(Q),
        .D(p_12_out[0]),
        .Q(\wr_pntr_gc_reg[3] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(Q),
        .D(p_12_out[1]),
        .Q(\wr_pntr_gc_reg[3] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(Q),
        .D(p_12_out[2]),
        .Q(\wr_pntr_gc_reg[3] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(Q),
        .D(p_12_out[3]),
        .Q(\wr_pntr_gc_reg[3] [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(Q),
        .D(plusOp__2[0]),
        .Q(wr_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .D(plusOp__2[1]),
        .PRE(Q),
        .Q(wr_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(Q),
        .D(plusOp__2[2]),
        .Q(wr_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(E),
        .CLR(Q),
        .D(plusOp__2[3]),
        .Q(wr_pntr_plus2[3]));
  LUT6 #(
    .INIT(64'h5555555500000400)) 
    ram_full_fb_i_i_1__1
       (.I0(rst_full_gen_i),
        .I1(\gwas.wsts/comp2 ),
        .I2(p_1_out),
        .I3(tx_fifo_we),
        .I4(ram_full_i),
        .I5(\gwas.wsts/comp1 ),
        .O(ram_full_i_0));
  LUT5 #(
    .INIT(32'h00009009)) 
    ram_full_fb_i_i_2__1
       (.I0(\rd_pntr_bin_reg[3] [3]),
        .I1(wr_pntr_plus2[3]),
        .I2(\rd_pntr_bin_reg[3] [2]),
        .I3(wr_pntr_plus2[2]),
        .I4(ram_full_fb_i_i_4__1_n_0),
        .O(\gwas.wsts/comp2 ));
  LUT5 #(
    .INIT(32'h00009009)) 
    ram_full_fb_i_i_3__1
       (.I0(\rd_pntr_bin_reg[3] [3]),
        .I1(p_12_out[3]),
        .I2(\rd_pntr_bin_reg[3] [2]),
        .I3(p_12_out[2]),
        .I4(ram_full_fb_i_i_5__1_n_0),
        .O(\gwas.wsts/comp1 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_fb_i_i_4__1
       (.I0(wr_pntr_plus2[1]),
        .I1(\rd_pntr_bin_reg[3] [1]),
        .I2(wr_pntr_plus2[0]),
        .I3(\rd_pntr_bin_reg[3] [0]),
        .O(ram_full_fb_i_i_4__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_fb_i_i_5__1
       (.I0(p_12_out[1]),
        .I1(\rd_pntr_bin_reg[3] [1]),
        .I2(p_12_out[0]),
        .I3(\rd_pntr_bin_reg[3] [0]),
        .O(ram_full_fb_i_i_5__1_n_0));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module v7_bd_axi_chip2chip_0_0_wr_bin_cntr__parameterized3
   (ram_full_i_reg,
    Q,
    \wr_pntr_gc_reg[3] ,
    \rd_pntr_bin_reg[3] ,
    E,
    clk_ph_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] );
  output ram_full_i_reg;
  output [3:0]Q;
  output [3:0]\wr_pntr_gc_reg[3] ;
  input [3:0]\rd_pntr_bin_reg[3] ;
  input [0:0]E;
  input clk_ph_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;

  wire [0:0]E;
  wire [3:0]Q;
  wire clk_ph_out;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  wire [3:0]plusOp;
  wire ram_full_fb_i_i_4_n_0;
  wire ram_full_i_reg;
  wire [3:0]\rd_pntr_bin_reg[3] ;
  wire [3:0]\wr_pntr_gc_reg[3] ;
  wire [3:0]wr_pntr_plus2;

  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1__2 
       (.I0(wr_pntr_plus2[0]),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1__2 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1__2 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1__2 
       (.I0(wr_pntr_plus2[1]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[2]),
        .I3(wr_pntr_plus2[3]),
        .O(plusOp[3]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(wr_pntr_plus2[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(\wr_pntr_gc_reg[3] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(\wr_pntr_gc_reg[3] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(\wr_pntr_gc_reg[3] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(\wr_pntr_gc_reg[3] [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp[0]),
        .Q(wr_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(plusOp[1]),
        .PRE(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .Q(wr_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp[2]),
        .Q(wr_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(plusOp[3]),
        .Q(wr_pntr_plus2[3]));
  LUT5 #(
    .INIT(32'h00009009)) 
    ram_full_fb_i_i_2
       (.I0(\rd_pntr_bin_reg[3] [2]),
        .I1(wr_pntr_plus2[2]),
        .I2(\rd_pntr_bin_reg[3] [3]),
        .I3(wr_pntr_plus2[3]),
        .I4(ram_full_fb_i_i_4_n_0),
        .O(ram_full_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h6FF6)) 
    ram_full_fb_i_i_4
       (.I0(wr_pntr_plus2[0]),
        .I1(\rd_pntr_bin_reg[3] [0]),
        .I2(wr_pntr_plus2[1]),
        .I3(\rd_pntr_bin_reg[3] [1]),
        .O(ram_full_fb_i_i_4_n_0));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module v7_bd_axi_chip2chip_0_0_wr_logic
   (m_axi_bready,
    \gpr1.dout_i_reg[0] ,
    p_0_in6_out,
    Q,
    \gpr1.dout_i_reg[0]_0 ,
    \gpr1.dout_i_reg[0]_1 ,
    \gpr1.dout_i_reg[0]_2 ,
    m_aclk,
    rst_full_ff_i,
    m_axi_bvalid,
    rst_full_gen_i,
    RD_PNTR_WR,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] );
  output m_axi_bready;
  output \gpr1.dout_i_reg[0] ;
  output [7:0]p_0_in6_out;
  output [5:0]Q;
  output \gpr1.dout_i_reg[0]_0 ;
  output \gpr1.dout_i_reg[0]_1 ;
  output \gpr1.dout_i_reg[0]_2 ;
  input m_aclk;
  input rst_full_ff_i;
  input m_axi_bvalid;
  input rst_full_gen_i;
  input [7:0]RD_PNTR_WR;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;

  wire [5:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire \gpr1.dout_i_reg[0] ;
  wire \gpr1.dout_i_reg[0]_0 ;
  wire \gpr1.dout_i_reg[0]_1 ;
  wire \gpr1.dout_i_reg[0]_2 ;
  wire \gwas.wsts_n_1 ;
  wire \gwas.wsts_n_2 ;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  wire [7:0]p_0_in6_out;
  wire [6:6]p_11_out;
  wire p_1_out;
  wire ram_full_i;
  wire rst_full_ff_i;
  wire rst_full_gen_i;

  v7_bd_axi_chip2chip_0_0_wr_status_flags_as \gwas.wsts 
       (.E(\gwas.wsts_n_2 ),
        .Q({p_0_in6_out[7],p_11_out}),
        .\gic0.gc0.count_reg[7] (\gwas.wsts_n_1 ),
        .\gpr1.dout_i_reg[0] (\gpr1.dout_i_reg[0] ),
        .\gpr1.dout_i_reg[0]_0 (\gpr1.dout_i_reg[0]_2 ),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .p_1_out(p_1_out),
        .ram_full_i(ram_full_i),
        .rst_full_ff_i(rst_full_ff_i));
  v7_bd_axi_chip2chip_0_0_wr_bin_cntr wpntr
       (.E(\gwas.wsts_n_2 ),
        .Q({p_0_in6_out[7],p_11_out,Q}),
        .RD_PNTR_WR(RD_PNTR_WR),
        .\gpr1.dout_i_reg[0] (\gpr1.dout_i_reg[0]_0 ),
        .\gpr1.dout_i_reg[0]_0 (\gpr1.dout_i_reg[0]_1 ),
        .m_aclk(m_aclk),
        .m_axi_bvalid(m_axi_bvalid),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .p_0_in6_out(p_0_in6_out[6:0]),
        .p_1_out(p_1_out),
        .ram_full_i(ram_full_i),
        .ram_full_i_reg(\gwas.wsts_n_1 ),
        .rst_full_gen_i(rst_full_gen_i));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module v7_bd_axi_chip2chip_0_0_wr_logic_18
   (\gic0.gc0.count_reg[0] ,
    aw_ch_fc,
    E,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    p_0_in6_out,
    clk_ph_out,
    rst_full_ff_i,
    rst_full_gen_i,
    p_0_in,
    aw_ch_data_valid,
    RD_PNTR_WR,
    Q);
  output \gic0.gc0.count_reg[0] ;
  output aw_ch_fc;
  output [0:0]E;
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output [6:0]p_0_in6_out;
  input clk_ph_out;
  input rst_full_ff_i;
  input rst_full_gen_i;
  input p_0_in;
  input aw_ch_data_valid;
  input [7:0]RD_PNTR_WR;
  input [0:0]Q;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [0:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire aw_ch_data_valid;
  wire aw_ch_fc;
  wire clk_ph_out;
  wire \gic0.gc0.count_reg[0] ;
  wire \gwas.wsts_n_3 ;
  wire p_0_in;
  wire [6:0]p_0_in6_out;
  wire [6:0]p_12_out;
  wire p_1_out;
  wire ram_full_i;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire wpntr_n_10;
  wire wpntr_n_11;
  wire wpntr_n_12;
  wire wpntr_n_13;
  wire wpntr_n_14;
  wire wpntr_n_15;
  wire wpntr_n_8;
  wire wpntr_n_9;

  v7_bd_axi_chip2chip_0_0_wr_pf_as \gwas.gpf.wrpf 
       (.Q(Q),
        .S({wpntr_n_13,wpntr_n_14,wpntr_n_15}),
        .aw_ch_fc(aw_ch_fc),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_d1_reg[6] ({wpntr_n_9,wpntr_n_10,wpntr_n_11,wpntr_n_12}),
        .\gic0.gc0.count_d1_reg[7] (wpntr_n_8),
        .p_1_out(p_1_out),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i),
        .wr_pntr_plus1_pad({p_12_out,\gwas.wsts_n_3 }));
  v7_bd_axi_chip2chip_0_0_wr_status_flags_as_19 \gwas.wsts 
       (.E(E),
        .aw_ch_data_valid(aw_ch_data_valid),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_reg[0] (\gic0.gc0.count_reg[0] ),
        .p_0_in(p_0_in),
        .p_1_out(p_1_out),
        .ram_full_i(ram_full_i),
        .rst_full_ff_i(rst_full_ff_i),
        .wr_pntr_plus1_pad(\gwas.wsts_n_3 ));
  v7_bd_axi_chip2chip_0_0_wr_bin_cntr_20 wpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .Q(p_12_out),
        .RD_PNTR_WR(RD_PNTR_WR),
        .S({wpntr_n_13,wpntr_n_14,wpntr_n_15}),
        .clk_ph_out(clk_ph_out),
        .\gdiff.diff_pntr_pad_reg[7] ({wpntr_n_9,wpntr_n_10,wpntr_n_11,wpntr_n_12}),
        .\gdiff.diff_pntr_pad_reg[8] (wpntr_n_8),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] (Q),
        .p_0_in6_out(p_0_in6_out),
        .ram_full_i(ram_full_i),
        .rst_full_gen_i(rst_full_gen_i));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module v7_bd_axi_chip2chip_0_0_wr_logic_43
   (\gic0.gc0.count_reg[7] ,
    ar_ch_fc,
    E,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    D,
    clk_ph_out,
    rst_full_ff_i,
    rst_full_gen_i,
    p_0_in,
    ar_ch_data_valid,
    \rd_pntr_bin_reg[7] ,
    Q);
  output \gic0.gc0.count_reg[7] ;
  output ar_ch_fc;
  output [0:0]E;
  output [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output [6:0]D;
  input clk_ph_out;
  input rst_full_ff_i;
  input rst_full_gen_i;
  input p_0_in;
  input ar_ch_data_valid;
  input [7:0]\rd_pntr_bin_reg[7] ;
  input [0:0]Q;

  wire [6:0]D;
  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [0:0]Q;
  wire ar_ch_data_valid;
  wire ar_ch_fc;
  wire clk_ph_out;
  wire \gic0.gc0.count_reg[7] ;
  wire \gwas.wsts_n_3 ;
  wire p_0_in;
  wire [6:0]p_12_out;
  wire p_1_out;
  wire ram_full_i;
  wire [7:0]\rd_pntr_bin_reg[7] ;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire wpntr_n_10;
  wire wpntr_n_11;
  wire wpntr_n_12;
  wire wpntr_n_13;
  wire wpntr_n_14;
  wire wpntr_n_15;
  wire wpntr_n_8;
  wire wpntr_n_9;

  v7_bd_axi_chip2chip_0_0_wr_pf_as_52 \gwas.gpf.wrpf 
       (.Q(Q),
        .S({wpntr_n_13,wpntr_n_14,wpntr_n_15}),
        .ar_ch_fc(ar_ch_fc),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_d1_reg[6] ({wpntr_n_9,wpntr_n_10,wpntr_n_11,wpntr_n_12}),
        .\gic0.gc0.count_d1_reg[7] (wpntr_n_8),
        .p_1_out(p_1_out),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i),
        .wr_pntr_plus1_pad({p_12_out,\gwas.wsts_n_3 }));
  v7_bd_axi_chip2chip_0_0_wr_status_flags_as_53 \gwas.wsts 
       (.E(E),
        .ar_ch_data_valid(ar_ch_data_valid),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_reg[7] (\gic0.gc0.count_reg[7] ),
        .p_0_in(p_0_in),
        .p_1_out(p_1_out),
        .ram_full_i(ram_full_i),
        .rst_full_ff_i(rst_full_ff_i),
        .wr_pntr_plus1_pad(\gwas.wsts_n_3 ));
  v7_bd_axi_chip2chip_0_0_wr_bin_cntr_54 wpntr
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .Q(p_12_out),
        .S({wpntr_n_13,wpntr_n_14,wpntr_n_15}),
        .clk_ph_out(clk_ph_out),
        .\gdiff.diff_pntr_pad_reg[7] ({wpntr_n_9,wpntr_n_10,wpntr_n_11,wpntr_n_12}),
        .\gdiff.diff_pntr_pad_reg[8] (wpntr_n_8),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] (Q),
        .ram_full_i(ram_full_i),
        .\rd_pntr_bin_reg[7] (\rd_pntr_bin_reg[7] ),
        .rst_full_gen_i(rst_full_gen_i));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module v7_bd_axi_chip2chip_0_0_wr_logic__parameterized0
   (\gic0.gc0.count_reg[8] ,
    wd_ch_fc,
    Q,
    E,
    \gic0.gc0.count_d2_reg[8] ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    v1_reg,
    v1_reg_0,
    clk_ph_out,
    rst_full_ff_i,
    rst_full_gen_i,
    p_0_in,
    wd_ch_data_valid,
    RD_PNTR_WR,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] );
  output \gic0.gc0.count_reg[8] ;
  output wd_ch_fc;
  output [8:0]Q;
  output [0:0]E;
  output [8:0]\gic0.gc0.count_d2_reg[8] ;
  output [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input [4:0]v1_reg;
  input [4:0]v1_reg_0;
  input clk_ph_out;
  input rst_full_ff_i;
  input rst_full_gen_i;
  input p_0_in;
  input wd_ch_data_valid;
  input [8:0]RD_PNTR_WR;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;

  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [8:0]Q;
  wire [8:0]RD_PNTR_WR;
  wire clk_ph_out;
  wire [8:0]\gic0.gc0.count_d2_reg[8] ;
  wire \gic0.gc0.count_reg[8] ;
  wire \gwas.wsts_n_3 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  wire p_0_in;
  wire p_1_out;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;
  wire wd_ch_data_valid;
  wire wd_ch_fc;
  wire wpntr_n_10;
  wire wpntr_n_20;
  wire wpntr_n_21;
  wire wpntr_n_22;
  wire wpntr_n_23;
  wire wpntr_n_24;
  wire wpntr_n_25;
  wire wpntr_n_26;
  wire wpntr_n_9;

  v7_bd_axi_chip2chip_0_0_wr_pf_as__parameterized0 \gwas.gpf.wrpf 
       (.S({wpntr_n_24,wpntr_n_25,wpntr_n_26}),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_d1_reg[6] ({wpntr_n_20,wpntr_n_21,wpntr_n_22,wpntr_n_23}),
        .\gic0.gc0.count_d1_reg[8] ({wpntr_n_9,wpntr_n_10}),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .p_1_out(p_1_out),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i),
        .wd_ch_fc(wd_ch_fc),
        .wr_pntr_plus1_pad({\gic0.gc0.count_d2_reg[8] [7:0],\gwas.wsts_n_3 }));
  v7_bd_axi_chip2chip_0_0_wr_status_flags_as__parameterized0 \gwas.wsts 
       (.E(E),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_reg[8] (\gic0.gc0.count_reg[8] ),
        .p_0_in(p_0_in),
        .p_1_out(p_1_out),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i),
        .v1_reg(v1_reg),
        .v1_reg_0(v1_reg_0),
        .wd_ch_data_valid(wd_ch_data_valid),
        .wr_pntr_plus1_pad(\gwas.wsts_n_3 ));
  v7_bd_axi_chip2chip_0_0_wr_bin_cntr__parameterized0 wpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(E),
        .Q(Q),
        .RD_PNTR_WR(RD_PNTR_WR),
        .S({wpntr_n_24,wpntr_n_25,wpntr_n_26}),
        .clk_ph_out(clk_ph_out),
        .\gdiff.diff_pntr_pad_reg[7] ({wpntr_n_20,wpntr_n_21,wpntr_n_22,wpntr_n_23}),
        .\gdiff.diff_pntr_pad_reg[9] ({wpntr_n_9,wpntr_n_10}),
        .\gic0.gc0.count_d2_reg[8]_0 (\gic0.gc0.count_d2_reg[8] ),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module v7_bd_axi_chip2chip_0_0_wr_logic__parameterized1
   (WEBWE,
    m_axi_rready,
    Q,
    \gic0.gc0.count_d2_reg[8] ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    \rd_pntr_bin_reg[8] ,
    \rd_pntr_bin_reg[8]_0 ,
    m_aclk,
    rst_full_ff_i,
    m_axi_rvalid,
    RD_PNTR_WR,
    rst_full_gen_i,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] );
  output [0:0]WEBWE;
  output m_axi_rready;
  output [0:0]Q;
  output [0:0]\gic0.gc0.count_d2_reg[8] ;
  output [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input \rd_pntr_bin_reg[8] ;
  input \rd_pntr_bin_reg[8]_0 ;
  input m_aclk;
  input rst_full_ff_i;
  input m_axi_rvalid;
  input [7:0]RD_PNTR_WR;
  input rst_full_gen_i;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;

  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire [0:0]WEBWE;
  wire [3:0]\c1/v1_reg ;
  wire [3:0]\c2/v1_reg ;
  wire [0:0]\gic0.gc0.count_d2_reg[8] ;
  wire m_aclk;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  wire \rd_pntr_bin_reg[8] ;
  wire \rd_pntr_bin_reg[8]_0 ;
  wire rst_full_ff_i;
  wire rst_full_gen_i;

  v7_bd_axi_chip2chip_0_0_wr_status_flags_as__parameterized1 \gwas.wsts 
       (.E(WEBWE),
        .m_aclk(m_aclk),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .\rd_pntr_bin_reg[8] (\rd_pntr_bin_reg[8] ),
        .\rd_pntr_bin_reg[8]_0 (\rd_pntr_bin_reg[8]_0 ),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ));
  v7_bd_axi_chip2chip_0_0_wr_bin_cntr__parameterized1 wpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(WEBWE),
        .Q(Q),
        .RD_PNTR_WR(RD_PNTR_WR),
        .\gic0.gc0.count_d2_reg[8]_0 (\gic0.gc0.count_d2_reg[8] ),
        .m_aclk(m_aclk),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module v7_bd_axi_chip2chip_0_0_wr_logic__parameterized2
   (prog_full_i,
    E,
    \wr_pntr_gc_reg[3] ,
    m_axi_lite_aclk,
    rst_full_ff_i,
    rst_full_gen_i,
    tx_fifo_we,
    \rd_pntr_bin_reg[3] ,
    Q);
  output prog_full_i;
  output [0:0]E;
  output [3:0]\wr_pntr_gc_reg[3] ;
  input m_axi_lite_aclk;
  input rst_full_ff_i;
  input rst_full_gen_i;
  input tx_fifo_we;
  input [3:0]\rd_pntr_bin_reg[3] ;
  input [0:0]Q;

  wire [0:0]E;
  wire [0:0]Q;
  wire m_axi_lite_aclk;
  wire p_1_out;
  wire [4:3]plusOp_0;
  wire prog_full_i;
  wire ram_full_i;
  wire ram_full_i_0;
  wire [3:0]\rd_pntr_bin_reg[3] ;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire tx_fifo_we;
  wire [3:0]\wr_pntr_gc_reg[3] ;

  v7_bd_axi_chip2chip_0_0_wr_pf_as__parameterized2 \gwas.gpf.wrpf 
       (.D(plusOp_0),
        .Q(Q),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .p_1_out(p_1_out),
        .prog_full_i(prog_full_i),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
  v7_bd_axi_chip2chip_0_0_wr_status_flags_as__parameterized2 \gwas.wsts 
       (.E(E),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .p_1_out(p_1_out),
        .ram_full_i(ram_full_i),
        .ram_full_i_0(ram_full_i_0),
        .rst_full_ff_i(rst_full_ff_i),
        .tx_fifo_we(tx_fifo_we));
  v7_bd_axi_chip2chip_0_0_wr_bin_cntr__parameterized2 wpntr
       (.D(plusOp_0),
        .E(E),
        .Q(Q),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .p_1_out(p_1_out),
        .ram_full_i(ram_full_i),
        .ram_full_i_0(ram_full_i_0),
        .\rd_pntr_bin_reg[3] (\rd_pntr_bin_reg[3] ),
        .rst_full_gen_i(rst_full_gen_i),
        .tx_fifo_we(tx_fifo_we),
        .\wr_pntr_gc_reg[3] (\wr_pntr_gc_reg[3] ));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module v7_bd_axi_chip2chip_0_0_wr_logic__parameterized3
   (E,
    Q,
    \wr_pntr_gc_reg[3] ,
    clk_ph_out,
    rst_full_ff_i,
    axi_lite_rx_valid,
    rst_full_gen_i,
    \gic0.gc0.count_d1_reg[2] ,
    \rd_pntr_bin_reg[3] ,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] );
  output [0:0]E;
  output [3:0]Q;
  output [3:0]\wr_pntr_gc_reg[3] ;
  input clk_ph_out;
  input rst_full_ff_i;
  input axi_lite_rx_valid;
  input rst_full_gen_i;
  input \gic0.gc0.count_d1_reg[2] ;
  input [3:0]\rd_pntr_bin_reg[3] ;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;

  wire [0:0]E;
  wire [3:0]Q;
  wire axi_lite_rx_valid;
  wire clk_ph_out;
  wire \gic0.gc0.count_d1_reg[2] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  wire [3:0]\rd_pntr_bin_reg[3] ;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire wpntr_n_0;
  wire [3:0]\wr_pntr_gc_reg[3] ;

  v7_bd_axi_chip2chip_0_0_wr_status_flags_as__parameterized3 \gwas.wsts 
       (.E(E),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .clk_ph_out(clk_ph_out),
        .\gic0.gc0.count_d1_reg[2] (\gic0.gc0.count_d1_reg[2] ),
        .\rd_pntr_bin_reg[2] (wpntr_n_0),
        .rst_full_ff_i(rst_full_ff_i),
        .rst_full_gen_i(rst_full_gen_i));
  v7_bd_axi_chip2chip_0_0_wr_bin_cntr__parameterized3 wpntr
       (.E(E),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .ram_full_i_reg(wpntr_n_0),
        .\rd_pntr_bin_reg[3] (\rd_pntr_bin_reg[3] ),
        .\wr_pntr_gc_reg[3] (\wr_pntr_gc_reg[3] ));
endmodule

(* ORIG_REF_NAME = "wr_pf_as" *) 
module v7_bd_axi_chip2chip_0_0_wr_pf_as
   (aw_ch_fc,
    clk_ph_out,
    rst_full_ff_i,
    rst_full_gen_i,
    p_1_out,
    Q,
    wr_pntr_plus1_pad,
    S,
    \gic0.gc0.count_d1_reg[6] ,
    \gic0.gc0.count_d1_reg[7] );
  output aw_ch_fc;
  input clk_ph_out;
  input rst_full_ff_i;
  input rst_full_gen_i;
  input p_1_out;
  input [0:0]Q;
  input [7:0]wr_pntr_plus1_pad;
  input [2:0]S;
  input [3:0]\gic0.gc0.count_d1_reg[6] ;
  input [0:0]\gic0.gc0.count_d1_reg[7] ;

  wire [0:0]Q;
  wire [2:0]S;
  wire aw_ch_fc;
  wire clk_ph_out;
  wire [7:1]diff_pntr;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_0 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_1 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_2 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_3 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_0 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_1 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_2 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_3 ;
  wire [3:0]\gic0.gc0.count_d1_reg[6] ;
  wire [0:0]\gic0.gc0.count_d1_reg[7] ;
  wire \gpf1.prog_full_i_i_1_n_0 ;
  wire \gpf1.prog_full_i_i_2_n_0 ;
  wire \gpf1.prog_full_i_i_3_n_0 ;
  wire p_1_out;
  wire [8:0]plusOp_1;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire [7:0]wr_pntr_plus1_pad;
  wire [3:0]\NLW_gdiff.diff_pntr_pad_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gdiff.diff_pntr_pad_reg[8]_i_1_O_UNCONNECTED ;

  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(plusOp_1[2]),
        .Q(diff_pntr[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(plusOp_1[3]),
        .Q(diff_pntr[2]));
  CARRY4 \gdiff.diff_pntr_pad_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gdiff.diff_pntr_pad_reg[3]_i_1_n_0 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_1 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_2 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(wr_pntr_plus1_pad[3:0]),
        .O(plusOp_1[3:0]),
        .S({S,1'b0}));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(plusOp_1[4]),
        .Q(diff_pntr[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(plusOp_1[5]),
        .Q(diff_pntr[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(plusOp_1[6]),
        .Q(diff_pntr[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(plusOp_1[7]),
        .Q(diff_pntr[6]));
  CARRY4 \gdiff.diff_pntr_pad_reg[7]_i_1 
       (.CI(\gdiff.diff_pntr_pad_reg[3]_i_1_n_0 ),
        .CO({\gdiff.diff_pntr_pad_reg[7]_i_1_n_0 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_1 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_2 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(wr_pntr_plus1_pad[7:4]),
        .O(plusOp_1[7:4]),
        .S(\gic0.gc0.count_d1_reg[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(plusOp_1[8]),
        .Q(diff_pntr[7]));
  CARRY4 \gdiff.diff_pntr_pad_reg[8]_i_1 
       (.CI(\gdiff.diff_pntr_pad_reg[7]_i_1_n_0 ),
        .CO(\NLW_gdiff.diff_pntr_pad_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gdiff.diff_pntr_pad_reg[8]_i_1_O_UNCONNECTED [3:1],plusOp_1[8]}),
        .S({1'b0,1'b0,1'b0,\gic0.gc0.count_d1_reg[7] }));
  LUT6 #(
    .INIT(64'h88FF88F8880088F8)) 
    \gpf1.prog_full_i_i_1 
       (.I0(\gpf1.prog_full_i_i_2_n_0 ),
        .I1(\gpf1.prog_full_i_i_3_n_0 ),
        .I2(diff_pntr[7]),
        .I3(rst_full_gen_i),
        .I4(p_1_out),
        .I5(aw_ch_fc),
        .O(\gpf1.prog_full_i_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \gpf1.prog_full_i_i_2 
       (.I0(diff_pntr[2]),
        .I1(diff_pntr[1]),
        .I2(rst_full_gen_i),
        .O(\gpf1.prog_full_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gpf1.prog_full_i_i_3 
       (.I0(diff_pntr[6]),
        .I1(diff_pntr[5]),
        .I2(diff_pntr[4]),
        .I3(diff_pntr[3]),
        .O(\gpf1.prog_full_i_i_3_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gpf1.prog_full_i_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\gpf1.prog_full_i_i_1_n_0 ),
        .PRE(rst_full_ff_i),
        .Q(aw_ch_fc));
endmodule

(* ORIG_REF_NAME = "wr_pf_as" *) 
module v7_bd_axi_chip2chip_0_0_wr_pf_as_52
   (ar_ch_fc,
    clk_ph_out,
    rst_full_ff_i,
    rst_full_gen_i,
    p_1_out,
    Q,
    wr_pntr_plus1_pad,
    S,
    \gic0.gc0.count_d1_reg[6] ,
    \gic0.gc0.count_d1_reg[7] );
  output ar_ch_fc;
  input clk_ph_out;
  input rst_full_ff_i;
  input rst_full_gen_i;
  input p_1_out;
  input [0:0]Q;
  input [7:0]wr_pntr_plus1_pad;
  input [2:0]S;
  input [3:0]\gic0.gc0.count_d1_reg[6] ;
  input [0:0]\gic0.gc0.count_d1_reg[7] ;

  wire [0:0]Q;
  wire [2:0]S;
  wire ar_ch_fc;
  wire clk_ph_out;
  wire [7:1]diff_pntr;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_0 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_1 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_2 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_3 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_4 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_5 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_6 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_7 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_0 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_1 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_2 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_3 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_4 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_5 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_6 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_7 ;
  wire \gdiff.diff_pntr_pad_reg[8]_i_1_n_7 ;
  wire [3:0]\gic0.gc0.count_d1_reg[6] ;
  wire [0:0]\gic0.gc0.count_d1_reg[7] ;
  wire \gpf1.prog_full_i_i_1__0_n_0 ;
  wire \gpf1.prog_full_i_i_2__0_n_0 ;
  wire \gpf1.prog_full_i_i_3__0_n_0 ;
  wire p_1_out;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire [7:0]wr_pntr_plus1_pad;
  wire [3:0]\NLW_gdiff.diff_pntr_pad_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gdiff.diff_pntr_pad_reg[8]_i_1_O_UNCONNECTED ;

  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(\gdiff.diff_pntr_pad_reg[3]_i_1_n_5 ),
        .Q(diff_pntr[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(\gdiff.diff_pntr_pad_reg[3]_i_1_n_4 ),
        .Q(diff_pntr[2]));
  CARRY4 \gdiff.diff_pntr_pad_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gdiff.diff_pntr_pad_reg[3]_i_1_n_0 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_1 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_2 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(wr_pntr_plus1_pad[3:0]),
        .O({\gdiff.diff_pntr_pad_reg[3]_i_1_n_4 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_5 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_6 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_7 }),
        .S({S,1'b0}));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(\gdiff.diff_pntr_pad_reg[7]_i_1_n_7 ),
        .Q(diff_pntr[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(\gdiff.diff_pntr_pad_reg[7]_i_1_n_6 ),
        .Q(diff_pntr[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(\gdiff.diff_pntr_pad_reg[7]_i_1_n_5 ),
        .Q(diff_pntr[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(\gdiff.diff_pntr_pad_reg[7]_i_1_n_4 ),
        .Q(diff_pntr[6]));
  CARRY4 \gdiff.diff_pntr_pad_reg[7]_i_1 
       (.CI(\gdiff.diff_pntr_pad_reg[3]_i_1_n_0 ),
        .CO({\gdiff.diff_pntr_pad_reg[7]_i_1_n_0 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_1 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_2 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(wr_pntr_plus1_pad[7:4]),
        .O({\gdiff.diff_pntr_pad_reg[7]_i_1_n_4 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_5 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_6 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_7 }),
        .S(\gic0.gc0.count_d1_reg[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(Q),
        .D(\gdiff.diff_pntr_pad_reg[8]_i_1_n_7 ),
        .Q(diff_pntr[7]));
  CARRY4 \gdiff.diff_pntr_pad_reg[8]_i_1 
       (.CI(\gdiff.diff_pntr_pad_reg[7]_i_1_n_0 ),
        .CO(\NLW_gdiff.diff_pntr_pad_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gdiff.diff_pntr_pad_reg[8]_i_1_O_UNCONNECTED [3:1],\gdiff.diff_pntr_pad_reg[8]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,\gic0.gc0.count_d1_reg[7] }));
  LUT6 #(
    .INIT(64'h88FF88F8880088F8)) 
    \gpf1.prog_full_i_i_1__0 
       (.I0(\gpf1.prog_full_i_i_2__0_n_0 ),
        .I1(\gpf1.prog_full_i_i_3__0_n_0 ),
        .I2(diff_pntr[7]),
        .I3(rst_full_gen_i),
        .I4(p_1_out),
        .I5(ar_ch_fc),
        .O(\gpf1.prog_full_i_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \gpf1.prog_full_i_i_2__0 
       (.I0(diff_pntr[2]),
        .I1(diff_pntr[1]),
        .I2(rst_full_gen_i),
        .O(\gpf1.prog_full_i_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gpf1.prog_full_i_i_3__0 
       (.I0(diff_pntr[6]),
        .I1(diff_pntr[5]),
        .I2(diff_pntr[4]),
        .I3(diff_pntr[3]),
        .O(\gpf1.prog_full_i_i_3__0_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gpf1.prog_full_i_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\gpf1.prog_full_i_i_1__0_n_0 ),
        .PRE(rst_full_ff_i),
        .Q(ar_ch_fc));
endmodule

(* ORIG_REF_NAME = "wr_pf_as" *) 
module v7_bd_axi_chip2chip_0_0_wr_pf_as__parameterized0
   (wd_ch_fc,
    clk_ph_out,
    rst_full_ff_i,
    rst_full_gen_i,
    p_1_out,
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ,
    wr_pntr_plus1_pad,
    S,
    \gic0.gc0.count_d1_reg[6] ,
    \gic0.gc0.count_d1_reg[8] );
  output wd_ch_fc;
  input clk_ph_out;
  input rst_full_ff_i;
  input rst_full_gen_i;
  input p_1_out;
  input [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  input [8:0]wr_pntr_plus1_pad;
  input [2:0]S;
  input [3:0]\gic0.gc0.count_d1_reg[6] ;
  input [1:0]\gic0.gc0.count_d1_reg[8] ;

  wire [2:0]S;
  wire clk_ph_out;
  wire [8:1]diff_pntr;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_0 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_1 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_2 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_3 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_4 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_5 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_6 ;
  wire \gdiff.diff_pntr_pad_reg[3]_i_1_n_7 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_0 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_1 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_2 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_3 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_4 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_5 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_6 ;
  wire \gdiff.diff_pntr_pad_reg[7]_i_1_n_7 ;
  wire \gdiff.diff_pntr_pad_reg[9]_i_1_n_3 ;
  wire \gdiff.diff_pntr_pad_reg[9]_i_1_n_6 ;
  wire \gdiff.diff_pntr_pad_reg[9]_i_1_n_7 ;
  wire [3:0]\gic0.gc0.count_d1_reg[6] ;
  wire [1:0]\gic0.gc0.count_d1_reg[8] ;
  wire \gpf1.prog_full_i_i_1__1_n_0 ;
  wire \gpf1.prog_full_i_i_2__1_n_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ;
  wire p_1_out;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire wd_ch_fc;
  wire [8:0]wr_pntr_plus1_pad;
  wire [3:1]\NLW_gdiff.diff_pntr_pad_reg[9]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_gdiff.diff_pntr_pad_reg[9]_i_1_O_UNCONNECTED ;

  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gdiff.diff_pntr_pad_reg[3]_i_1_n_5 ),
        .Q(diff_pntr[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gdiff.diff_pntr_pad_reg[3]_i_1_n_4 ),
        .Q(diff_pntr[2]));
  CARRY4 \gdiff.diff_pntr_pad_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gdiff.diff_pntr_pad_reg[3]_i_1_n_0 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_1 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_2 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(wr_pntr_plus1_pad[3:0]),
        .O({\gdiff.diff_pntr_pad_reg[3]_i_1_n_4 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_5 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_6 ,\gdiff.diff_pntr_pad_reg[3]_i_1_n_7 }),
        .S({S,1'b0}));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gdiff.diff_pntr_pad_reg[7]_i_1_n_7 ),
        .Q(diff_pntr[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gdiff.diff_pntr_pad_reg[7]_i_1_n_6 ),
        .Q(diff_pntr[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gdiff.diff_pntr_pad_reg[7]_i_1_n_5 ),
        .Q(diff_pntr[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gdiff.diff_pntr_pad_reg[7]_i_1_n_4 ),
        .Q(diff_pntr[6]));
  CARRY4 \gdiff.diff_pntr_pad_reg[7]_i_1 
       (.CI(\gdiff.diff_pntr_pad_reg[3]_i_1_n_0 ),
        .CO({\gdiff.diff_pntr_pad_reg[7]_i_1_n_0 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_1 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_2 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(wr_pntr_plus1_pad[7:4]),
        .O({\gdiff.diff_pntr_pad_reg[7]_i_1_n_4 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_5 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_6 ,\gdiff.diff_pntr_pad_reg[7]_i_1_n_7 }),
        .S(\gic0.gc0.count_d1_reg[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gdiff.diff_pntr_pad_reg[9]_i_1_n_7 ),
        .Q(diff_pntr[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] ),
        .D(\gdiff.diff_pntr_pad_reg[9]_i_1_n_6 ),
        .Q(diff_pntr[8]));
  CARRY4 \gdiff.diff_pntr_pad_reg[9]_i_1 
       (.CI(\gdiff.diff_pntr_pad_reg[7]_i_1_n_0 ),
        .CO({\NLW_gdiff.diff_pntr_pad_reg[9]_i_1_CO_UNCONNECTED [3:1],\gdiff.diff_pntr_pad_reg[9]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,wr_pntr_plus1_pad[8]}),
        .O({\NLW_gdiff.diff_pntr_pad_reg[9]_i_1_O_UNCONNECTED [3:2],\gdiff.diff_pntr_pad_reg[9]_i_1_n_6 ,\gdiff.diff_pntr_pad_reg[9]_i_1_n_7 }),
        .S({1'b0,1'b0,\gic0.gc0.count_d1_reg[8] }));
  LUT6 #(
    .INIT(64'h00FF00A8000000A8)) 
    \gpf1.prog_full_i_i_1__1 
       (.I0(diff_pntr[8]),
        .I1(diff_pntr[7]),
        .I2(\gpf1.prog_full_i_i_2__1_n_0 ),
        .I3(rst_full_gen_i),
        .I4(p_1_out),
        .I5(wd_ch_fc),
        .O(\gpf1.prog_full_i_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gpf1.prog_full_i_i_2__1 
       (.I0(diff_pntr[3]),
        .I1(diff_pntr[4]),
        .I2(diff_pntr[1]),
        .I3(diff_pntr[2]),
        .I4(diff_pntr[6]),
        .I5(diff_pntr[5]),
        .O(\gpf1.prog_full_i_i_2__1_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gpf1.prog_full_i_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\gpf1.prog_full_i_i_1__1_n_0 ),
        .PRE(rst_full_ff_i),
        .Q(wd_ch_fc));
endmodule

(* ORIG_REF_NAME = "wr_pf_as" *) 
module v7_bd_axi_chip2chip_0_0_wr_pf_as__parameterized2
   (prog_full_i,
    m_axi_lite_aclk,
    rst_full_ff_i,
    rst_full_gen_i,
    p_1_out,
    D,
    Q);
  output prog_full_i;
  input m_axi_lite_aclk;
  input rst_full_ff_i;
  input rst_full_gen_i;
  input p_1_out;
  input [1:0]D;
  input [0:0]Q;

  wire [1:0]D;
  wire [0:0]Q;
  wire [3:2]diff_pntr;
  wire \gpf1.prog_full_i_i_1__2_n_0 ;
  wire m_axi_lite_aclk;
  wire p_1_out;
  wire prog_full_i;
  wire rst_full_ff_i;
  wire rst_full_gen_i;

  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[3] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(Q),
        .D(D[0]),
        .Q(diff_pntr[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gdiff.diff_pntr_pad_reg[4] 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .CLR(Q),
        .D(D[1]),
        .Q(diff_pntr[3]));
  LUT5 #(
    .INIT(32'h0F080008)) 
    \gpf1.prog_full_i_i_1__2 
       (.I0(diff_pntr[3]),
        .I1(diff_pntr[2]),
        .I2(rst_full_gen_i),
        .I3(p_1_out),
        .I4(prog_full_i),
        .O(\gpf1.prog_full_i_i_1__2_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gpf1.prog_full_i_reg 
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(\gpf1.prog_full_i_i_1__2_n_0 ),
        .PRE(rst_full_ff_i),
        .Q(prog_full_i));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_wr_status_flags_as
   (p_1_out,
    \gic0.gc0.count_reg[7] ,
    E,
    m_axi_bready,
    \gpr1.dout_i_reg[0] ,
    \gpr1.dout_i_reg[0]_0 ,
    ram_full_i,
    m_aclk,
    rst_full_ff_i,
    m_axi_bvalid,
    Q);
  output p_1_out;
  output \gic0.gc0.count_reg[7] ;
  output [0:0]E;
  output m_axi_bready;
  output \gpr1.dout_i_reg[0] ;
  output \gpr1.dout_i_reg[0]_0 ;
  input ram_full_i;
  input m_aclk;
  input rst_full_ff_i;
  input m_axi_bvalid;
  input [1:0]Q;

  wire [0:0]E;
  wire [1:0]Q;
  wire \gic0.gc0.count_reg[7] ;
  wire \gpr1.dout_i_reg[0] ;
  wire \gpr1.dout_i_reg[0]_0 ;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire p_1_out;
  wire ram_full_i;
  wire rst_full_ff_i;

  LUT5 #(
    .INIT(32'h00000004)) 
    RAM_reg_0_63_0_2_i_1
       (.I0(p_1_out),
        .I1(m_axi_bvalid),
        .I2(\gic0.gc0.count_reg[7] ),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\gpr1.dout_i_reg[0] ));
  LUT5 #(
    .INIT(32'h04000000)) 
    RAM_reg_192_255_0_2_i_1
       (.I0(p_1_out),
        .I1(m_axi_bvalid),
        .I2(\gic0.gc0.count_reg[7] ),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\gpr1.dout_i_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gic0.gc0.count_d1[7]_i_1 
       (.I0(\gic0.gc0.count_reg[7] ),
        .I1(m_axi_bvalid),
        .I2(p_1_out),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT1 #(
    .INIT(2'h1)) 
    m_axi_bready_INST_0
       (.I0(\gic0.gc0.count_reg[7] ),
        .O(m_axi_bready));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(p_1_out));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(\gic0.gc0.count_reg[7] ));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_wr_status_flags_as_19
   (\gic0.gc0.count_reg[0] ,
    p_1_out,
    E,
    wr_pntr_plus1_pad,
    ram_full_i,
    clk_ph_out,
    rst_full_ff_i,
    p_0_in,
    aw_ch_data_valid);
  output \gic0.gc0.count_reg[0] ;
  output p_1_out;
  output [0:0]E;
  output [0:0]wr_pntr_plus1_pad;
  input ram_full_i;
  input clk_ph_out;
  input rst_full_ff_i;
  input p_0_in;
  input aw_ch_data_valid;

  wire [0:0]E;
  wire aw_ch_data_valid;
  wire clk_ph_out;
  wire \gic0.gc0.count_reg[0] ;
  wire p_0_in;
  wire p_1_out;
  wire ram_full_i;
  wire rst_full_ff_i;
  wire [0:0]wr_pntr_plus1_pad;

  LUT4 #(
    .INIT(16'h0400)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_2 
       (.I0(p_1_out),
        .I1(p_0_in),
        .I2(\gic0.gc0.count_reg[0] ),
        .I3(aw_ch_data_valid),
        .O(E));
  LUT4 #(
    .INIT(16'h0400)) 
    \gdiff.diff_pntr_pad[3]_i_2 
       (.I0(p_1_out),
        .I1(p_0_in),
        .I2(\gic0.gc0.count_reg[0] ),
        .I3(aw_ch_data_valid),
        .O(wr_pntr_plus1_pad));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(p_1_out));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(\gic0.gc0.count_reg[0] ));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_wr_status_flags_as_53
   (\gic0.gc0.count_reg[7] ,
    p_1_out,
    E,
    wr_pntr_plus1_pad,
    ram_full_i,
    clk_ph_out,
    rst_full_ff_i,
    p_0_in,
    ar_ch_data_valid);
  output \gic0.gc0.count_reg[7] ;
  output p_1_out;
  output [0:0]E;
  output [0:0]wr_pntr_plus1_pad;
  input ram_full_i;
  input clk_ph_out;
  input rst_full_ff_i;
  input p_0_in;
  input ar_ch_data_valid;

  wire [0:0]E;
  wire ar_ch_data_valid;
  wire clk_ph_out;
  wire \gic0.gc0.count_reg[7] ;
  wire p_0_in;
  wire p_1_out;
  wire ram_full_i;
  wire rst_full_ff_i;
  wire [0:0]wr_pntr_plus1_pad;

  LUT4 #(
    .INIT(16'h0400)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_2__0 
       (.I0(p_1_out),
        .I1(p_0_in),
        .I2(\gic0.gc0.count_reg[7] ),
        .I3(ar_ch_data_valid),
        .O(E));
  LUT4 #(
    .INIT(16'h0400)) 
    \gdiff.diff_pntr_pad[3]_i_2__0 
       (.I0(p_1_out),
        .I1(p_0_in),
        .I2(\gic0.gc0.count_reg[7] ),
        .I3(ar_ch_data_valid),
        .O(wr_pntr_plus1_pad));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(p_1_out));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(\gic0.gc0.count_reg[7] ));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_wr_status_flags_as__parameterized0
   (\gic0.gc0.count_reg[8] ,
    p_1_out,
    E,
    wr_pntr_plus1_pad,
    v1_reg,
    v1_reg_0,
    clk_ph_out,
    rst_full_ff_i,
    rst_full_gen_i,
    p_0_in,
    wd_ch_data_valid);
  output \gic0.gc0.count_reg[8] ;
  output p_1_out;
  output [0:0]E;
  output [0:0]wr_pntr_plus1_pad;
  input [4:0]v1_reg;
  input [4:0]v1_reg_0;
  input clk_ph_out;
  input rst_full_ff_i;
  input rst_full_gen_i;
  input p_0_in;
  input wd_ch_data_valid;

  wire [0:0]E;
  wire clk_ph_out;
  wire comp1;
  wire \gic0.gc0.count_reg[8] ;
  wire p_0_in;
  wire p_1_out;
  wire ram_full_i;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;
  wire wd_ch_data_valid;
  wire [0:0]wr_pntr_plus1_pad;

  LUT4 #(
    .INIT(16'h0400)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_2__1 
       (.I0(p_1_out),
        .I1(p_0_in),
        .I2(\gic0.gc0.count_reg[8] ),
        .I3(wd_ch_data_valid),
        .O(E));
  v7_bd_axi_chip2chip_0_0_compare__parameterized2 c1
       (.comp1(comp1),
        .v1_reg(v1_reg));
  v7_bd_axi_chip2chip_0_0_compare__parameterized3 c2
       (.E(E),
        .comp1(comp1),
        .ram_full_i(ram_full_i),
        .rst_full_gen_i(rst_full_gen_i),
        .v1_reg_0(v1_reg_0));
  LUT4 #(
    .INIT(16'h0400)) 
    \gdiff.diff_pntr_pad[3]_i_2__1 
       (.I0(p_1_out),
        .I1(p_0_in),
        .I2(\gic0.gc0.count_reg[8] ),
        .I3(wd_ch_data_valid),
        .O(wr_pntr_plus1_pad));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(p_1_out));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(\gic0.gc0.count_reg[8] ));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_wr_status_flags_as__parameterized1
   (E,
    m_axi_rready,
    v1_reg,
    \rd_pntr_bin_reg[8] ,
    v1_reg_0,
    \rd_pntr_bin_reg[8]_0 ,
    m_aclk,
    rst_full_ff_i,
    m_axi_rvalid,
    rst_full_gen_i);
  output [0:0]E;
  output m_axi_rready;
  input [3:0]v1_reg;
  input \rd_pntr_bin_reg[8] ;
  input [3:0]v1_reg_0;
  input \rd_pntr_bin_reg[8]_0 ;
  input m_aclk;
  input rst_full_ff_i;
  input m_axi_rvalid;
  input rst_full_gen_i;

  wire [0:0]E;
  wire comp1;
  wire m_aclk;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire p_1_out;
  wire ram_full_i;
  wire ram_full_i_reg_n_0;
  wire \rd_pntr_bin_reg[8] ;
  wire \rd_pntr_bin_reg[8]_0 ;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;

  LUT3 #(
    .INIT(8'h04)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(ram_full_i_reg_n_0),
        .I1(m_axi_rvalid),
        .I2(p_1_out),
        .O(E));
  v7_bd_axi_chip2chip_0_0_compare__parameterized6 c1
       (.comp1(comp1),
        .\rd_pntr_bin_reg[8] (\rd_pntr_bin_reg[8] ),
        .v1_reg(v1_reg));
  v7_bd_axi_chip2chip_0_0_compare__parameterized7 c2
       (.comp1(comp1),
        .m_axi_rvalid(m_axi_rvalid),
        .p_1_out(p_1_out),
        .ram_full_i(ram_full_i),
        .ram_full_i_reg(ram_full_i_reg_n_0),
        .\rd_pntr_bin_reg[8] (\rd_pntr_bin_reg[8]_0 ),
        .rst_full_gen_i(rst_full_gen_i),
        .v1_reg_0(v1_reg_0));
  LUT1 #(
    .INIT(2'h1)) 
    m_axi_rready_INST_0
       (.I0(ram_full_i_reg_n_0),
        .O(m_axi_rready));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(p_1_out));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(m_aclk),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(ram_full_i_reg_n_0));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_wr_status_flags_as__parameterized2
   (p_1_out,
    ram_full_i,
    E,
    ram_full_i_0,
    m_axi_lite_aclk,
    rst_full_ff_i,
    tx_fifo_we);
  output p_1_out;
  output ram_full_i;
  output [0:0]E;
  input ram_full_i_0;
  input m_axi_lite_aclk;
  input rst_full_ff_i;
  input tx_fifo_we;

  wire [0:0]E;
  wire m_axi_lite_aclk;
  wire p_1_out;
  wire ram_full_i;
  wire ram_full_i_0;
  wire rst_full_ff_i;
  wire tx_fifo_we;

  LUT3 #(
    .INIT(8'h04)) 
    \gic0.gc0.count_d1[3]_i_1__0 
       (.I0(ram_full_i),
        .I1(tx_fifo_we),
        .I2(p_1_out),
        .O(E));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(ram_full_i_0),
        .PRE(rst_full_ff_i),
        .Q(p_1_out));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(m_axi_lite_aclk),
        .CE(1'b1),
        .D(ram_full_i_0),
        .PRE(rst_full_ff_i),
        .Q(ram_full_i));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module v7_bd_axi_chip2chip_0_0_wr_status_flags_as__parameterized3
   (E,
    clk_ph_out,
    rst_full_ff_i,
    axi_lite_rx_valid,
    rst_full_gen_i,
    \rd_pntr_bin_reg[2] ,
    \gic0.gc0.count_d1_reg[2] );
  output [0:0]E;
  input clk_ph_out;
  input rst_full_ff_i;
  input axi_lite_rx_valid;
  input rst_full_gen_i;
  input \rd_pntr_bin_reg[2] ;
  input \gic0.gc0.count_d1_reg[2] ;

  wire [0:0]E;
  wire axi_lite_rx_valid;
  wire clk_ph_out;
  wire \gic0.gc0.count_d1_reg[2] ;
  wire p_1_out;
  wire ram_full_i;
  wire ram_full_i_reg_n_0;
  wire \rd_pntr_bin_reg[2] ;
  wire rst_full_ff_i;
  wire rst_full_gen_i;

  LUT3 #(
    .INIT(8'h04)) 
    \gic0.gc0.count_d1[3]_i_1 
       (.I0(ram_full_i_reg_n_0),
        .I1(axi_lite_rx_valid),
        .I2(p_1_out),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFFFFFF00040000)) 
    ram_full_fb_i_i_1
       (.I0(p_1_out),
        .I1(axi_lite_rx_valid),
        .I2(ram_full_i_reg_n_0),
        .I3(rst_full_gen_i),
        .I4(\rd_pntr_bin_reg[2] ),
        .I5(\gic0.gc0.count_d1_reg[2] ),
        .O(ram_full_i));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(p_1_out));
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ram_full_i),
        .PRE(rst_full_ff_i),
        .Q(ram_full_i_reg_n_0));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
